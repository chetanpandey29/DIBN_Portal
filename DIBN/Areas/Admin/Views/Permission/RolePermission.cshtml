@model DIBN.Areas.Admin.Models.RoleViewModel.RolePermissionList

@{
    ViewData["Title"] = "RolePermission";
}
<style>
    .bg-gray {
        background-color: gray;
    }
</style>
<div id="loader">
    <div class="spinner-1">
        <div class="center-div-1">
            <div class="loader-circle-75">
            </div>
        </div>
    </div>
</div>
<input asp-for="@Model.Module" type="hidden" id="Module" value="@Model.Module" />
@if (Model.allowedModule.Contains("View"))
{
    <div id="View">
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-body">
                        <h4 class="card-title text-center">
                            Role(s)
                        </h4>
                        <hr style="height:1px;" class="text-theme" />
                        <form asp-action="RolePermission" asp-controller="Permission" method="get">
                            <div class="col-md-12">
                                <div class="col-md-6 float-start">
                                    @Html.DropDownListFor(w => w.Id, Model.Roles, "Select Role", new { @class = "form-control form-select single-line" })
                                    <span asp-validation-for="Id" class="text-danger"></span>
                                </div>
                                <input type="hidden" name="name" value="@Model.Module" />
                                <div class="col-md-6 float-end">
                                    <input type="submit" value="Show" class="btn btn-theme ms-4" />
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        @if (Model.permissionCount > 0)
        {
            <div class="row" id="invalidPermission">
                <div class="col-12">
                    <div class="card">
                        <div class="card-body">
                            <input type="hidden" asp-for="@Model.RoleId" id="roleId" />
                            <input type="hidden" asp-for="@Model.Role" id="roleName" />
                            <div class="col-md-4 float-start">
                                <h4 class="card-title mb-2">Modules</h4>

                                @foreach (var item in Model.Modules)
                                {
                                    <p style="margin-top:15px;">
                                        @item.ModuleKeyword
                                    </p>
                                }
                            </div>
                            <div class="col-md-8 float-end">
                                @foreach (var item in Model.Permissions)
                                {
                                    <span class="card-title ms-4 mb-2 text-center">
                                        @item.PermissionName
                                    </span>

                                }
                                <div>
                                    @{
                                        List<string> permission = new List<string>();
                                        permission.Add("Insert");
                                        permission.Add("Update");
                                        permission.Add("View");
                                        permission.Add("Delete");
                                        List<int> permissionId = new List<int>();
                                        permissionId.Add(1);
                                        permissionId.Add(2);
                                        permissionId.Add(3);
                                        permissionId.Add(4);

                                    }

                                    @foreach (var item in Model.Modules)
                                    {
                                        <p style="margin-top:15px;">
                                            @for (var i = 0; i < Model.permissionCount; i++)
                                            {
                                                var allowed = false;
                                                @foreach (var checkPermission in Model.getRolePermissionByRoleIds)
                                                {

                                                    if (checkPermission.ModuleId == item.ModuleId && checkPermission.PermissionId == permissionId[i])
                                                    {
                                                        allowed = true;
                                                    }
                                                }
                                                @if (Model.Role != "DIBN")
                                                {
                                                    // Full permission
                                                    @if (item.ModuleName.StartsWith("PortalBalance") || item.ModuleName.StartsWith("Services"))
                                                    {
                                                        <span class="ms-5 text-center allow_@permission[i]">
                                                            <input class="form-check-input" type="checkbox" name="@item.ModuleId" id="allow_@item.ModuleId@permissionId[i]" value="@item.ModuleId" @(allowed ? "checked=checked" : null) onclick="removePermission(@item.ModuleId,'@permission[i]',@permissionId[i]);" />
                                                        </span>
                                                    }
                                                    else if (item.ModuleName.StartsWith("EmployeeServices") || item.ModuleName.StartsWith("CompanyServices") || item.ModuleName.StartsWith("SupportTickets"))// Only Insert and View
                                                    {
                                                        @if (@permissionId[i] == 1 || @permissionId[i] == 3)
                                                        {
                                                            <span class="ms-5 text-center allow_@permission[i]">
                                                                <input class="form-check-input" type="checkbox" name="@item.ModuleId" id="allow_@item.ModuleId@permissionId[i]" value="@item.ModuleId" @(allowed ? "checked=checked" : null) onclick="removePermission(@item.ModuleId,'@permission[i]',@permissionId[i]);" />
                                                            </span>
                                                        }
                                                        else
                                                        {
                                                            <span class="ms-5 text-center allow_@permission[i]">
                                                                <input class="form-check-input bg-gray" type="checkbox" name="@item.ModuleId" id="allow_@item.ModuleId@permissionId[i]" value="@item.ModuleId" />
                                                            </span>
                                                        }

                                                    }
                                                    else if (!item.ModuleName.StartsWith("AccountManagement") && !item.ModuleName.StartsWith("Enquiry")
                                                    && !item.ModuleName.StartsWith("ReportManagement") && !item.ModuleName.StartsWith("DocumentChecklist")
                                                    && !item.ModuleName.StartsWith("RMTeam")
                                                    && !item.ModuleName.StartsWith("Shareholders")
                                                    && !item.ModuleName.StartsWith("Notification")
                                                    && !item.ModuleName.StartsWith("Invoice")
                                                    && !item.ModuleName.StartsWith("CompanySubType")) // Only View
                                                    {
                                                        @if (@permissionId[i] == 3)
                                                        {
                                                            <span class="ms-5 text-center allow_@permission[i]">
                                                                <input class="form-check-input" type="checkbox" name="@item.ModuleId" id="allow_@item.ModuleId@permissionId[i]" value="@item.ModuleId" @(allowed ? "checked=checked" : null) onclick="removePermission(@item.ModuleId,'@permission[i]',@permissionId[i]);" />
                                                            </span>
                                                        }
                                                        else
                                                        {
                                                            <span class="ms-5 text-center allow_@permission[i]">
                                                                <input class="form-check-input bg-gray" type="checkbox" name="@item.ModuleId" id="allow_@item.ModuleId@permissionId[i]" value="@item.ModuleId" />
                                                            </span>
                                                        }
                                                    }
                                                    else
                                                    {
                                                        <span class="ms-5 text-center allow_@permission[i]">
                                                            <input class="form-check-input bg-gray" type="checkbox" name="@item.ModuleId" id="allow_@item.ModuleId@permissionId[i]" value="@item.ModuleId" />
                                                        </span>
                                                    }
                                                }
                                                else
                                                {
                                                    <span class="ms-5 text-center allow_@permission[i]">
                                                        <input class="form-check-input" type="checkbox" name="@item.ModuleId" id="allow_@item.ModuleId@permissionId[i]" value="@item.ModuleId" @(allowed ? "checked=checked" : null) onclick="removePermission(@item.ModuleId,'@permission[i]',@permissionId[i]);" />
                                                    </span>
                                                }
                                            }
                                        </p>
                                    }
                                </div>
                            </div>
                        </div>
                        <div class="mt-2 float-start">
                            <input type="button" class="btn btn-theme ms-4 mb-2" value="Save" name="Save" id="savePermissions" />
                        </div>
                    </div>
                </div>
            </div>
        }

    </div>

}

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<!-- Sweet Alerts-->
<script src="~/assets/libs/sweetalert2/sweetalert2.all.min.js"></script>
<link href="~/assets/libs/sweetalert2/sweetalert2.min.css" />
<script>
    $(function () {
        $("#savePermissions").prop('disabled', true);
        $(".allow_Insert input[type='checkbox']").attr("disabled", true);
        $(".allow_View input[type='checkbox']").attr("disabled", true);
        $(".allow_Delete input[type='checkbox']").attr("disabled", true);
        $(".allow_Update input[type='checkbox']").attr("disabled", true);
        
        var roleName = $("#roleName").val();
        if (roleName != "DIBN") {
            $(".bg-gray").attr("disabled", true);
        }
    });
</script>
<script>
    $(function () {
        $("#loader").show();
        var roleName = $("#roleName").val();

        var module = $("#Module").val();

        if ('@Model.allowedModule.Contains("Insert")' == "True"
            && '@Model.allowedModule.Contains("Update")' == "True"
            && '@Model.allowedModule.Contains("Delete")' == "True") {
            $("#savePermissions").prop('disabled', false);
            $(".allow_Insert input[type='checkbox']").attr("disabled", false);
            $(".allow_View input[type='checkbox']").attr("disabled", false);
            $(".allow_Delete input[type='checkbox']").attr("disabled", false);
            $(".allow_Update input[type='checkbox']").attr("disabled", false);
            if (roleName != "DIBN") {
                $(".bg-gray").attr("disabled", true);
            }
        }
        else {
            $("#savePermissions").prop('disabled', true);
            $(".allow_Insert input[type='checkbox']").attr("disabled", true);
            $(".allow_View input[type='checkbox']").attr("disabled", true);
            $(".allow_Delete input[type='checkbox']").attr("disabled", true);
            $(".allow_Update input[type='checkbox']").attr("disabled", true);
            if (roleName != "DIBN") {
                $(".bg-gray").attr("disabled", true);
            }
        }

        $("#loader").hide();
    });
</script>
<script>
    $('input[type="checkbox"]').change(function () {

        if (this.checked) {
            var fieldName = $(this).attr('name');
            $('input[name=' + fieldName + ']').not("[disabled]").each(function () {
                this.checked = true;
            });
        }
    });
    $(document).ready(function () {
        $("#loader").hide();
    });
</script>
<script>
    $("#savePermissions").click(function () {
        event.preventDefault();
        $("#savePermissions").attr("disabled", "disabled");
        $("#loader").show();
        const swalWithBootstrapButtons = Swal.mixin({
            customClass: {
                confirmButton: 'ms-3 btn btn-success',
                cancelButton: 'btn btn-danger'
            },
            buttonsStyling: false
        })
        var roleId = $("#roleId").val();
        var insertPermission = $('.allow_Insert input:checkbox:checked').map(function () {
            return $(this).val();
        }).get();
        var updatePermission = $('.allow_Update input:checkbox:checked').map(function () {
            return $(this).val();
        }).get();
        var viewPermission = $('.allow_View input:checkbox:checked').map(function () {
            return $(this).val();
        }).get();
        var deletePermission = $('.allow_Delete input:checkbox:checked').map(function () {
            return $(this).val();
        }).get();
        if (insertPermission != null || updatePermission != null || viewPermission != null || deletePermission != null || roleId != null) {
            $("#loader").show();
            $.ajax({
                url: "@Url.Action("SaveRolePermission","Permission")",
                method: "post",
                data: { "InsertPermission": insertPermission, "UpdatePermission": updatePermission, "ViewPermission": viewPermission, 'DeletePermission': deletePermission, "RoleId": roleId },
                success: function (response) {
                    $("#loader").hide();
                    if (response > 0) {
                        swalWithBootstrapButtons.fire({
                            title: 'Success.',
                            text: "Permission Added Successfully..!!",
                            icon: 'success'
                        }).then((result) => {
                            window.location.reload();
                        });
                    } else {
                        swalWithBootstrapButtons.fire({
                            title: 'Faild.',
                            text: "Due to Some Problem Selected Permission(s) were not allocated to this Role..!!",
                            icon: 'error'
                        }).then((result) => {
                            window.location.reload();
                        });
                    }
                }
            });
        }
        else {
            $("#loader").hide();
        }

    });
</script>
<script>
    function removePermission(moduleId, permission, permissionId) {
        var checked = $("#allow_" + moduleId + permissionId);
        var RoleId = $("#roleId").val();
        if (!$(checked).is(':checked')) {
            $.ajax({
                url: "@Url.Action("RemoveRolePermission","Permission")",
                method: "get",
                data: { "RoleId": RoleId, "ModuleId": moduleId, "PermissionId": permissionId },
                success: function (response) {

                }
            });
        }
    }
</script>