@model DIBN.Areas.Admin.Models.UserViewModel

@{
    ViewData["Title"] = "UserDetail";
}
<input type="hidden" name="Module" id="Module" value="@Model.Module" />
<div id="loader">
    <div class="spinner-1">
        <div class="center-div-1">
            <div class="loader-circle-75">
            </div>
        </div>
    </div>
</div>

<div class="row" id="View">
    <div class="col-12">
        <div class="card">
            <div class="card-body">
                <div class="row">
                    <div class="card-title">
                        <h5 class="text-dark float-start">@Html.DisplayFor(model => model.FirstName) @Html.Raw(" ") @Html.DisplayFor(model => model.LastName)'s Detail</h5>
                        @if (Model.IsActive && Model.IsLogin)
                        {
                            <span class="float-end fas fa-check text-success" style="font-size:26px;"></span>
                        }
                        else
                        {
                            <span class="float-end fas fa-times text-danger" style="font-size:26px;"></span>
                        }
                    </div>
                <hr/>
                </div>
                <dl class="row">
                    <dt class="col-sm-4">
                        @Html.DisplayNameFor(model => model.AccountNumber)
                    </dt>
                    <dd class="col-sm-8">
                        @Html.DisplayFor(model => model.AccountNumber)
                    </dd>
                    <dt class="col-sm-4">
                        Employee Name
                    </dt>
                    <dd class="col-sm-8">
                        @Html.DisplayFor(model => model.FirstName) @Html.Raw(" ") @Html.DisplayFor(model => model.LastName)
                    </dd>
                    <dt class="col-sm-4">
                        @Html.DisplayNameFor(model => model.Nationality)
                    </dt>
                    <dd class="col-sm-8">
                        @Html.DisplayFor(model => model.Nationality)
                    </dd>
                    <dt class="col-sm-4">
                        @Html.DisplayNameFor(model => model.PassportNumber)
                    </dt>
                    <dd class="col-sm-8">
                        @Html.DisplayFor(model => model.PassportNumber)
                    </dd>
                    <dt class="col-sm-4">
                        @Html.DisplayNameFor(model => model.Designation)
                    </dt>
                    <dd class="col-sm-8">
                        @* @if(Model.Designation.Contains("DIBN"))
                        {
                            @Html.Raw("DEVOTION")
                        }
                        else
                        { *@
                            @Html.DisplayFor(model => model.Designation)
                        @* } *@
                        
                    </dd>
                    <dt class="col-sm-4">
                        @Html.DisplayNameFor(model => model.VisaExpiryDate)
                    </dt>
                    <dd class="col-sm-8">
                        @Html.DisplayFor(model => model.VisaExpiryDate)
                    </dd>
                    <dt class="col-sm-4">
                        @Html.DisplayNameFor(model => model.InsuranceCompany)
                    </dt>
                    <dd class="col-sm-8">
                        @Html.DisplayFor(model => model.InsuranceCompany)
                    </dd>
                    <dt class="col-sm-4">
                        @Html.DisplayNameFor(model => model.InsuranceExpiryDate)
                    </dt>
                    <dd class="col-sm-8">
                        @Html.DisplayFor(model => model.InsuranceExpiryDate)
                    </dd>
                    <dt class="col-sm-4">
                        @Html.DisplayNameFor(model => model.EmailID)
                    </dt>
                    <dd class="col-sm-8">
                        @Html.DisplayFor(model => model.EmailID)
                    </dd>
                    <dt class="col-sm-4">
                        @Html.DisplayNameFor(model => model.PhoneNumber)
                    </dt>
                    <dd class="col-sm-8">
                        @Html.DisplayFor(model => model.PhoneNumber)
                    </dd>
                    <dt class="col-sm-4">
                        @Html.Raw("Is Login Allowed?")
                    </dt>
                    <dd class="col-sm-8">
                        @if (Model.IsLogin)
                        {
                            @Html.Raw("Yes")
                        }
                        else
                        {
                            @Html.Raw("No")
                        }
                    </dd>
                    <dt class="col-sm-4">
                        @Html.Raw("Is User Active?")
                    </dt>
                    <dd class="col-sm-8">
                        @if (Model.IsActive)
                        {
                            @Html.Raw("Yes")
                        }
                        else
                        {
                            @Html.Raw("No")
                        }
                    </dd>
                    @*<dt class="col-sm-4">
                        @Html.DisplayNameFor(model => model.CountryOfRecidence)
                    </dt>
                    <dd class="col-sm-8">
                        @Html.DisplayFor(model => model.CountryOfRecidence)
                    </dd>*@
                </dl>

                <div>
                    <input type="hidden" name="CompanyId" id="CompanyId" value="@Model.CompanyId"/>
                    <input type="hidden" name="Action" id="returnAction" value="@Model.Action"/>
                    @*<span class="text-white btn btn-theme Update" onclick="UpdateUser(@Model.Id)">Edit</span> 
                    <span class="text-white btn btn-theme Delete" onclick="RemoveUser(@Model.Id)">Delete</span> *@
                    @if (@Model.Action == "Employees")
                    {
                        <a class="text-white btn btn-theme" href="@Url.Action("GetCompanyEmployees","Company",new{Id=@Model.CompanyId,name=@Model.Module})">Back to List</a>
                    }
                    else
                    {
                        <a class="text-white btn btn-theme" href="@Url.Action("GetCompanyUsers","Company",new{Id=@Model.CompanyId,name=@Model.Module})">Back to List</a>
                    }
                    
                </div>

            </div>
        </div>
    </div>
</div>


<script src="~/lib/jquery/dist/jquery.min.js"></script>
<!-- Required datatable js -->
<script src="~/assets/libs/datatables.net/js/jquery.dataTables.min.js"></script>
<script src="~/assets/libs/datatables.net-bs4/js/dataTables.bootstrap4.min.js"></script>
<!-- Sweet Alerts-->
<script src="~/assets/libs/sweetalert2/sweetalert2.all.min.js"></script>
<link href="~/assets/libs/sweetalert2/sweetalert2.min.css" />
<script>
    $(document).ready(function () {
        $("#loader").hide();
    });
</script>
<script>
    function RemoveUser(Id){
        event.preventDefault();
        const swalWithBootstrapButtons = Swal.mixin({
          customClass: {
            confirmButton: 'ms-3 btn btn-success',
            cancelButton: 'btn btn-danger'
          },
          buttonsStyling: false
        })

        swalWithBootstrapButtons.fire({
          title: 'Are you sure?',
          text: "You won't be able to revert this!",
          icon: 'warning',
          showCancelButton: true,
          confirmButtonText: 'Yes, delete it!',
          cancelButtonText: 'No, cancel!',
          reverseButtons: true,
          showConfirmButton: true,
        }).then((result) => {
            if (result.isConfirmed) {
                $("#loader").show();
                $.ajax({
                    url: "@Url.Action("DeleteCompanyEmployee", "Company")",
                    method: "GET",
                    data:{"Id":Id},
                    success: function (response) {
                        if(response < 0){
                            $("#loader").hide();
                            swalWithBootstrapButtons.fire({
                                title: 'Error.',
                                text: "Currently You can not delete this User as this user is already associate with Company.",
                                icon: 'error'
                            }).then((result) => {
                                window.location.reload();
                            });
                        }
                        else{
                            $("#loader").show();
                            swalWithBootstrapButtons.fire({
                                title: 'Deleted.',
                                text: "User Deleted Successfully..!!",
                                icon: 'success'
                            }).then((result) => {
                                var module = $("#Module").val();
                                var action = $("#returnAction").val();
                                var companyId = $("#CompanyId").val();
                                $("#loader").hide();
                                if (action == "Employees") {
                                    var url = "@Url.Action("GetCompanyEmployees","Company")";
                                    window.location.href = url + "?Id=" + companyId + "&name=" + module;
                                }
                                else {
                                    var url = "@Url.Action("GetCompanyUsers","Company")";
                                    window.location.href = url + "?Id=" + companyId + "&name=" + module;
                                }
                            });
                        }
                    }
                });
            }
            else if (
                result.dismiss === Swal.DismissReason.cancel
              ) {
                $("#loader").hide();
                swalWithBootstrapButtons.fire(
                  'Cancelled',
                  'Cancled by User..!! :)',
                  'error'
                )
              }
        });
    }
</script>
<script>
    function UpdateUser(Id){
            var module = $("#Module").val();
            var url = "@Url.Action("EditCompanyEmployee","Company")";
            window.location.href=url+"?Id="+Id+"&name="+module;
        }
</script>

<script>
    $(function () {
        $("#Insert").hide();
        $("#View").hide();
        $(".Update").hide();
        $(".Delete").hide();
        $(".Details").hide();
    });
</script>
<script>
    $(function () {
        var module = $("#Module").val();
        $.ajax({
            url: "@Url.Action("GetRolePermissionsName", "Permission")",
            method: "GET",
            data: { "Module": "OtherCompanyEmployee" },
            success: function (RoleResponse) {
                $.ajax({
                    url: "@Url.Action("GetUserPermissionsName", "Permission")",
                    method: "GET",
                    data: { "Module": "OtherCompanyEmployee" },
                    success: function (UserResponse) {
                        if (UserResponse.length > 0) {
                            for (let i = 0; i < UserResponse.length; i++) {
                                $("#" + UserResponse[i]).show();
                                if (UserResponse[i] == "View") {
                                    $(".Details").show();
                                }
                                if (UserResponse[i] == "Update") {
                                    $("." + UserResponse[i]).show();
                                }
                                if (UserResponse[i] == "Delete") {
                                    $("." + UserResponse[i]).show();
                                }
                            }
                        }
                        else if (RoleResponse.length > 0) {
                            for (let i = 0; i < RoleResponse.length; i++) {
                                $("#" + RoleResponse[i]).show();
                                if (RoleResponse[i] == "View") {
                                    $(".Details").show();
                                }
                                if (RoleResponse[i] == "Update") {
                                    $("." + RoleResponse[i]).show();
                                }
                                if (RoleResponse[i] == "Delete") {
                                    $("." + RoleResponse[i]).show();
                                }
                            }

                        } else {
                            alert("You don't have any permission for this module.");
                        }
                    }
                })
            }
        });
    });
</script>
