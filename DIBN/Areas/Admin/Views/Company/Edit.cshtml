@model DIBN.Areas.Admin.Models.UpdateCompanyModel
@{
    ViewData["Title"] = "Edit";
}
<div id="loader">
    <div class="spinner-1">
        <div class="center-div-1">
            <div class="loader-circle-75">
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <h4 class="card-title float-start">Edit Company Details</h4>
        <a href="javascript:history.go(-1);" class="btn btn-theme float-end" style="margin-bottom:15px;">Back to List</a>
        <a href="@Url.Action("AddUserForCompany","Company",new{name=@Model.Module,actionMethod="Edit"})" class="btn btn-theme float-end me-2" style="margin-bottom:15px;">Add User for Company</a>
    </div>
</div>

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-body">
                <form asp-action="Edits" asp-area="admin" method="post" id="createCompanyForm">
                    <div class="row">
                        @Html.ValidationSummary("", new { @class = "text-danger" })
                        <div class="form-group col-md-6 mt-2">
                            <label asp-for="CompanySubType" class="control-label"></label> <span class="text-danger">*</span>
                            <input asp-for="CompanySubType" class="form-control" id="CompanySubType" />
                        </div>
                        <div class="form-group col-md-6 mt-2">
                            <label asp-for="CompanyOwner" class="control-label"></label>
                            <input asp-for="CompanyOwner" class="form-control" id="CompanyOwner" />
                        </div>
                        <div class=" col-md-6 mt-2">
                            <div class="form-group">
                                <label asp-for="AccountNumber" class="control-label"></label> <span class="text-danger">*</span>
                                <input asp-for="AccountNumber" id="AccountNumber" class="form-control" readonly />
                                @if (ViewBag.ErrorMessage != null && ViewBag.ErrorMessage != "")
                                {
                                    <span class="text-danger">@ViewBag.ErrorMessage</span>
                                }
                                <span asp-validation-for="AccountNumber" class="text-danger"></span>
                            </div>
                            <div>
                                <span id="AccountNumberValidation" class="text-danger"></span>
                            </div>
                        </div>
                        <div class=" col-md-6 mt-2">
                            <div class="form-group" id="companyNameBlock">
                                <label asp-for="CompanyName" class="control-label"></label> <span class="text-danger">*</span>
                                <input asp-for="CompanyName" class="form-control" id="CompanyName" onfocus="CheckExistanceOfAccountNumber();" maxlength="100" />
                                <span asp-validation-for="CompanyName" class="text-danger"></span>
                            </div>
                            <div>
                                <span id="CompanyNameValidation" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-6 mt-2">
                            <div class="form-group" id="MobileNumberBlock">
                                <label asp-for="MobileNumber" class="control-label"></label>
                                <div class="d-flex">
                                    <div class="col-md-4 col-lg-4">
                                        @Html.DropDownListFor(w => w.MainContactNumberCountry, Model.Countries, new { @class = "form-control form-select single-line select-box", @onchange = "GetDialingCodeOfCountry(this.value,MobileNumber)" })
                                    </div>
                                    <div class="col-md-8 col-lg-8">
                                        <input asp-for="MobileNumber" class="form-control" id="MobileNumber" onkeyup="ValidAlphabet(this)" maxlength="20" />
                                        <span asp-validation-for="MobileNumber" class="text-danger"></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6 mt-2">
                            <div class="form-group">
                                <label asp-for="EmailID" class="control-label"></label>
                                <input asp-for="EmailID" type="email" class="form-control" id="EmailID" />
                                <span asp-validation-for="EmailID" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="form-group col-md-6 mt-2">
                            <label asp-for="CompanyStartingDate" class="control-label"></label><span style="font-weight:bold;">(eg. 2022-01-31)</span> <span class="text-danger">*</span>
                            <input asp-for="CompanyStartingDate" id="CompanyStartingDate" class="form-control" readonly />
                            <span asp-validation-for="CompanyStartingDate" class="text-danger"></span>
                        </div>
                        <div class="form-group col-md-6 mt-2" id="CountryBlock">
                            <label asp-for="City" class="control-label"></label>
                            <input asp-for="City" class="form-control" />
                            <span asp-validation-for="City" class="text-danger"></span>
                        </div>
                        <div class="form-group col-md-6 mt-2" id="CountryBlock">
                            <label asp-for="Country" class="control-label"></label>
                            @Html.DropDownListFor(w => w.Country, Model.Countries, new { @class = "form-control form-select single-line select-box" })
                            <span asp-validation-for="Country" class="text-danger"></span>
                        </div>
                        <div class="form-group col-md-6 mt-2">
                            <label asp-for="SalesPersonId" class="control-label"></label>
                            @Html.ListBoxFor(model => model.SalesPersonId, new MultiSelectList(Model.SalesPersons, "Value", "Text"), new { @class = "form-control form-select single-line", multiple = "multiple", id = "salesPerson" })
                        </div>
                        <div class="form-group col-md-6 mt-2">
                            <label asp-for="RMPersonId" class="control-label"></label>
                            @Html.ListBoxFor(model => model.RMPersonId, new MultiSelectList(Model.RMTeams, "Value", "Text"), new { @class = "form-control form-select single-line", multiple = "multiple", id = "RMPersonId" })
                        </div>
                        <div class="col-md-12 float-start ms-2 me-3 mt-2">
                            <div class="form-group form-check" id="IsTRNBlock">
                                <label class="form-check-label">
                                    <input class="form-check-input" asp-for="IsTRN" id="IsTRN" type="checkbox" />   @Html.DisplayNameFor(model => model.IsTRN)
                                    <input class="form-check-input" id="IsTRNValue" type="hidden" value="@Model.IsTRN" />
                                </label>
                            </div>
                            <div class="row">
                                <div class="form-group  col-md-6 mt-2" hidden="hidden" id="TRNBlock">
                                    <label asp-for="TRN" class="control-label"></label> <span class="text-danger">*</span>
                                    <input asp-for="TRN" class="form-control" id="TRN" />
                                    <span asp-validation-for="TRN" class="text-danger"></span>
                                </div>
                                <div class="form-group col-md-6 mt-2" hidden="hidden" id="TRNCreationDateBlock">
                                    <label asp-for="TRNCreationDate" class="control-label"></label> <span style="font-weight:bold;">(eg. 2022-01-31)</span> <span class="text-danger">*</span>
                                    <input asp-for="TRNCreationDate" class="form-control" data-toggle="datepicker" id="TRNCreationDate" placeholder="yyyy-mm-dd" readonly />
                                    <span asp-validation-for="TRNCreationDate" class="text-danger"></span>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-12 float-start ms-2 me-3 mt-2">
                            <div class="form-group form-check" id="IsCorporateTextBlock">
                                <label class="form-check-label">
                                    <input class="form-check-input" asp-for="IsCorporateText" id="IsCorporateText" type="checkbox" />   @Html.DisplayNameFor(model => model.IsCorporateText)
                                    <input class="form-check-input" id="IsCorporateTextValue" type="hidden" value="@Model.IsCorporateText" />
                                </label>
                            </div>
                            <div class="form-group col-md-12 float-start ms-2 me-3" hidden="hidden" id="CorporateTextBlock">
                                <label asp-for="CorporateText" class="control-label"></label> <span class="text-danger">*</span>
                                <input asp-for="CorporateText" class="form-control" id="CorporateText" />
                                <span asp-validation-for="CorporateText" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-12 float-start ms-2 me-3 mt-2">
                            <div class="form-group form-check">
                                <label class="form-check-label">
                                    <input class="form-check-input" asp-for="IsActive" id="IsActive" type="checkbox" />   @Html.DisplayNameFor(model => model.IsActive)
                                </label>
                            </div>
                        </div>
                        <input type="hidden" asp-for="Module" id="Module" value="@Model.Module" />
                        <input type="hidden" asp-for="Id" id="Id" value="@Model.Id" />
                        <input type="hidden" asp-for="CompanyOwnerId" id="CompanyOwnerId" />
                        <input type="hidden" id="IsTRNSelected" value="@Model.IsTRN" />
                        <div class="form-group m-3 mt-3">
                            <input type="submit" value="Create" class="btn btn-theme" id="btnSubmit" />
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
<script src="~/lib/jquery/dist/jquery.min.js"></script>

<script src="~/assets/libs/bootstrap-datepicker/js/bootstrap-datepicker.min.js"></script>

<link href="~/select2/select2.min.css" rel="stylesheet" />
<script src="~/select2/select2.min.js"></script>
<script>
    $("#TRNCreationDate").datepicker({
        format: 'yyyy-mm-dd',
        changeMonth: true,
        changeYear: true,
        autoclose: true,
        todayHighlight: true,
    });

    $(document).ready(function () {
        var IsTRN = $('#IsTRNSelected').val();
        if (IsTRN != "") {
            $("#TRNBlock").removeAttr("hidden");
            $("#TRNCreationDateBlock").removeAttr("hidden");
            $("#TRN").attr("required", "required");
            $("#TRNCreationDateBlock").attr("required", "required");
            $("#IsTRN").val(true);
        }
        else {
            $("#TRNBlock").attr("hidden", "hidden");
            $("#TRNCreationDateBlock").attr("hidden", "hidden");
            $("#TRN").removeAttr("required");
            $("#TRNCreationDateBlock").removeAttr("required");
            $("#IsTRN").val(false);
        }
    });
    $(document).ready(function () {
        var IsCorporateText = $('#IsCorporateText');
        if (IsCorporateText.checked != "undefined") {
            var IsCorporateText = $("#IsCorporateText").val();
            if ($("#CorporateText").val() != "") {
                $("#CorporateTextBlock").removeAttr("hidden");
                $("#CorporateText").attr("required", "required");
                $("#IsCorporateText").val(true);
            }
            else {
                $("#CorporateTextBlock").attr("hidden", "hidden");
                $("#IsCorporateText").val(false);
                $("#CorporateText").removeAttr("required");
            }
        }
        else {
            $("#CorporateTextBlock").attr("hidden", "hidden");
            $("#IsCorporateText").val(false);
            $("#CorporateText").removeAttr("required");
        }

    });
</script>
<script>
    ////// Open Selection dropdown on focus                                     -- Yashasvi TBC (09-02-2023)
    $(document).on('focus', '.select2.select2-container', function (e) {
        if (e.originalEvent && $(this).find(".select2-selection--single").length > 0) {
            $(this).siblings('select').select2('open');
        }
    });

    $('#IsTRN').change(function () {
        if (this.checked) {
            $("#TRNBlock").removeAttr("hidden");
            $("#TRNCreationDateBlock").removeAttr("hidden");
            $("#TRN").attr("required", "required");
            $("#TRNCreationDateBlock").attr("required", "required");
            $("#IsTRN").val(true);

        }
        else {
            $("#TRNBlock").attr("hidden", "hidden");
            $("#TRNCreationDateBlock").attr("hidden", "hidden");
            $("#TRN").removeAttr("required");
            $("#TRNCreationDateBlock").removeAttr("required");
            $("#IsTRN").val(false);
        }
    });

    $('#IsCorporateText').change(function () {
        if (this.checked) {
            $("#CorporateTextBlock").removeAttr("hidden");
            $("#CorporateText").attr("required", "required");
            $("#IsCorporateText").val(true);
        }
        else {
            $("#CorporateTextBlock").attr("hidden", "hidden");
            $("#CorporateText").removeAttr("required");
            $("#IsCorporateText").val(false);
        }
    });

    $(function () {
        $('#UserChange').select2();
    });
    $(function () {
        $('#salesPerson').select2();
        $('#RMPersonId').select2();
    });
    $(document).ready(function () {
        $("#loader").hide();
    });

    ////// Open Country Selection dropdown on focus                                     -- Yashasvi TBC (05-12-2022)
    $(document).on('focus', '.select2.select2-container', function (e) {
        if (e.originalEvent && $(this).find(".select2-selection--single").length > 0) {
            $(this).siblings('select').select2('open');
        }
    });

    $(function () {
        $(".select-box").select2();
    });
</script>
<script>
    $("#btnSubmit").on('click', function () {
        $("#loader").show();
        $("#btnSubmit").attr("disabled", "disabled");
        var dateString = $("#CompanyStartingDate").val();

        if (!/^\d{4}\-\d{1,2}\-\d{1,2}$/.test(dateString)) {
            alert("Please Enter Valid Date Format for Company Starting Date.");
            var today = new Date();
            var dd = String(today.getDate()).padStart(2, '0');
            var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!
            var yyyy = today.getFullYear();

            today = yyyy + '-' + mm + '-' + dd;
            $('#CompanyStartingDate').datepicker('setDate', today);
            $("#CompanyStartingDate").focus();
            $("#loader").hide();
            $("#btnSubmit").removeAttrr("disabled");
            return false;
        }
        $("#btnSubmit").removeAttr("disabled");
        $("#loader").hide();
    });
</script>
<script>
    jQuery('#createCompanyForm').on('submit', function () {
        if (jQuery(this).data('form_is_invalid')) {
            jQuery(this).data('form_is_invalid', false);
        } else {
            jQuery(this).find('#btnSubmit').prop('disabled', true);
        }
    }).on('invalid-form.validate', function () {
        jQuery(this).data('form_is_invalid', true);
    });
</script>
=
<script>
    function GetDialingCodeOfCountry(value, Id) {
        $.ajax({
            url: "@Url.Action("GetDialingCodeOfCountry", "Company")",
            method: "GET",
            data: { 'Country': value },
            success: function (response) {
                $(Id).val(response);
            }
        });
    };
</script>
<script>
    function ValidAlphabet(data) {
        var code = (event.which) ? event.which : event.keyCode;
        if (!(code >= 48 && code <= 57) || !(code >= 96 && code <= 105) || code == 54 || code == 189 || code == 219 || code == 57) {
            if (code != 32 && code != 190) {
                var digits = $(data).val();
                var lastValue = digits.substring(digits.length - 1);
                digits = digits.replace(/[^(\+\s)[^0-9-]/g, '');
                if (lastValue == "^" || lastValue == "-" || lastValue == "(" || lastValue == ")" || lastValue == "[") {
                    digits = digits.replace(lastValue, '');
                }
                $(data).val(digits);
            }
        }
    }
</script>
<script>
    $(function () {

        $("#CompanyStartingDate").datepicker({
            format: 'yyyy-mm-dd',
            changeMonth: true,
            changeYear: true,
            autoclose: true,
            todayHighlight: true,
        });
    });
</script>
<script>
    function CheckBothNumbers() {

        event.preventDefault();
        var mobileNumber = $("#MobileNumber").val();
        var emergencyNumber = $("#EmergencyNumber").val();
        $("#TelephoneValidation").hide();
        if (mobileNumber == emergencyNumber && mobileNumber != "" && emergencyNumber != "") {
            $("#TelephoneValidation").show();
            $("#TelephoneValidation").text("Both Phone Number and Emergency Number were same.Please enter different Phone Number.!");
        }
    }
</script>
<script>
    function CheckExistanceOfEmail() {
        var email = $("#EmailID").val();
        $("#EmailValidation").hide();
        $.ajax({
            url: "@Url.Action("CheckEmailExistance", "User")",
            mehod: "GET",
            data: { "Email": email },
            success: function (response) {

                if (response == -1) {
                    $("#EmailValidation").show();
                    $("#EmailValidation").text(email + " already exists.");
                }
            }
        });
    }


    $(document).ready(function () {
        $("#CompanySubType").autocomplete({
            minLength: 1,
            source: function (request, response) {
                $.ajax({
                    url: "@Url.Action("GetCompanySubTypePrefix", "Company")",
                    type: "GET",
                    dataType: "json",
                    data: { "prefix": request.term },
                    success: function (data) {
                        if (data.length > 0) {

                            response($.map(data, function (item) {
                                return {
                                    label: item,
                                    val: item
                                };
                            }))
                        }
                    }
                })
            },
            focus: function () {
                return false;
            },
        });
        $('#CompanySubType').on("keydown", function (event) {
            if (event.keyCode === $.ui.keyCode.TAB && $(this).data("autocomplete").menu.active) {
                event.preventDefault();
            }
        });
    });

    $(document).ready(function () {
        $("#CompanyOwner").autocomplete({
            minLength: 1,
            source: function (request, response) {
                $.ajax({
                    url: "@Url.Action("GetUsersListForCompany", "Company")",
                    type: "GET",
                    dataType: "json",
                    data: { "prefix": request.term },
                    success: function (data) {
                        if (data.length > 0) {

                            response($.map(data, function (item) {
                                return {
                                    label: item.username,
                                    val: item.id,
                                    value: item.username
                                };
                            }))
                        }
                    }
                })
            },
            select: function (val, data) {
                $("#CompanyOwnerId").val(data.item.val);

            },
            focus: function () {
                return false;
            },
        });

        $('#CompanyOwner').on("keydown", function (event) {
            if (event.keyCode === $.ui.keyCode.TAB && $(this).data("autocomplete").menu.active) {
                event.preventDefault();
            }
        });
    });
</script>