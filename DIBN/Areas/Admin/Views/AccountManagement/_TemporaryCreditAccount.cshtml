@model DIBN.Areas.Admin.Models.GetTemporaryAccountDetailByIdModel
<style>
    .datepicker {
        z-index: 99999 !important;
    }
</style>
<div class="row">
    <form asp-action="UpdateTemporaryAccountExpenses" method="post">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <input type="hidden" asp-for="Id" />
        <div class="form-group">
            <label asp-for="EntryType" class="control-label">Entry Type</label>
            @Html.DropDownListFor(w => w.EntryType, Model.ExpenseType, "Select Type", new { @class = "form-control form-select single-line",@id="types",@onchange="ExpenseTypeChange();" })
            <span asp-validation-for="EntryType" class="text-danger"></span>
        </div>
        <div class="form-group" id="paymentModeBlock1">
            <label asp-for="PaymentMode" class="control-label">Payment Mode</label>
            @Html.DropDownListFor(w => w.PaymentMode, Model.PaymentModeList, "Select Payment Mode", new { @class = "form-control form-select single-line",@id="paymentMode1" })
            <span asp-validation-for="PaymentMode" class="text-danger"></span>
        </div>
        <div class="form-group" id="CompanyBlock">
            <label asp-for="CompanyId" class="control-label">Company</label>
            @Html.DropDownListFor(w => w.CompanyId, Model.Companies, "Select Company", new { @class = "form-control form-select single-line",@id="Companies" })
            <span asp-validation-for="CompanyId" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label class="control-label">Transaction Date </label> <span style="font-weight:bold;">(eg. 2022-01-31)</span>
            <input asp-for="TransactionDate" class="form-control" data-toggle="datepicker" id="CreatedDate1" placeholder="yyyy-mm-dd" required readonly />
            <span asp-validation-for="TransactionDate" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="Description" class="control-label">Description</label>
            <textarea asp-for="Description" class="form-control text-wrap" maxlength="200" required rows="3" cols="30" id="txtDescription12"></textarea>
            <span asp-validation-for="Description" class="text-danger"></span>
        </div>
        <div class="form-group" id="AmountBlock1">
            <label asp-for="Amount" class="control-label"></label>
            <input asp-for="Amount" type="text" class="form-control" step=".01" maxlength="10" onkeyup="ValidAlphabet(this)" onfocusout="ValidAlphabet(this)" onkeypress="ValidTextLength(this)" id="Amount2" />
            <span asp-validation-for="Amount" class="text-danger"></span>
        </div>
        <div class="form-group" id="QuantityBlock">
            <label asp-for="Quantity" class="control-label"></label>
            <input asp-for="Quantity" type="number" class="form-control" data-toggle="touchspin" id="Quantity2" readonly />
            <span asp-validation-for="Quantity" class="text-danger"></span>
        </div>
        <div class="form-group" id="TotalAmountBlock">
            <label asp-for="TotalAmount" class="control-label">Total Amount</label>
            <input asp-for="TotalAmount" type="text" class="form-control" step=".01" id="TotalAmount2" readonly />
            <span asp-validation-for="TotalAmount" class="text-danger"></span>
        </div>
        <div class="form-group" id="vatBlock">
            <label asp-for="Vat" class="control-label"></label>
            <input asp-for="Vat" type="text" class="form-control" step=".01" onkeyup="ValidAlphabet(this)" onfocusout="ValidAlphabet(this)" onkeypress="ValidTextLength(this)" maxlength="4" id="Vat2" />
            <span asp-validation-for="Vat" class="text-danger"></span>
        </div>
        <div class="form-group" id="vatAmountBlock">
            <label asp-for="VatAmount" class="control-label">Vat Amount</label>
            <input asp-for="VatAmount" step=".01" type="text" class="form-control" id="VatAmount2" readonly />
            <span asp-validation-for="VatAmount" class="text-danger"></span>
        </div>
        <div class="form-group" id="grandTotalBlock">
            <label asp-for="GrandTotal" class="control-label">Grand Total</label>
            <input asp-for="GrandTotal" type="text" class="form-control" step=".01" id="GrandTotal2" readonly />
            <span asp-validation-for="GrandTotal" class="text-danger"></span>
        </div>
        <div class="modal-footer">
            <div class="form-group">
                <input type="button" id="btnSaveDetails" value="Save Changes" class="btn btn-theme" />
                <span id="btnPaymentDetailsMessage11" class="text-danger">Please Wait While We Are Saving Portal Balance Details.</span>
            </div>
        </div>
    </form>
</div>
<script>
    function ValidAlphabet(data) {
        var code = (event.which) ? event.which : event.keyCode;
        if (!(code >= 48 && code <= 57) || !(code >= 96 && code <= 105) || code == 54 || code == 189 || code == 219 || code == 57) {
            if (code != 32 && code != 190) {
                var digits = $(data).val();
                var lastValue = digits.substring(digits.length - 1);
                digits = digits.replace(/[^(\.\s)[^0-9-]/g, '');
                if (lastValue == "^" || lastValue == "-" || lastValue == "(" || lastValue == ")" || lastValue == "[") {
                    var lastIndex = digits.indexOf(lastValue);
                    var currentText = digits.substring(0, lastIndex);
                    digits = currentText;
                    digits = digits.replace(lastValue, '');
                }
                else if (digits.includes("-") || digits.includes("^") || digits.includes("(") || digits.includes(")") || digits.includes("[")) {
                    if (digits.includes("-")) {
                        var lastIndex = digits.lastIndexOf("-");
                        var currentText = digits.substring(lastIndex + 1, digits.length);
                        digits = currentText;
                    }
                    else if (digits.includes("^")) {
                        var lastIndex = digits.lastIndexOf("^");
                        var currentText = digits.substring(lastIndex + 1, digits.length);
                        digits = currentText;
                    }
                    else if (digits.includes("(")) {
                        var lastIndex = digits.lastIndexOf("(");
                        var currentText = digits.substring(lastIndex + 1, digits.length);
                        digits = currentText;
                    }
                    else if (digits.includes(")")) {
                        var lastIndex = digits.lastIndexOf(")");
                        var currentText = digits.substring(lastIndex + 1, digits.length);
                        digits = currentText;
                    }
                    else if (digits.includes("[")) {
                        var lastIndex = digits.lastIndexOf("[");
                        var currentText = digits.substring(lastIndex + 1, digits.length);
                        digits = currentText;
                    }
                }
                else if (digits.replace(/[^.]/g, "").length > 1) {
                    lastValue = digits.substring(digits.length - 1);
                    var lastIndex = digits.indexOf(lastValue);
                    var currentText = digits.substring(lastIndex, digits.length);
                    if (currentText.replace(/[^.]/g, "").length > 1) {
                        var currentDigits1 = digits.slice(0, lastIndex + 1);
                        digits = currentDigits1;
                    }
                    else {
                        var currentDigits = digits.slice(0, lastIndex);
                        digits = currentDigits;
                    }

                }
                $(data).val(digits);
            }
            else if (digits.replace(/[^.]/g, "").length > 1) {
                lastValue = digits.substring(digits.length - 1);
                var lastIndex = digits.indexOf(lastValue);
                var currentText = digits.substring(lastIndex, digits.length);
                if (currentText.replace(/[^.]/g, "").length > 1) {
                    var currentDigits1 = digits.slice(0, lastIndex + 1);
                    digits = currentDigits1;
                }
                else {
                    var currentDigits = digits.slice(0, lastIndex);
                    digits = currentDigits;
                }

                $(data).val(digits);
            }
        }
    }
    function ValidTextLength(data) {
        var digits = $(data).val();
        var currentDigits = digits.split(".");
        if (digits.includes(".") == true) {
            if (currentDigits[1].length >= 2) {
                event.preventDefault();
            }
        }
    }
   
    $("#Quantity2").TouchSpin({
        min: 1,
        max: 20,
        boostat: 5,
        maxboostedstep: 10
    });

    $(document).ready(function () {
        $('#btnPaymentDetailsMessage11').hide();
    });

    $(function () {
        var today = new Date();
        $("#CreatedDate1").datepicker({
            format: "yyyy-mm-dd",
            changeMonth: true,
            changeYear: true,
            autoclose: true,
            todayHighlight: true,
            endDate: "today",
            maxDate: today
        }).on('changeDate', function (ev) {
            $(this).datepicker('hide');
        });
    });

    $(document).ready(function () {
        $("#CompanyBlock").show();
        $("#vatBlock").hide();
        $("#paymentModeBlock1").show();
        $("#paymentMode1").attr("required", "required");
        $("#vatAmountBlock").hide();
        $("#grandTotalBlock").hide();
        $("#receiptBlock").show();
    });
</script>
<script>
    $("#Amount2").on("keyup", function () {
        var amount = $("#Amount2").val();
        var quantity = $("#Quantity2").val();
        var vatPercentage = $("#Vat2").val();
        var totalAmount = 0, vatAmount = 0, grandTotal = 0;
        if (parseInt(vatPercentage) != 0) {
            totalAmount = ((parseFloat(amount) * quantity));
            vatAmount = parseFloat(totalAmount) * parseFloat(vatPercentage) / 100;
            grandTotal = parseFloat(totalAmount) + parseFloat(vatAmount);
            if (isNaN(vatAmount)) {
                vatAmount = 0;
            }
            $("#VatAmount2").val(parseFloat(vatAmount).toFixed(2));
        }
        else {
            totalAmount = ((parseFloat(amount) * quantity));
            grandTotal = parseFloat(totalAmount);
        }
        if (isNaN(grandTotal)) {
            grandTotal = 0;
        }
        if (isNaN(totalAmount)) {
            totalAmount = 0;
        }
        $("#TotalAmount2").val(parseFloat(totalAmount).toFixed(2));
        $("#GrandTotal2").val(parseFloat(grandTotal).toFixed(2));

    });
    $("#Quantity2").on("change", function () {
        var amount = $("#Amount2").val();
        var quantity = $("#Quantity2").val();
        var vatPercentage = $("#Vat2").val();
        var totalAmount = 0, vatAmount = 0, grandTotal = 0;
        if (parseInt(vatPercentage) != 0) {
            totalAmount = ((parseFloat(amount) * quantity));
            vatAmount = parseFloat(totalAmount) * parseFloat(vatPercentage) / 100;
            grandTotal = parseFloat(totalAmount) + parseFloat(vatAmount);
            if (isNaN(vatAmount)) {
                vatAmount = 0;
            }
            $("#VatAmount2").val(parseFloat(vatAmount).toFixed(2));
        }
        else {
            totalAmount = ((parseFloat(amount) * quantity));
            grandTotal = parseFloat(totalAmount);
        }
        if (isNaN(totalAmount)) {
            totalAmount = 0;
        }
        if (isNaN(grandTotal)) {
            grandTotal = 0;
        }
        $("#TotalAmount2").val(parseFloat(totalAmount).toFixed(2));
        $("#GrandTotal2").val(parseFloat(grandTotal).toFixed(2));
    });
    $("#Vat2").on("keyup", function () {
        var amount = $("#Amount2").val();
        var totalAmount = $("#TotalAmount2").val();
        var vatPercentage = $("#Vat2").val();
        var vatAmount = (parseFloat(totalAmount) * parseFloat(vatPercentage)) / 100;
        if (isNaN(vatAmount)) {
            vatAmount = 0;
        }
        if (isNaN(totalAmount)) {
            totalAmount = 0;
        }
        var totalAmount = $("#TotalAmount2").val();
        var grandTotal = parseFloat(totalAmount) + parseFloat(vatAmount);
        if (isNaN(grandTotal)) {
            grandTotal = 0;
        }
        $("#VatAmount2").val(parseFloat(vatAmount).toFixed(2));
        $("#GrandTotal2").val(parseFloat(grandTotal).toFixed(2));
    });

    $("#Amount2").on("focus", function () {
        var amount = $("#Amount2").val();
        var quantity = $("#Quantity2").val();
        var vatPercentage = $("#Vat2").val();
        var totalAmount = 0, vatAmount = 0, grandTotal = 0;
        if (parseInt(vatPercentage) != 0) {
            totalAmount = ((parseFloat(amount) * quantity));
            vatAmount = parseFloat(totalAmount) * parseFloat(vatPercentage) / 100;
            grandTotal = parseFloat(totalAmount) + parseFloat(vatAmount);
            if (isNaN(vatAmount)) {
                vatAmount = 0;
            }
            $("#VatAmount2").val(parseFloat(vatAmount).toFixed(2));
        }
        else {
            totalAmount = ((parseFloat(amount) * quantity));
            grandTotal = parseFloat(totalAmount);
        }
        if (isNaN(grandTotal)) {
            grandTotal = 0;
        }
        if (isNaN(totalAmount)) {
            totalAmount = 0;
        }
        $("#TotalAmount2").val(parseFloat(totalAmount).toFixed(2));
        $("#GrandTotal2").val(parseFloat(grandTotal).toFixed(2));

    });
    $("#Quantity2").on("focus", function () {
        var amount = $("#Amount2").val();
        var quantity = $("#Quantity2").val();
        var vatPercentage = $("#Vat2").val();
        var totalAmount = 0, vatAmount = 0, grandTotal = 0;
        if (parseInt(vatPercentage) != 0) {
            totalAmount = ((parseFloat(amount) * quantity));
            vatAmount = parseFloat(totalAmount) * parseFloat(vatPercentage) / 100;
            grandTotal = parseFloat(totalAmount) + parseFloat(vatAmount);
            if (isNaN(vatAmount)) {
                vatAmount = 0;
            }
            $("#VatAmount2").val(parseFloat(vatAmount).toFixed(2));
        }
        else {
            totalAmount = ((parseFloat(amount) * quantity));
            grandTotal = parseFloat(totalAmount);
        }
        if (isNaN(totalAmount)) {
            totalAmount = 0;
        }
        if (isNaN(grandTotal)) {
            grandTotal = 0;
        }
        $("#TotalAmount2").val(parseFloat(totalAmount).toFixed(2));
        $("#GrandTotal2").val(parseFloat(grandTotal).toFixed(2));
    });
    $("#Vat2").on("focus", function () {
        var amount = $("#Amount2").val();
        var totalAmount = $("#TotalAmount2").val();
        var vatPercentage = $("#Vat2").val();
        var vatAmount = (parseFloat(totalAmount) * parseFloat(vatPercentage)) / 100;
        if (isNaN(vatAmount)) {
            vatAmount = 0;
        }
        if (isNaN(totalAmount)) {
            totalAmount = 0;
        }
        var totalAmount = $("#TotalAmount2").val();
        var grandTotal = parseFloat(totalAmount) + parseFloat(vatAmount);
        if (isNaN(grandTotal)) {
            grandTotal = 0;
        }
        $("#VatAmount2").val(parseFloat(vatAmount).toFixed(2));
        $("#GrandTotal2").val(parseFloat(grandTotal).toFixed(2));
    });
</script>
<script>
    $("#btnSaveDetails").on('click', function () {
        var currentDate = $("#CreatedDate1").val();
        var selectedType = $("#types").val();
        var companyId = $("#Companies").val();
        var paymentMode = $("#paymentMode1").val();
        var txtDescription = $("#txtDescription12").val();
        var vat = $("#Vat2").val();
        var amountdata = $("#Amount2").val();

        if (!/^\d{4}\-\d{1,2}\-\d{1,2}$/.test(currentDate)) {
            alert("Please Enter Valid Date Format for Company Starting Date.");
            var today = new Date();
            var dd = String(today.getDate()).padStart(2, '0');
            var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!
            var yyyy = today.getFullYear();

            today = yyyy + '-' + mm + '-' + dd;
            $('#CreatedDate1').datepicker('setDate', today);
            $("#CreatedDate1").focus();
            return false;
        }
        else {
            if (selectedType != "") {
                if (selectedType == "Credit") {
                    var amount = $("#Amount2").val();
                    var quantity = $("#Quantity2").val();
                    var totalAmount = ((parseFloat(amount) * parseInt(quantity)));
                    $("#TotalAmount2").val(parseFloat(totalAmount).toFixed(2));
                    $("#GrandTotal2").val(parseFloat(totalAmount).toFixed(2));
                    

                    if (isNaN(amount) || amount == "") {
                        alert("Please provide valid Amount.");
                        $("#Amount2").val(parseFloat("0").toFixed(2));
                        $("#TotalAmount2").val(parseFloat("0").toFixed(2));
                        $("#GrandTotal2").val(parseFloat("0").toFixed(2));
                        
                        if (isNaN($("#Vat2").val()) || $("#Vat2").val() == "") {
                            $("#Vat2").val(parseFloat("0").toFixed(2));
                        }

                        if (isNaN($("#VatAmount2").val()) || $("#VatAmount2").val() == "") {
                            $("#VatAmount2").val(parseFloat("0").toFixed(2));
                        }
                        return false;
                    }
                    if (isNaN($("#Vat2").val()) || $("#Vat2").val() == "") {
                        alert("Please provide valid Vat.");
                        $("#Vat2").val(parseFloat("0").toFixed(2));
                        $("#VatAmount2").val(parseFloat("0").toFixed(2));
                        return false;
                    }

                    if (companyId != "" && paymentMode != "" && txtDescription != "" && amount != "" && amount != "0" && amount != "0.0" && amount != "0.00") {
                        $("#Amount2").val(parseFloat(amount).toFixed(2));
                        $("#Vat2").val(parseFloat(vat).toFixed(2));
                        $("#btnSaveDetails").removeAttr("type");
                        $("#btnSaveDetails").attr("type", "submit");
                        $("#btnSaveDetails").hide();
                        $("#btnPaymentDetailsMessage11").show();
                    }
                    else {
                        if (txtDescription == "") {
                            const swalWithBootstrapButtons = Swal.mixin({
                                customClass: {
                                    confirmButton: 'ms-3 btn btn-success',
                                    cancelButton: 'btn btn-danger'
                                },
                                buttonsStyling: false
                            })
                            swalWithBootstrapButtons.fire(
                                'Error',
                                "Please Provide Description for which you are adding Top-up Balance.",
                                'error'
                            )
                        }
                        else if (paymentMode == "") {
                            const swalWithBootstrapButtons = Swal.mixin({
                                customClass: {
                                    confirmButton: 'ms-3 btn btn-success',
                                    cancelButton: 'btn btn-danger'
                                },
                                buttonsStyling: false
                            })
                            swalWithBootstrapButtons.fire(
                                'Error',
                                "Please Select Payment Mode.",
                                'error'
                            )
                        }
                        else if (companyId == "") {
                            const swalWithBootstrapButtons = Swal.mixin({
                                customClass: {
                                    confirmButton: 'ms-3 btn btn-success',
                                    cancelButton: 'btn btn-danger'
                                },
                                buttonsStyling: false
                            })
                            swalWithBootstrapButtons.fire(
                                'Error',
                                "Please Select Company For which You want to Add Expense.",
                                'error'
                            )
                        }
                        else if (amount == "" || amount == "0" || amount == "0.0" || amount == "0.00") {
                            const swalWithBootstrapButtons = Swal.mixin({
                                customClass: {
                                    confirmButton: 'ms-3 btn btn-success',
                                    cancelButton: 'btn btn-danger'
                                },
                                buttonsStyling: false
                            })
                            swalWithBootstrapButtons.fire(
                                'Error',
                                "Please Provide Amount.",
                                'error'
                            )
                        }
                    }
                }
                else {
                    

                    var amount = $("#Amount2").val();
                    var quantity = $("#Quantity2").val();
                    var vatPercentage = $("#Vat2").val();

                    var totalAmount = ((parseFloat(amount) * parseInt(quantity)));
                    $("#TotalAmount2").val(parseFloat(totalAmount).toFixed(2));

                    var vatAmount = (parseFloat(totalAmount) * parseFloat(vatPercentage)) / 100;
                    $("#VatAmount2").val(parseFloat(vatAmount).toFixed(2));

                    var grandTotal = parseFloat(totalAmount) + parseFloat(vatAmount);
                    $("#GrandTotal2").val(parseFloat(grandTotal).toFixed(2));

                    if (isNaN(amount) || amount == "") {
                        alert("Please provide valid Amount.");
                        $("#Amount2").val(parseFloat("0").toFixed(2));
                        $("#TotalAmount2").val(parseFloat("0").toFixed(2));
                        $("#GrandTotal2").val(parseFloat("0").toFixed(2));
                        if (isNaN($("#Vat2").val()) || $("#Vat2").val() == "") {
                            $("#Vat2").val(parseFloat("0").toFixed(2));
                        }

                        if (isNaN($("#VatAmount2").val()) || $("#VatAmount2").val() == "") {
                            $("#VatAmount2").val(parseFloat("0").toFixed(2));
                        }
                        return false;
                    }
                    if (isNaN($("#Vat2").val()) || $("#Vat2").val() == "") {
                        alert("Please provide valid Vat.");
                        $("#Vat2").val(parseFloat("0").toFixed(2));
                        $("#VatAmount2").val(parseFloat("0").toFixed(2));
                        return false;
                    }

                    if (companyId != "" && txtDescription != "" && amount != "" && amount != "0" && amount != "0.0" && amount != "0.00") {
                        $("#Amount2").val(parseFloat(amount).toFixed(2));
                        $("#Vat2").val(parseFloat(vat).toFixed(2));
                        $("#btnSaveDetails").removeAttr("type");
                        $("#btnSaveDetails").attr("type", "submit");
                        $("#btnSaveDetails").hide();
                        $("#btnPaymentDetailsMessage11").show();
                    }
                    else {
                        if (txtDescription == "") {
                            const swalWithBootstrapButtons = Swal.mixin({
                                customClass: {
                                    confirmButton: 'ms-3 btn btn-success',
                                    cancelButton: 'btn btn-danger'
                                },
                                buttonsStyling: false
                            })
                            swalWithBootstrapButtons.fire(
                                'Error',
                                "Please Provide Description for which you are adding Top-up Balance.",
                                'error'
                            )
                        }
                        else if (companyId == "") {
                            const swalWithBootstrapButtons = Swal.mixin({
                                customClass: {
                                    confirmButton: 'ms-3 btn btn-success',
                                    cancelButton: 'btn btn-danger'
                                },
                                buttonsStyling: false
                            })
                            swalWithBootstrapButtons.fire(
                                'Error',
                                "Please Select Company For which You want to Add Expense.",
                                'error'
                            )
                        }
                        else if (amount == "" || amount == "0" || amount == "0.0" || amount == "0.00") {
                            const swalWithBootstrapButtons = Swal.mixin({
                                customClass: {
                                    confirmButton: 'ms-3 btn btn-success',
                                    cancelButton: 'btn btn-danger'
                                },
                                buttonsStyling: false
                            })
                            swalWithBootstrapButtons.fire(
                                'Error',
                                "Please Provide Amount.",
                                'error'
                            )
                        }
                    }
                }
            }
            else{
                if (isNaN(amount) || amount == "") {
                    alert("Please provide valid Amount.");
                    $("#Amount2").val(parseFloat("0").toFixed(2));
                    $("#TotalAmount2").val(parseFloat("0").toFixed(2));
                    $("#GrandTotal2").val(parseFloat("0").toFixed(2));
                    if (isNaN($("#Vat2").val()) || $("#Vat2").val() == "") {
                        $("#Vat2").val(parseFloat("0").toFixed(2));
                    }

                    if (isNaN($("#VatAmount2").val()) || $("#VatAmount2").val() == "") {
                        $("#VatAmount2").val(parseFloat("0").toFixed(2));
                    }
                    return false;
                }
                if (isNaN($("#Vat2").val()) || $("#Vat2").val() == "") {
                    alert("Please provide valid Vat.");
                    $("#Vat2").val(parseFloat("0").toFixed(2));
                    $("#VatAmount2").val(parseFloat("0").toFixed(2));
                    return false;
                }

                const swalWithBootstrapButtons = Swal.mixin({
                    customClass: {
                        confirmButton: 'ms-3 btn btn-success',
                        cancelButton: 'btn btn-danger'
                    },
                    buttonsStyling: false
                })
                swalWithBootstrapButtons.fire(
                    'Error',
                    "Please Select Type of Expense.",
                    'error'
                )
            }
        }
    });

    function ExpenseTypeChange() {
        var selectedType = $("#types").val();
        if (selectedType == "Credit") {
            $("#CompanyBlock").show();
            $("#vatBlock").hide();
            $("#paymentModeBlock1").show();
            $("#paymentMode1").attr("required", "required");
            $("#vatAmountBlock").hide();
            $("#grandTotalBlock").hide();
            $("#receiptBlock").hide();
        }
        else {
            $("#CompanyBlock").show();
            $("#vatBlock").show();
            $("#paymentModeBlock1").hide();
            $("#paymentMode1").removeAttr("required");
            $("#vatAmountBlock").show();
            $("#grandTotalBlock").show();
            $("#receiptBlock").show();
        }
    }
</script>