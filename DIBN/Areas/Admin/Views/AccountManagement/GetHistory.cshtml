@model DIBN.Areas.Admin.Models.ConfirmationModel
@{
    ViewData["Title"] = "GetHistory";
}
<style>
    .btn-white {
        background: #fff !important;
        color: #243c7c !important;
    }
</style>
<input type="hidden" asp-for="message" id="message"/>
@* <div class="row">
    <div class="col-lg-12">
        <a href="javascript:history.go(-1);" class="btn btn-theme float-end" style="margin-bottom:15px;">Back to List</a>
        <button class="btn btn-theme pull-right me-2 View" style="float:right;margin-bottom:15px;" onclick="DownloadDocuments();">Downloaded Document Report(s)</button>
    </div>
</div> *@
<div id="loader">
    <div class="spinner-1">
        <div class="center-div-1">
            <div class="loader-circle-75">
            </div>
        </div>
    </div>
</div>

<input type="hidden" name="Module" value="AccountManagement" id="Module" />
<input type="hidden" name="IndexValue" id="IndexValue" />
<div class="row" id="View1">
    <div class="card">
        <div class="card-body">
            <div class="col-lg-12">
                <div class="col-lg-2 float-start">
                    <div class="form-group">
                        <label class="control-label">From Date : </label>  <span style="font-weight:bold;">(eg. 2022-01-31)</span>
                        <input name="FromDate" class="form-control" id="FromDate" placeholder="yyyy-mm-dd" readonly />
                    </div>
                </div>
                <div class="col-lg-2 float-start">
                    <div class="form-group ms-2">
                        <label class="control-label">To Date : </label> <span style="font-weight:bold;">(eg. 2022-01-31)</span>
                        <input name="ToDate" class="form-control" id="ToDate" placeholder="yyyy-mm-dd" readonly />
                    </div>
                </div>
                <div class="col-lg-8 float-end mt-3">
                    <button class="btn btn-theme pull-right ms-2" style="float:right;margin-bottom:15px;" onclick="SendPdfFile();">Export Pdf</button>
                    <button class="btn btn-theme pull-right" style="float:right;margin-bottom:15px;" onclick="SendExcelFile();">Export Excel</button>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row View">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <div class="col-md-12 float-end">
                    <button class="btn btn-theme float-end" onclick="ClearFilterToDatatable();">Clear All</button>
                </div>
                <div class="col-md-12">
                    <div class="col-md-6 float-start">
                        <div class="col-lg-4 float-start">
                            <div class="form-group">
                                <label class="control-label">Sort By : </label>
                                <select class="form-select" id="sortingBy">
                                    <option value="Transaction Id">Transaction Id</option>
                                    <option value="Created On">Created On</option>
                                    <option value="Company">Company</option>
                                    <option value="Type">Type</option>
                                    <option value="Grand Total">Grand Total</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-lg-4 float-start">
                            <div class="form-group ms-2">
                                <label class="control-label">Sorting Order : </label>
                                <select class="form-select" id="sortingDirection">
                                    <option value="asc">Low to High</option>
                                    <option value="desc">High to Low</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-lg-4 float-start" style="margin-top:28px !important;">
                            <button class="btn btn-theme float-start ms-2 me-2" onclick="ApplyFilterToDatatable();">Apply Filter</button>
                        </div>
                    </div>
                    <div class="col-md-6 float-start">
                        <div class="col-lg-4 float-start">
                            <div class="form-group">
                                <label class="control-label">Search By : </label>
                                <select class="form-select" id="searchByValue">
                                    <option value="Transaction Id">Transaction Id</option>
                                    <option value="Created On">Created On</option>
                                    <option value="Company">Company</option>
                                    <option value="Description">Description</option>
                                    <option value="Type">Type</option>
                                    <option value="Amount">Amount</option>
                                    <option value="Quantity">Quantity</option>
                                    <option value="Total Amount">Total Amount</option>
                                    <option value="Vat(%)">Vat(%)</option>
                                    <option value="Vat Amount">Vat Amount</option>
                                    <option value="Grand Total">Grand Total</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-lg-4 float-start">
                            <div class="form-group ms-2">
                                <label class="control-label">Search By : </label>
                                <input id="searchedValue" name="searchedValue" class="form-control" />
                            </div>
                        </div>
                        <div class="col-lg-4 float-start" style="margin-top:28px !important;">
                            <button class="btn btn-theme float-start ms-2 me-2" onclick="ApplyFilterToDatatable();">Search</button>
                        </div>
                    </div>
                </div>
            </div>
            <div class="card-body">
                <h4 class="card-title text-center">Account History</h4>
                <hr style="height:1px;" class="text-theme" />
                <div class="table-rep-plugin">
                    <div class="table-responsive mb-0" data-pattern="priority-columns">
                        <table id="datatable" class="table table-bordered table-striped dt-responsive nowrap" style="border-collapse: collapse; border-spacing: 0; width: 100%;">
                            <thead>
                                <tr>
                                    <th>
                                        Transaction Id
                                    </th>
                                    <th>
                                        Created On
                                    </th>
                                    <th>
                                        Company
                                    </th>
                                    <th>
                                        Description
                                    </th>
                                    <th>
                                        Type
                                    </th>
                                    <th>
                                        Amount
                                    </th>
                                    <th>
                                        Quantity
                                    </th>
                                    <th>
                                        Total Amount
                                    </th>
                                    <th>
                                        Vat(%)
                                    </th>
                                    <th>
                                        Vat Amount
                                    </th>
                                    <th>
                                        Grand Total
                                    </th>
                                    <th>
                                        Download Receipt
                                    </th>
                                    <th>

                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="EditExpense" class="modal" role="dialog" data-bs-keyboard="false" data-bs-backdrop="static"> @*tabindex="-1" *@
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit</h5>
                <button type="button" class="close btn btn-theme" id="EditExpenseModalClose" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
            </div>
        </div>
    </div>
</div>
<div id="UpdatePortalBalanceAmount" class="modal" data-bs-keyboard="false" data-bs-backdrop="static" role="dialog"> @*tabindex="-1"*@
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Portal Balance</h5>
                <button type="button" class="btn btn-theme" id="UpdatePortalBalanceAmountClose" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="sendPdfFileModal" role="dialog" data-bs-keyboard="false" data-bs-backdrop="static" style="z-index:10000 !important;">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="sendPdfFileModal" style="font-weight:600;">Send Pdf Report File</h4>
                <button class="model-close btn-theme p-2 pt-1 pb-1" data-dismiss="modal" aria-lable="Close" type="button" id="closeModal" style="border-radius:4px 4px;" onclick="window.location.reload();">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="col-md-12 mt-1" id="emailSelection">
                    <div class="form-group">
                        <label class="option-text">Email : </label>
                        <br />
                        <input type="email" id="SendPdfEmailAddress" class="form-control" placeholder="Email Address" value="@Model.emailAddress" required />
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button class="btn btn-theme" type="button" onclick="SendPdfFile()">Send</button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="sendExcelFileModal" role="dialog" data-bs-keyboard="false" data-bs-backdrop="static" style="z-index:10000 !important;">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="sendExcelFileModal" style="font-weight:600;">Send Excel Report File</h4>
                <button class="model-close btn-theme p-2 pt-1 pb-1" data-dismiss="modal" aria-lable="Close" type="button" id="closeModal" style="border-radius:4px 4px;" onclick="window.location.reload();">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="col-md-12 mt-1" id="emailSelection">
                    <div class="form-group">
                        <label class="option-text">Email : </label>
                        <br />
                        <input type="email" id="SendExcelEmailAddress" class="form-control" placeholder="Email Address" value="@Model.emailAddress" required />
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button class="btn btn-theme" type="button" onclick="SendExcelFile()">Send</button>
            </div>
        </div>
    </div>
</div>
<!-- Responsive examples -->
<script src="~/assets/libs/datatables.net-responsive/js/dataTables.responsive.min.js"></script>
<script src="~/assets/libs/datatables.net-responsive-bs4/js/responsive.bootstrap4.min.js"></script>

<!-- Sweet Alerts-->
<script src="~/assets/libs/sweetalert2/sweetalert2.all.min.js"></script>
<link href="~/assets/libs/sweetalert2/sweetalert2.min.css" />
<script>
    function DownloadDocuments() {
        var url = "@Url.Action("DownloadedDocuments", "AccountManagement")";
        window.location.href = url;
    };

    function ExportAsPdf() {
        var fromDate = $("#FromDate").val();
        var toDate = $("#ToDate").val();
        if (!/^\d{4}\-\d{1,2}\-\d{1,2}$/.test(fromDate) || !/^\d{4}\-\d{1,2}\-\d{1,2}$/.test(toDate)) {
            alert("Please Enter Valid Date Format for From and To Date.");
            if (!/^\d{4}\-\d{1,2}\-\d{1,2}$/.test(fromDate)) {
                $("#FromDate").datepicker("setDate", 0);
                $("#FromDate").focus();
            }
            else if (!/^\d{4}\-\d{1,2}\-\d{1,2}$/.test(toDate)) {
                $("#ToDate").datepicker("setDate", 0);
                $("#ToDate").focus();
            }
            return false;
        }
        else{
            $mymodal = $("#sendPdfFileModal");
            $mymodal.find("div.modal-body");
            $mymodal.modal("show");
        }
    };

    function SendPdfFile() {
        var fromDate = $("#FromDate").val();
        var toDate = $("#ToDate").val();
        // var emailAddress = $("#SendPdfEmailAddress").val();
        // var today = new Date();
        // var dd = String(today.getDate() + 1).padStart(2, '0');
        // var mm = String(today.getMonth() + 1).padStart(2, '0');
        // var yyyy = today.getFullYear();

        // const validateEmail = (email) => {
        //     return email.match(
        //         /^(([^<>()[\]\\.,;:\s@@\"]+(\.[^<>()[\]\\.,;:\s@@\"]+)*)|(\".+\"))@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/
        //     );
        // };

        // today = yyyy + '-' + mm + '-' + dd;
        // if (validateEmail(emailAddress)) {
        //     if (!/^\d{4}\-\d{1,2}\-\d{1,2}$/.test(fromDate) || !/^\d{4}\-\d{1,2}\-\d{1,2}$/.test(toDate)) {
        //         alert("Please Enter Valid Date Format for From and To Date.");
        //         if (!/^\d{4}\-\d{1,2}\-\d{1,2}$/.test(fromDate)) {
        //             $("#FromDate").datepicker("setDate", 0);
        //             $("#FromDate").focus();
        //         }
        //         else if (!/^\d{4}\-\d{1,2}\-\d{1,2}$/.test(toDate)) {
        //             $("#ToDate").datepicker("setDate", 0);
        //             $("#ToDate").focus();
        //         }
        //         return false;
        //     }
        //     else {
        //         $.ajax({
        //             url: '@Url.Action("SavePDFDownloadDocumentList", "AccountManagement")',
        //             type: 'POST',
        //             data: { 'fromDate': fromDate, 'toDate': toDate, "emailAddress":emailAddress },
        //             success: function (result) {
        //                 var fileName = result;
        //                 if (result != "") {
        //                     $mymodal = $("#sendPdfFileModal");
        //                     $mymodal.find("div.modal-body");
        //                     $mymodal.modal("hide");

        //                     const swalWithBootstrapButtons = Swal.mixin({
        //                         customClass: {
        //                             confirmButton: 'ms-3 btn btn-success',
        //                             cancelButton: 'btn btn-danger'
        //                         },
        //                         buttonsStyling: false
        //                     })

        //                     swalWithBootstrapButtons.fire({
        //                         title: 'Success.',
        //                         html: "<b>We are generating your PDF file for selected Range and will send it on your email address within 5-10 min.</b>",
        //                         icon: 'success'
        //                     }).then((result) => {
        //                         $('#FromDate').val("");
        //                         $('#ToDate').val("");

        //                         $.ajax({
        //                             url: '@Url.Action("ExportPdfEmail", "AccountManagement")',
        //                             type: 'POST',
        //                             data: { 'FromDate': fromDate, 'ToDate': toDate, "emailAddress": emailAddress, "fileName": fileName }
        //                         });
        //                     });
        //                 }
        //             }
        //         });
        //     }
        // }
        // else {
        //     alert("Please provide valid Email address.");
        //     return false;
        // }
        var url = "@Url.Action("ExportAsPdf","AccountManagement")";
        url = url + "?FromDate=" + fromDate + "&ToDate=" + toDate;
        window.open(url,"_blank");
    }

    function ExportAsExcel() {
        var fromDate = $("#FromDate").val();
        var toDate = $("#ToDate").val();
        var today = new Date();
        var dd = String(today.getDate() + 1).padStart(2, '0');
        var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!
        var yyyy = today.getFullYear();

        today = yyyy + '-' + mm + '-' + dd;

        if (!/^\d{4}\-\d{1,2}\-\d{1,2}$/.test(fromDate) || !/^\d{4}\-\d{1,2}\-\d{1,2}$/.test(toDate)) {
            alert("Please Enter Valid Date Format for From and To Date.");
            if (!/^\d{4}\-\d{1,2}\-\d{1,2}$/.test(fromDate)) {
                $("#FromDate").datepicker("setDate", 0);
                $("#FromDate").focus();
            }
            else if (!/^\d{4}\-\d{1,2}\-\d{1,2}$/.test(toDate)) {
                $("#ToDate").datepicker("setDate", 0);
                $("#ToDate").focus();
            }
            return false;
        }
        else {
            $mymodal = $("#sendExcelFileModal");
            $mymodal.find("div.modal-body");
            $mymodal.modal("show");
        }
    };

    function SendExcelFile() {
        var fromDate = $("#FromDate").val();
        var toDate = $("#ToDate").val();
        // var emailAddress = $("#SendExcelEmailAddress").val();
        // var today = new Date();
        // var dd = String(today.getDate() + 1).padStart(2, '0');
        // var mm = String(today.getMonth() + 1).padStart(2, '0');
        // var yyyy = today.getFullYear();

        // const validateEmail = (email) => {
        //     return email.match(
        //         /^(([^<>()[\]\\.,;:\s@@\"]+(\.[^<>()[\]\\.,;:\s@@\"]+)*)|(\".+\"))@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/
        //     );
        // };

        // today = yyyy + '-' + mm + '-' + dd;
        // if (validateEmail(emailAddress)) {
        //     if (!/^\d{4}\-\d{1,2}\-\d{1,2}$/.test(fromDate) || !/^\d{4}\-\d{1,2}\-\d{1,2}$/.test(toDate)) {
        //         alert("Please Enter Valid Date Format for From and To Date.");
        //         if (!/^\d{4}\-\d{1,2}\-\d{1,2}$/.test(fromDate)) {
        //             $("#FromDate").datepicker("setDate", 0);
        //             $("#FromDate").focus();
        //         }
        //         else if (!/^\d{4}\-\d{1,2}\-\d{1,2}$/.test(toDate)) {
        //             $("#ToDate").datepicker("setDate", 0);
        //             $("#ToDate").focus();
        //         }
        //         return false;
        //     }
        //     else {
        //         $.ajax({
        //             url: '@Url.Action("SaveExcelDownloadDocumentList", "AccountManagement")',
        //             type: 'POST',
        //             data: { 'fromDate': fromDate, 'toDate': toDate, "emailAddress": emailAddress },
        //             success: function (result) {
        //                 var fileName = result;
        //                 if (result != "") {
        //                     $mymodal = $("#sendExcelFileModal");
        //                     $mymodal.find("div.modal-body");
        //                     $mymodal.modal("hide");

        //                     const swalWithBootstrapButtons = Swal.mixin({
        //                         customClass: {
        //                             confirmButton: 'ms-3 btn btn-success',
        //                             cancelButton: 'btn btn-danger'
        //                         },
        //                         buttonsStyling: false
        //                     })

        //                     swalWithBootstrapButtons.fire({
        //                         title: 'Success.',
        //                         html: "<b>We are generating your Excel file for selected Range and will send it on your email address within 5-10 min.</b>",
        //                         icon: 'success'
        //                     }).then((result) => {
        //                         $('#FromDate').val("");
        //                         $('#ToDate').val("");

        //                         $.ajax({
        //                             url: '@Url.Action("ExportAsExcelEmail", "AccountManagement")',
        //                             type: 'POST',
        //                             data: { 'FromDate': fromDate, 'ToDate': toDate, "emailAddress": emailAddress, "fileName": fileName }
        //                         });
        //                     });
        //                 }
        //             }
        //         });
        //     }
        // }
        // else {
        //     alert("Please provide valid Email address.");
        //     return false;
        // }
        var url = "@Url.Action("ExportAsExcel", "AccountManagement")";
        url = url + "?FromDate=" + fromDate + "&ToDate=" + toDate;
        window.open(url, "_blank");
    }

    $(document).ready(function () {
        $("#loader").hide();
        var message = $("#message").val();
        if(message != null && message != ""){
            const swalWithBootstrapButtons = Swal.mixin({
                customClass: {
                    confirmButton: 'ms-3 btn btn-success',
                    cancelButton: 'btn btn-danger'
                },
                buttonsStyling: false
            })

            swalWithBootstrapButtons.fire({
                title: 'Error.',
                html: message,
                icon: 'error'
            }).then((result) => {
                var url = "@Url.Action("GetHistory","AccountManagement")";
                window.location.href = url;
            });
        }
    });
</script>
<script>
    $(function () {
        $("#FromDate").datepicker({
            format: 'yyyy-mm-dd',
            changeMonth: true,
            changeYear: true,
            autoclose: true,
            todayHighlight: true,
        }).on('changeDate', function (selected) {
            var minDate = new Date(selected.date);
            minDate.setDate(minDate.getDate() + 1);
            $('#ToDate').datepicker('setStartDate', minDate);
        });

        $("#ToDate").datepicker({
            format: 'yyyy-mm-dd',
            changeMonth: true,
            changeYear: true,
            autoclose: true,
            todayHighlight: true,
        }).on('changeDate', function (selected) {
            var minDate = new Date(selected.date);
            minDate.setDate(minDate.getDate() - 1);
            $('#FromDate').datepicker('setEndDate', minDate);
        });
    });
</script>
<script>
    $("#EditExpenseModalClose").on('click', function () {
        window.location.reload();
    });

    $("#UpdatePortalBalanceAmountClose").on("click", function () {
        window.location.reload();
    });
</script>
<script>
    function UpdateExpenses(Id,transactionId) {
        var Module = $("#Module").val();
        
        $.ajax({
            url: "@Url.Action("GetExpenseModification","AccountManagement")",
            method: "GET",
            data: { "Id": Id ,"TransactionId":transactionId},
            success: function (response) {
                if (response != "" && response != null) {
                    const swalWithBootstrapButtons = Swal.mixin({
                        customClass: {
                            confirmButton: 'ms-3 btn btn-success',
                            cancelButton: 'btn btn-danger'
                        },
                        buttonsStyling: false
                    })

                    swalWithBootstrapButtons.fire({
                        title: 'Error.',
                        html: response,
                        icon: 'error'
                    }).then((result) => {
                        window.location.reload();
                    });
                }
                else {
                    $.ajax({
                        url: "@Url.Action("UpdateExpenses","AccountManagement")",
                        method: "GET",
                        data: { "Id": Id, "name": Module, "ActionName": "GetHistory", "Cnt": "AccountManagement" },
                        success: function (response) {
                            $mymodal = $("#EditExpense");
                            $mymodal.find("div.modal-body").html(response);
                            $mymodal.modal("show");
                        }
                    });
                }
            }
        });
    }
</script>
<script>
    function RemoveExpenses(Id, Amount, companyId) {
        event.preventDefault();
        const swalWithBootstrapButtons = Swal.mixin({
            customClass: {
                confirmButton: 'ms-3 btn btn-success',
                cancelButton: 'btn btn-danger'
            },
            buttonsStyling: false
        })

        swalWithBootstrapButtons.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Yes, delete it!',
            cancelButtonText: 'No, cancel!',
            reverseButtons: true,
            showConfirmButton: true,
        }).then((result) => {
            if (result.isConfirmed) {
                $("#loader").show();
                $.ajax({
                    url: "@Url.Action("Delete", "PortalBalanceExpense")",
                    method: "GET",
                    data: { "Id": Id, "CompanyId": companyId, "Amount": Amount },
                    success: function (response) {
                        $("#loader").hide();
                        if (response.startsWith("Selected Expense Deleted Successfully.")) {
                            swalWithBootstrapButtons.fire({
                                title: 'Deleted.',
                                text: "Selected Expense Deleted Successfully..!!",
                                icon: 'success'
                            }).then((result) => {
                                window.location.reload();
                            });
                        }
                        else{
                            swalWithBootstrapButtons.fire({
                                title: 'Error.',
                                html: response,
                                icon: 'error'
                            }).then((result) => {
                                window.location.reload();
                            });
                        }
                    }
                });
            }
            else if (
                result.dismiss === Swal.DismissReason.cancel
            ) {
                $("#loader").hide();
                swalWithBootstrapButtons.fire(
                    'Cancelled',
                    'Cancled by User..!! :)',
                    'error'
                )
            }
        });
    };

    function UpdatePayment(Id, companyId,transactionId) {
        var module = $("#Module").val();
        $.ajax({
            url: "@Url.Action("GetTransactionModification","AccountManagement")",
            method: "GET",
            data: { "Id": Id, "CompanyId": companyId, "TransactionId": transactionId },
            success: function (response) {
                if (response != "" && response != null) {
                    const swalWithBootstrapButtons = Swal.mixin({
                        customClass: {
                            confirmButton: 'ms-3 btn btn-success',
                            cancelButton: 'btn btn-danger'
                        },
                        buttonsStyling: false
                    })

                    swalWithBootstrapButtons.fire({
                        title: 'Error.',
                        html: response,
                        icon: 'error'
                    }).then((result) => {
                        window.location.reload();
                    });
                }
                else {
                    $.ajax({
                        url: "@Url.Action("GetPaymentDetails","PortalBalanceExpense")",
                        method: "GET",
                        data: { "Id": Id, "CompanyId": companyId, "ActionName": "GetHistory", "Cnt": "AccountManagement" },
                        success: function (response) {
                            $mymodal = $("#UpdatePortalBalanceAmount");
                            $mymodal.find("div.modal-body").html(response);
                            $mymodal.modal("show");
                        }
                    });
                }
            }
        });
    };
</script>
<script>
    function RemovePayment(Id, companyId, Amount) {
        event.preventDefault();
        const swalWithBootstrapButtons = Swal.mixin({
            customClass: {
                confirmButton: 'ms-3 btn btn-success',
                cancelButton: 'btn btn-danger'
            },
            buttonsStyling: false
        })

        swalWithBootstrapButtons.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Yes, delete it!',
            cancelButtonText: 'No, cancel!',
            reverseButtons: true,
            showConfirmButton: true,
        }).then((result) => {
            if (result.isConfirmed) {
                $("#loader").show();
                $.ajax({
                    url: "@Url.Action("DeletePaymentDetails", "PortalBalanceExpense")",
                    method: "GET",
                    data: { "Id": Id, "CompanyId": companyId, "Amount": Amount },
                    success: function (response) {
                        $("#loader").hide();
                        if (response.startsWith("Selected Payment Transaction Deleted Successfully.")) {
                            swalWithBootstrapButtons.fire({
                                title: 'Deleted.',
                                text: "Selected Payment Transaction Deleted Successfully..!!",
                                icon: 'success'
                            }).then((result) => {
                                window.location.reload();
                            });
                        }
                        else{
                            swalWithBootstrapButtons.fire({
                                title: 'Error.',
                                html: response,
                                icon: 'error'
                            }).then((result) => {
                                window.location.reload();
                            });
                        }
                    }
                });
            }
            else if (
                result.dismiss === Swal.DismissReason.cancel
            ) {
                $("#loader").hide();
                swalWithBootstrapButtons.fire(
                    'Cancelled',
                    'Cancled by User..!! :)',
                    'error'
                )
            }
        });
    }
</script>
<script>

    $(document).ready(function () {
        var indexValue = $("#IndexValue").val();
        if (indexValue == "") {
            indexValue = 0;
        }
        var cnt = 0;
        var pageNumber = 0;
        var flag = false;
        var url = "@Url.Action("GetDataTableData","AccountManagement")";
        url = url + "?page=";

        var table = $("#datatable").DataTable({
            "processing": true,
            "serverSide": true,
            "filter": true,
            "ajax": {
                "type": "post",
                "datatype": "json",
                "data": function () {
                    var info = $('#datatable').DataTable().page.info();
                    $('#datatable').DataTable().ajax.url(
                        url + (info.page + 1)
                    );
                }
            },
            "responsive": true,
            "deferRender": true,
            "columns": [
                { "data": "transactionId", "name": "Transaction Id" },
                { "data": "date", "name": "Created On" },
                { "data": "companyName", "name": "Company" },
                {
                    "data": function (data, full, meta) {
                        var desc = data.description;
                        if (data.description.length > 40) {
                            desc = desc.substring(0, 40);
                            desc = desc + "....";
                            return '<span title="' + data.description + '" class="text-wrap">' + data.description + '</span>';
                        }
                        else {
                            return '<span title="' + data.description + '" class="text-wrap">' + data.description + '</span>';
                        }
                        
                    },
                    "name": "Description"
                },
                { "data": "transactionType", "name": "Type" },
                { "data": "amount", "name": "Amount" },
                { "data": "quantity", "name": "Quantity" },
                {
                    "data": "totalAmount",
                    "name": "Total Amount"
                },
                {
                    "data": function (data, full, meta) {
                        if (data.transactionType == "Credit") {
                            return '<span>----</span>';
                        }
                        else {
                            return '<span>' + data.vat + '</span>';
                        }
                    },
                    "name": "Vat(%)"
                },
                {
                    "data": function (data, full, meta) {
                        if (data.transactionType == "Credit") {
                            return '<span>----</span>';
                        }
                        else {
                            return '<span>' + data.vatAmount + '</span>';
                        }
                    },
                    "name": "Vat Amount"
                },
                {
                    "data": "grandTotal",
                    "name": "Grand Total"
                },
                {
                    "data": function (data, full, meta) {
                        if (data.expenseReceiptId != 0 && data.transactionType == "Debit") {
                            var url = "@Url.Action("DownloadExpenseReceipt","PortalBalanceExpense")";
                            return '<form action="' + url + '" method="get"> <input type="hidden" value= "' + data.expenseReceiptId + '" name="ReceiptId" /><input type="submit" value="Download" name= "Download Receipt" class="btn btn-theme" /></form>';
                        }
                        else if (data.expenseReceiptId != 0 && data.transactionType == "Credit") {
                            var url = "@Url.Action("DownloadPaymentReceipt","CompanyAccount")";
                            return '<form action="' + url + '" method="get" target="_blank"> <input type="hidden" value= "' + data.expenseReceiptId + '" name="Id" /><input type="submit" value="Download" name= "Download Receipt" class="btn btn-theme" /></form>';
                        }
                        else {
                            return '<span>----</span>';
                        }
                    },
                    "name": "Download Receipt"
                },
                {
                    "data": function (data, full, meta) {
                        if (data.transactionType == "Credit") {
                            var editButton = '<span class="btn btn-theme Update" onclick="UpdatePayment(' + data.id + ',' + data.companyId + ",'" + data.transactionId + "'" + ')"><i class="fas fa-edit"></i></span>';
                            var deleteButton = '<span class="btn btn-theme ms-2 Delete" onclick="RemovePayment(' + data.id + ',' + data.companyId + ',' + data.grandTotal + ')"><i class="fas fa-trash"></i></span>';
                            return editButton + deleteButton;
                        }
                        else if (data.transactionType == "Debit") {
                            var editButton = '<span class="btn btn-theme Update" onclick="UpdateExpenses(' + data.id + ",'" + data.transactionId + "'" + ')"><i class="fas fa-edit"></i></span>';
                            var deleteButton = '<span class="btn btn-theme ms-2 Delete" onclick="RemoveExpenses(' + data.id + ',' + data.grandTotal + ',' + data.companyId + ')"><i class="fas fa-trash"></i></span>';
                            return editButton + deleteButton;
                        }
                    },
                    "name": ""
                },
            ],
            "initComplete": function (settings, json) {
                $("#loader").show();
                $(".Update").hide();
                $(".Delete").hide();
                $(".Details").hide();
                var accountManagementView = sessionStorage.getItem("AccountManagement_View");
                var accountManagementUpdate = sessionStorage.getItem("AccountManagement_Update");
                var accountManagementDelete = sessionStorage.getItem("AccountManagement_Delete");

                if(accountManagementView != "" && accountManagementView != "null" && accountManagementView != null && accountManagementView !="undefined"){
                    $(".Details").show();
                }
                
                if (accountManagementUpdate != "" && accountManagementUpdate != "null" && accountManagementUpdate != null && accountManagementUpdate != "undefined") {
                    $(".Update").show();
                }

                if (accountManagementDelete != "" && accountManagementDelete != "null" && accountManagementDelete != null && accountManagementDelete != "undefined") {
                    $(".Delete").show();
                }

                if ((accountManagementView == "" || accountManagementView == "null" || accountManagementView == null || accountManagementView == "undefined") &&
                    (accountManagementUpdate == "" || accountManagementUpdate == "null" || accountManagementUpdate == null || accountManagementUpdate == "undefined") && 
                    (accountManagementDelete == "" || accountManagementDelete == "null" || accountManagementDelete == null || accountManagementDelete == "undefined")) 
                {
                    var module = $("#Module").val();
                    $.ajax({
                        url: "@Url.Action("GetRolePermissionsName", "Permission")",
                        method: "GET",
                        data: { "Module": "AccountManagement" },
                        success: function (RoleResponse) {
                            $.ajax({
                                url: "@Url.Action("GetUserPermissionsName", "Permission")",
                                method: "GET",
                                data: { "Module": "AccountManagement" },
                                success: function (UserResponse) {
                                    if (UserResponse.length > 0) {
                                        for (let i = 0; i < UserResponse.length; i++) {
                                            $("#" + UserResponse[i]).show();
                                            if (UserResponse[i] == "View") {
                                                $(".Details").show();
                                            }
                                            if (UserResponse[i] == "Update") {
                                                $("." + UserResponse[i]).show();
                                            }
                                            if (UserResponse[i] == "Delete") {
                                                $(".Delete").show();
                                            }
                                        }
                                        $($.fn.dataTable.tables(true)).DataTable()
                                            .columns.adjust();
                                        $("#loader").hide();
                                    }
                                    else if (RoleResponse.length > 0) {
                                        for (let i = 0; i < RoleResponse.length; i++) {
                                            $("#" + RoleResponse[i]).show();
                                            if (RoleResponse[i] == "View") {
                                                $(".Details").show();
                                            }
                                            if (RoleResponse[i] == "Update") {
                                                $("." + RoleResponse[i]).show();
                                            }
                                            if (RoleResponse[i] == "Delete") {
                                                $(".Delete").show();
                                            }
                                        }
                                        $($.fn.dataTable.tables(true)).DataTable()
                                            .columns.adjust();
                                        $("#loader").hide();
                                    }
                                }
                            })
                        }
                    });
                }
                
                $("#loader").hide();
            },
            "drawCallback": function (settings) {
                $("#loader").show();
                $(".Update").hide();
                $(".Delete").hide();
                $(".Details").hide();
                var accountManagementView = sessionStorage.getItem("AccountManagement_View");
                var accountManagementUpdate = sessionStorage.getItem("AccountManagement_Update");
                var accountManagementDelete = sessionStorage.getItem("AccountManagement_Delete");

                if (accountManagementView != "" && accountManagementView != "null" && accountManagementView != null && accountManagementView != "undefined") {
                    $(".Details").show();
                }

                if (accountManagementUpdate != "" && accountManagementUpdate != "null" && accountManagementUpdate != null && accountManagementUpdate != "undefined") {
                    $(".Update").show();
                }

                if (accountManagementDelete != "" && accountManagementDelete != "null" && accountManagementDelete != null && accountManagementDelete != "undefined") {
                    $(".Delete").show();
                }

                if ((accountManagementView == "" || accountManagementView == "null" || accountManagementView == null || accountManagementView == "undefined") &&
                    (accountManagementUpdate == "" || accountManagementUpdate == "null" || accountManagementUpdate == null || accountManagementUpdate == "undefined") &&
                    (accountManagementDelete == "" || accountManagementDelete == "null" || accountManagementDelete == null || accountManagementDelete == "undefined")) {
                    var module = $("#Module").val();
                    $.ajax({
                        url: "@Url.Action("GetRolePermissionsName", "Permission")",
                        method: "GET",
                        data: { "Module": "AccountManagement" },
                        success: function (RoleResponse) {
                            $.ajax({
                                url: "@Url.Action("GetUserPermissionsName", "Permission")",
                                method: "GET",
                                data: { "Module": "AccountManagement" },
                                success: function (UserResponse) {
                                    if (UserResponse.length > 0) {
                                        for (let i = 0; i < UserResponse.length; i++) {
                                            $("#" + UserResponse[i]).show();
                                            if (UserResponse[i] == "View") {
                                                $(".Details").show();
                                            }
                                            if (UserResponse[i] == "Update") {
                                                $("." + UserResponse[i]).show();
                                            }
                                            if (UserResponse[i] == "Delete") {
                                                $(".Delete").show();
                                            }
                                        }
                                        $($.fn.dataTable.tables(true)).DataTable()
                                            .columns.adjust();
                                        $("#loader").hide();
                                    }
                                    else if (RoleResponse.length > 0) {
                                        for (let i = 0; i < RoleResponse.length; i++) {
                                            $("#" + RoleResponse[i]).show();
                                            if (RoleResponse[i] == "View") {
                                                $(".Details").show();
                                            }
                                            if (RoleResponse[i] == "Update") {
                                                $("." + RoleResponse[i]).show();
                                            }
                                            if (RoleResponse[i] == "Delete") {
                                                $(".Delete").show();
                                            }
                                        }
                                        $($.fn.dataTable.tables(true)).DataTable()
                                            .columns.adjust();
                                        $("#loader").hide();
                                    }
                                }
                            })
                        }
                    });
                }

                $("#loader").hide();
            },
            "language": {
                'processing': '<div class="spinner-2"><div class="center-div-2"><div class="loader-circle-1"></div></div></div>'
            },
            paging: true,
            pagingType: 'simple_numbers',
            "bInfo": true,
            ordering: false,
            "aLengthMenu": [20, 30, 50],
            //"aLengthMenu": [[10, 20, 30, -1], [10, 20, 30, "All"]],
            searching: false,
            dom: "<'row'<'col-sm-3'l><'col-sm-3'f><'col-sm-6'p>>" +
                "<'row'<'col-sm-12'tr>>" +
                "<'row'<'col-sm-5'i><'col-sm-7'p>>",
        })

        $('#datatable tbody').on('click', 'td.dtr-control', function () {
            var tr = $(this).closest('tr');
            var row = table.row(tr);
            if (!tr.hasClass("shown")) {
                row.child.show();
                tr.addClass('shown');
                $("#loader").show();
                $(".Update").hide();
                $(".Delete").hide();
                $(".Details").hide();
                var accountManagementView = sessionStorage.getItem("AccountManagement_View");
                var accountManagementUpdate = sessionStorage.getItem("AccountManagement_Update");
                var accountManagementDelete = sessionStorage.getItem("AccountManagement_Delete");

                if (accountManagementView != "" && accountManagementView != "null" && accountManagementView != null && accountManagementView != "undefined") {
                    $(".Details").show();
                }

                if (accountManagementUpdate != "" && accountManagementUpdate != "null" && accountManagementUpdate != null && accountManagementUpdate != "undefined") {
                    $(".Update").show();
                }

                if (accountManagementDelete != "" && accountManagementDelete != "null" && accountManagementDelete != null && accountManagementDelete != "undefined") {
                    $(".Delete").show();
                }

                if ((accountManagementView == "" || accountManagementView == "null" || accountManagementView == null || accountManagementView == "undefined") &&
                    (accountManagementUpdate == "" || accountManagementUpdate == "null" || accountManagementUpdate == null || accountManagementUpdate == "undefined") &&
                    (accountManagementDelete == "" || accountManagementDelete == "null" || accountManagementDelete == null || accountManagementDelete == "undefined")) {
                    var module = $("#Module").val();
                    $.ajax({
                        url: "@Url.Action("GetRolePermissionsName", "Permission")",
                        method: "GET",
                        data: { "Module": "AccountManagement" },
                        success: function (RoleResponse) {
                            $.ajax({
                                url: "@Url.Action("GetUserPermissionsName", "Permission")",
                                method: "GET",
                                data: { "Module": "AccountManagement" },
                                success: function (UserResponse) {
                                    if (UserResponse.length > 0) {
                                        for (let i = 0; i < UserResponse.length; i++) {
                                            $("#" + UserResponse[i]).show();
                                            if (UserResponse[i] == "View") {
                                                $(".Details").show();
                                            }
                                            if (UserResponse[i] == "Update") {
                                                $("." + UserResponse[i]).show();
                                            }
                                            if (UserResponse[i] == "Delete") {
                                                $(".Delete").show();
                                            }
                                        }
                                        $($.fn.dataTable.tables(true)).DataTable()
                                            .columns.adjust();
                                        $("#loader").hide();
                                    }
                                    else if (RoleResponse.length > 0) {
                                        for (let i = 0; i < RoleResponse.length; i++) {
                                            $("#" + RoleResponse[i]).show();
                                            if (RoleResponse[i] == "View") {
                                                $(".Details").show();
                                            }
                                            if (RoleResponse[i] == "Update") {
                                                $("." + RoleResponse[i]).show();
                                            }
                                            if (RoleResponse[i] == "Delete") {
                                                $(".Delete").show();
                                            }
                                        }
                                        $($.fn.dataTable.tables(true)).DataTable()
                                            .columns.adjust();
                                        $("#loader").hide();
                                    }
                                }
                            })
                        }
                    });
                }

                $("#loader").hide();
            }
            else {
                row.child.hide();
                tr.removeClass('shown');
            }
        });
    });

</script>
<script>
    function ApplyFilterToDatatable() {
        var sortingBy = $("#sortingBy").val();
        var sortingOrder = $("#sortingDirection").val();

        var searchedValue = $("#searchedValue").val();
        var searchByValue = $("#searchByValue").val();

        var url = "@Url.Action("GetFilterwiseDataTable","AccountManagement")";
        url = url + "?sortColumn=" + sortingBy + "&sortColumnDirection=" + sortingOrder;
        if (searchByValue != "" && searchedValue != "") {
            url = url + "&searchBy=" + searchByValue + "&searchedValue=" + searchedValue;
        }

        if ($.fn.dataTable.isDataTable('#datatable')) {
            $('#datatable').DataTable().destroy();
            $('#datatable').empty();

            var table = $("#datatable").DataTable({
                "processing": true,
                "serverSide": true,
                "filter": true,
                "ajax": {
                    "type": "post",
                    "datatype": "json",
                    "data": function () {
                        $('#datatable').DataTable().ajax.url(
                            url
                        );
                    }
                },
                "responsive": true,
                "deferRender": true,
                "columns": [
                    { "data": "transactionId", sTitle: "Transaction Id" },
                    { "data": "date", sTitle: "Created On" },
                    { "data": "companyName", sTitle: "Company" },
                    {
                        "data": function (data, full, meta) {
                            var desc = data.description;
                            if (data.description.length > 40) {
                                desc = desc.substring(0, 40);
                                desc = desc + "....";
                                return '<span title="' + data.description + '" class="text-wrap">' + data.description + '</span>';
                            }
                            else {
                                return '<span title="' + data.description + '" class="text-wrap">' + data.description + '</span>';
                            }

                        },
                        sTitle: "Description"
                    },
                    { "data": "transactionType", sTitle: "Type" },
                    { "data": "amount", sTitle: "Amount" },
                    { "data": "quantity", sTitle: "Quantity" },
                    {
                        "data": function (data, full, meta) {
                            return '<span>' + data.totalAmount + '</span>';
                        },
                        sTitle: "Total Amount"
                    },
                    {
                        "data": function (data, full, meta) {
                            if (data.transactionType == "Credit") {
                                return '<span>----</span>';
                            }
                            else {
                                return '<span>' + data.vat + '</span>';
                            }
                        },
                        sTitle: "Vat(%)"
                    },
                    {
                        "data": function (data, full, meta) {
                            if (data.transactionType == "Credit") {
                                return '<span>----</span>';
                            }
                            else {
                                return '<span>' + data.vatAmount + '</span>';
                            }
                        },
                        sTitle: "Vat Amount"
                    },
                    {
                        "data": function (data, full, meta) {
                            return '<span>' + data.grandTotal + '</span>';
                        },
                        sTitle: "Grand Total"
                    },
                    {
                        "data": function (data, full, meta) {
                            if (data.expenseReceiptId != 0 && data.transactionType == "Debit") {
                                var url = "@Url.Action("DownloadExpenseReceipt","PortalBalanceExpense")";
                                return '<form action="' + url + '" method="get"> <input type="hidden" value= "' + data.expenseReceiptId + '" name="ReceiptId" /><input type="submit" value="Download" name= "Download Receipt" class="btn btn-theme" /></form>';
                            }
                            else if (data.expenseReceiptId != 0 && data.transactionType == "Credit") {
                                var url = "@Url.Action("DownloadPaymentReceipt","CompanyAccount")";
                                return '<form action="' + url + '" method="get" target="_blank"> <input type="hidden" value= "' + data.expenseReceiptId + '" name="Id" /><input type="submit" value="Download" name= "Download Receipt" class="btn btn-theme" /></form>';
                            }
                            else {
                                return '<span>----</span>';
                            }
                        },
                        sTitle: "Download Receipt"
                    },
                    {
                        "data": function (data, full, meta) {
                            if (data.transactionType == "Credit") {
                                var editButton = '<span class="btn btn-theme Update" onclick="UpdatePayment(' + data.id + ',' + data.companyId + ",'" + data.transactionId + "'" + ')"><i class="fas fa-edit"></i></span>';
                                var deleteButton = '<span class="btn btn-theme ms-2 Delete" onclick="RemovePayment(' + data.id + ',' + data.companyId + ',' + data.grandTotal + ')"><i class="fas fa-trash"></i></span>';
                                return editButton + deleteButton;
                            }
                            else if (data.transactionType == "Debit") {
                                var editButton = '<span class="btn btn-theme Update" onclick="UpdateExpenses(' + data.id + ",'" + data.transactionId + "'" + ')"><i class="fas fa-edit"></i></span>';
                                var deleteButton = '<span class="btn btn-theme ms-2 Delete" onclick="RemoveExpenses(' + data.id + ',' + data.grandTotal + ',' + data.companyId + ')"><i class="fas fa-trash"></i></span>';
                                return editButton + deleteButton;
                            }
                        },
                        sTitle: ""
                    },
                ],
                "initComplete": function (settings, json) {
                    $("#loader").show();
                    $(".Update").hide();
                    $(".Delete").hide();
                    $(".Details").hide();
                    var accountManagementView = sessionStorage.getItem("AccountManagement_View");
                    var accountManagementUpdate = sessionStorage.getItem("AccountManagement_Update");
                    var accountManagementDelete = sessionStorage.getItem("AccountManagement_Delete");

                    if (accountManagementView != "" && accountManagementView != "null" && accountManagementView != null && accountManagementView != "undefined") {
                        $(".Details").show();
                    }

                    if (accountManagementUpdate != "" && accountManagementUpdate != "null" && accountManagementUpdate != null && accountManagementUpdate != "undefined") {
                        $(".Update").show();
                    }

                    if (accountManagementDelete != "" && accountManagementDelete != "null" && accountManagementDelete != null && accountManagementDelete != "undefined") {
                        $(".Delete").show();
                    }

                    if ((accountManagementView == "" || accountManagementView == "null" || accountManagementView == null || accountManagementView == "undefined") &&
                        (accountManagementUpdate == "" || accountManagementUpdate == "null" || accountManagementUpdate == null || accountManagementUpdate == "undefined") &&
                        (accountManagementDelete == "" || accountManagementDelete == "null" || accountManagementDelete == null || accountManagementDelete == "undefined")) {
                        var module = $("#Module").val();
                        $.ajax({
                            url: "@Url.Action("GetRolePermissionsName", "Permission")",
                            method: "GET",
                            data: { "Module": "AccountManagement" },
                            success: function (RoleResponse) {
                                $.ajax({
                                    url: "@Url.Action("GetUserPermissionsName", "Permission")",
                                    method: "GET",
                                    data: { "Module": "AccountManagement" },
                                    success: function (UserResponse) {
                                        if (UserResponse.length > 0) {
                                            for (let i = 0; i < UserResponse.length; i++) {
                                                $("#" + UserResponse[i]).show();
                                                if (UserResponse[i] == "View") {
                                                    $(".Details").show();
                                                }
                                                if (UserResponse[i] == "Update") {
                                                    $("." + UserResponse[i]).show();
                                                }
                                                if (UserResponse[i] == "Delete") {
                                                    $(".Delete").show();
                                                }
                                            }
                                            $($.fn.dataTable.tables(true)).DataTable()
                                                .columns.adjust();
                                            $("#loader").hide();
                                        }
                                        else if (RoleResponse.length > 0) {
                                            for (let i = 0; i < RoleResponse.length; i++) {
                                                $("#" + RoleResponse[i]).show();
                                                if (RoleResponse[i] == "View") {
                                                    $(".Details").show();
                                                }
                                                if (RoleResponse[i] == "Update") {
                                                    $("." + RoleResponse[i]).show();
                                                }
                                                if (RoleResponse[i] == "Delete") {
                                                    $(".Delete").show();
                                                }
                                            }
                                            $($.fn.dataTable.tables(true)).DataTable()
                                                .columns.adjust();
                                            $("#loader").hide();
                                        }
                                    }
                                })
                            }
                        });
                    }

                    $("#loader").hide();
                },
                "drawCallback": function (settings, json) {
                    $("#loader").show();
                    $(".Update").hide();
                    $(".Delete").hide();
                    $(".Details").hide();
                    var accountManagementView = sessionStorage.getItem("AccountManagement_View");
                    var accountManagementUpdate = sessionStorage.getItem("AccountManagement_Update");
                    var accountManagementDelete = sessionStorage.getItem("AccountManagement_Delete");

                    if (accountManagementView != "" && accountManagementView != "null" && accountManagementView != null && accountManagementView != "undefined") {
                        $(".Details").show();
                    }

                    if (accountManagementUpdate != "" && accountManagementUpdate != "null" && accountManagementUpdate != null && accountManagementUpdate != "undefined") {
                        $(".Update").show();
                    }

                    if (accountManagementDelete != "" && accountManagementDelete != "null" && accountManagementDelete != null && accountManagementDelete != "undefined") {
                        $(".Delete").show();
                    }

                    if ((accountManagementView == "" || accountManagementView == "null" || accountManagementView == null || accountManagementView == "undefined") &&
                        (accountManagementUpdate == "" || accountManagementUpdate == "null" || accountManagementUpdate == null || accountManagementUpdate == "undefined") &&
                        (accountManagementDelete == "" || accountManagementDelete == "null" || accountManagementDelete == null || accountManagementDelete == "undefined")) {
                        var module = $("#Module").val();
                        $.ajax({
                            url: "@Url.Action("GetRolePermissionsName", "Permission")",
                            method: "GET",
                            data: { "Module": "AccountManagement" },
                            success: function (RoleResponse) {
                                $.ajax({
                                    url: "@Url.Action("GetUserPermissionsName", "Permission")",
                                    method: "GET",
                                    data: { "Module": "AccountManagement" },
                                    success: function (UserResponse) {
                                        if (UserResponse.length > 0) {
                                            for (let i = 0; i < UserResponse.length; i++) {
                                                $("#" + UserResponse[i]).show();
                                                if (UserResponse[i] == "View") {
                                                    $(".Details").show();
                                                }
                                                if (UserResponse[i] == "Update") {
                                                    $("." + UserResponse[i]).show();
                                                }
                                                if (UserResponse[i] == "Delete") {
                                                    $(".Delete").show();
                                                }
                                            }
                                            $($.fn.dataTable.tables(true)).DataTable()
                                                .columns.adjust();
                                            $("#loader").hide();
                                        }
                                        else if (RoleResponse.length > 0) {
                                            for (let i = 0; i < RoleResponse.length; i++) {
                                                $("#" + RoleResponse[i]).show();
                                                if (RoleResponse[i] == "View") {
                                                    $(".Details").show();
                                                }
                                                if (RoleResponse[i] == "Update") {
                                                    $("." + RoleResponse[i]).show();
                                                }
                                                if (RoleResponse[i] == "Delete") {
                                                    $(".Delete").show();
                                                }
                                            }
                                            $($.fn.dataTable.tables(true)).DataTable()
                                                .columns.adjust();
                                            $("#loader").hide();
                                        }
                                    }
                                })
                            }
                        });
                    }

                    $("#loader").hide();
                },
                "language": {
                    'processing': '<div class="spinner-2"><div class="center-div-2"><div class="loader-circle-1"></div></div></div>'
                },
                paging: true,
                pagingType: 'simple_numbers',
                "bInfo": true,
                ordering: false,
                "aLengthMenu": [20, 30, 50],
                searching: false,
                dom: "<'row'<'col-sm-3'l><'col-sm-3'f><'col-sm-6'p>>" +
                    "<'row'<'col-sm-12'tr>>" +
                    "<'row'<'col-sm-5'i><'col-sm-7'p>>",
            });

            $('#datatable tbody').on('click', 'td.dtr-control', function () {
                var tr = $(this).closest('tr');
                var row = table.row(tr);
                if (!tr.hasClass("shown")) {
                    row.child.show();
                    tr.addClass('shown');
                    $("#loader").show();
                $(".Update").hide();
                $(".Delete").hide();
                $(".Details").hide();
                var accountManagementView = sessionStorage.getItem("AccountManagement_View");
                var accountManagementUpdate = sessionStorage.getItem("AccountManagement_Update");
                var accountManagementDelete = sessionStorage.getItem("AccountManagement_Delete");

                if(accountManagementView != "" && accountManagementView != "null" && accountManagementView != null && accountManagementView !="undefined"){
                    $(".Details").show();
                }
                
                if (accountManagementUpdate != "" && accountManagementUpdate != "null" && accountManagementUpdate != null && accountManagementUpdate != "undefined") {
                    $(".Update").show();
                }

                if (accountManagementDelete != "" && accountManagementDelete != "null" && accountManagementDelete != null && accountManagementDelete != "undefined") {
                    $(".Delete").show();
                }

                if ((accountManagementView == "" || accountManagementView == "null" || accountManagementView == null || accountManagementView == "undefined") &&
                    (accountManagementUpdate == "" || accountManagementUpdate == "null" || accountManagementUpdate == null || accountManagementUpdate == "undefined") && 
                    (accountManagementDelete == "" || accountManagementDelete == "null" || accountManagementDelete == null || accountManagementDelete == "undefined")) 
                {
                    var module = $("#Module").val();
                    $.ajax({
                        url: "@Url.Action("GetRolePermissionsName", "Permission")",
                        method: "GET",
                        data: { "Module": "AccountManagement" },
                        success: function (RoleResponse) {
                            $.ajax({
                                url: "@Url.Action("GetUserPermissionsName", "Permission")",
                                method: "GET",
                                data: { "Module": "AccountManagement" },
                                success: function (UserResponse) {
                                    if (UserResponse.length > 0) {
                                        for (let i = 0; i < UserResponse.length; i++) {
                                            $("#" + UserResponse[i]).show();
                                            if (UserResponse[i] == "View") {
                                                $(".Details").show();
                                            }
                                            if (UserResponse[i] == "Update") {
                                                $("." + UserResponse[i]).show();
                                            }
                                            if (UserResponse[i] == "Delete") {
                                                $(".Delete").show();
                                            }
                                        }
                                        $($.fn.dataTable.tables(true)).DataTable()
                                            .columns.adjust();
                                        $("#loader").hide();
                                    }
                                    else if (RoleResponse.length > 0) {
                                        for (let i = 0; i < RoleResponse.length; i++) {
                                            $("#" + RoleResponse[i]).show();
                                            if (RoleResponse[i] == "View") {
                                                $(".Details").show();
                                            }
                                            if (RoleResponse[i] == "Update") {
                                                $("." + RoleResponse[i]).show();
                                            }
                                            if (RoleResponse[i] == "Delete") {
                                                $(".Delete").show();
                                            }
                                        }
                                        $($.fn.dataTable.tables(true)).DataTable()
                                            .columns.adjust();
                                        $("#loader").hide();
                                    }
                                }
                            })
                        }
                    });
                }
                
                $("#loader").hide();
                }
                else {
                    row.child.hide();
                    tr.removeClass('shown');
                }
            });
        }

    };

    function ClearFilterToDatatable() {
        window.location.reload();
    }
</script>
<script>
    $("#searchByValue").on('change', function () {
        var selectedValue = $("#searchByValue").val();
        if (selectedValue == "Created On") {
            $("#searchedValue").val("");
            $("#searchedValue").datepicker({
                format: 'dd-mm-yyyy',
                changeMonth: true,
                changeYear: true,
                autoclose: true,
                todayHighlight: true,
            })

            $("#searchedValue").attr("readonly", "readonly");
        }
        else {
            $("#searchedValue").datepicker("destroy");
            $("#searchedValue").removeAttr("readonly");
            $("#searchedValue").val("");
        }
    });
</script>
<script>
    $(function () {
        $("#Insert").hide();
        $("#View").hide();
        $(".Update").hide();
        $(".Delete").hide();
        $(".Details").hide();
    });

    $(function () {
        $("#loader").show();
        sessionStorage.removeItem("AccountManagement_View");
        sessionStorage.removeItem("AccountManagement_Update");
        sessionStorage.removeItem("AccountManagement_Delete");

        $.ajax({
            url: "@Url.Action("GetRolePermissionsName", "Permission")",
            method: "GET",
            data: { "Module": "AccountManagement" },
            success: function (RoleResponse) {
                $("#loader").show();
                $.ajax({
                    url: "@Url.Action("GetUserPermissionsName", "Permission")",
                    method: "GET",
                    data: { "Module": "AccountManagement" },
                    success: function (UserResponse) {
                        $("#loader").show();
                        if (UserResponse.length > 0) {
                            for (let i = 0; i < UserResponse.length; i++) {
                                $("#" + UserResponse[i]).show();
                                if (UserResponse[i] == "View") {
                                    sessionStorage.setItem("AccountManagement_View", "View");
                                    $(".Details").show();
                                }
                                if (UserResponse[i] == "Update") {
                                    sessionStorage.setItem("AccountManagement_Update", "Update");
                                    $("." + UserResponse[i]).show();
                                }
                                if (UserResponse[i] == "Delete") {
                                    sessionStorage.setItem("AccountManagement_Delete", "Delete");
                                    $("." + UserResponse[i]).show();
                                }
                            }
                            $("#loader").hide();
                        }
                        else if (RoleResponse.length > 0) {
                            for (let i = 0; i < RoleResponse.length; i++) {
                                $("#" + RoleResponse[i]).show();
                                if (RoleResponse[i] == "View") {
                                    sessionStorage.setItem("AccountManagement_View", "View");
                                    $(".Details").show();
                                }
                                if (RoleResponse[i] == "Update") {
                                    sessionStorage.setItem("AccountManagement_Update", "Update");
                                    $("." + RoleResponse[i]).show();
                                }
                                if (RoleResponse[i] == "Delete") {
                                    sessionStorage.setItem("AccountManagement_Delete", "Delete");
                                    $("." + RoleResponse[i]).show();
                                }
                            }
                            $("#loader").hide();

                        } else {
                            alert("You don't have any permission for this module.");
                            $("#loader").hide();
                        }
                    }
                })
            }
        });
        $("#loader").hide();
    });
</script>
<script>
    $(window).resize(function () {
        var allRows = $('#datatable tbody tr');
        allRows.each(function () {
            var tr = $(this).closest('tr');
            var row = $($.fn.dataTable.tables(true)).DataTable().row(tr);
            if (tr.hasClass("shown")) {
                row.child.hide();
                tr.removeClass('shown');
                tr.removeClass('parent');
            }
        });
    });
</script>