#pragma checksum "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\CompanyInvoice\Index.cshtml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "793b0970d7db8c5e751b643ea8a7ee8cdee709f6b89c87450d06413adbec5a1d"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_Admin_Views_CompanyInvoice_Index), @"mvc.1.0.view", @"/Areas/Admin/Views/CompanyInvoice/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using global::System;
    using global::System.Collections.Generic;
    using global::System.Linq;
    using global::System.Threading.Tasks;
    using global::Microsoft.AspNetCore.Mvc;
    using global::Microsoft.AspNetCore.Mvc.Rendering;
    using global::Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\_ViewImports.cshtml"
using DIBN;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\_ViewImports.cshtml"
using DIBN.Areas.Admin.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\_ViewImports.cshtml"
using DIBN.Areas.Admin.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\_ViewImports.cshtml"
using DIBN.Areas.Admin.IRepository;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\_ViewImports.cshtml"
using DIBN.Areas.Admin.Repository;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA256", @"793b0970d7db8c5e751b643ea8a7ee8cdee709f6b89c87450d06413adbec5a1d", @"/Areas/Admin/Views/CompanyInvoice/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA256", @"605a41b4408e5d1ff247f7264e35f4305eb9eeecf14a77cb4f30041778bbf31f", @"/Areas/Admin/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Areas_Admin_Views_CompanyInvoice_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<DIBN.Areas.Admin.Models.GetPIAndFinalInvoices>
    #nullable disable
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("type", "hidden", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("Module"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/jquery/dist/jquery.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/libs/datatables.net/js/jquery.dataTables.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/libs/datatables.net-bs4/js/dataTables.bootstrap4.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/libs/datatables.net-responsive/js/dataTables.responsive.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/libs/datatables.net-responsive-bs4/js/responsive.bootstrap4.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/libs/sweetalert2/sweetalert2.all.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 2 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\CompanyInvoice\Index.cshtml"
  
    ViewData["Title"] = "Index";

#line default
#line hidden
#nullable disable
            WriteLiteral("<style>\r\n    .datepicker {\r\n        z-index: 99999 !important;\r\n    }\r\n</style>\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("input", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "793b0970d7db8c5e751b643ea8a7ee8cdee709f6b89c87450d06413adbec5a1d7353", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.InputTypeName = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
#nullable restore
#line 10 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\CompanyInvoice\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => __model.Module);

#line default
#line hidden
#nullable disable
            __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n<div id=\"loader\">\r\n    <div class=\"spinner-1\">\r\n        <div class=\"center-div-1\">\r\n");
            WriteLiteral(@"            <div class=""loader-circle-75"">
            </div>
        </div>
    </div>
</div>
<div class=""row"" id=""View"">
    <div class=""row"">
        <div class=""col-lg-12"">
            <button class=""btn btn-blue pull-right"" style=""float:right;margin-bottom:15px;"" onclick=""AddNew();"" id=""Insert"">Create</button>
        </div>
    </div>
    <div class=""col-md-12 p-0"">
        <div class=""col-md-3 col-sm-12 col ps-1 float-start"">
            <div class=""card bg-blue p-3 mb-0 Suitable text-white text-center text-break font-weight-4 font-size-16"" style=""border-radius:15px 15px 0px 0px;"">
                Proforma Invoice(s)
            </div>
        </div>
        <div class=""col-md-3 col-sm-12 col ps-1 float-start"">
            <div class=""card p-3 Benefits mb-0 text-break border-blue-top border-blue-left border-blue-right text-blue text-center font-weight-4 font-size-16"" style=""border-radius:15px 15px 0px 0px;"">
                Final Invoice(s)
            </div>
        </div>
    </");
            WriteLiteral(@"div>
    <div class=""col-md-12 col-sm-12 col-12 ps-1 float-start cssanimation fadeInBottom"" style=""background:#F8F8F8;"" id=""Suitable"">
        <div class=""col-md-12"">
            <div class=""card"">
                <div class=""card-body"">
                    <div class=""table-rep-plugin"">
                        <div class=""table-responsive mb-0"" data-pattern=""priority-columns"">
                            <table id=""datatable"" class=""table table-bordered table-striped dt-responsive nowrap"" style=""border-collapse: collapse; border-spacing: 0; width: 100%;"">
                                <thead>
                                    <tr>
                                        <th>
                                            Invoice No.
                                        </th>
                                        <th>
                                            Date
                                        </th>
                                        <th>
                               ");
            WriteLiteral(@"             Company
                                        </th>
                                        <th>
                                            Service
                                        </th>
                                        <th>
                                            Currency
                                        </th>
                                        <th>
                                            Amount
                                        </th>
                                        <th>
                                            Generated By
                                        </th>
                                        <th>

                                        </th>
                                    </tr>
                                </thead>
                                <tbody>
                                </tbody>
                            </table>
                        </div>
                    </div>
     ");
            WriteLiteral(@"           </div>
            </div>
        </div>
    </div>
    <div class=""col-md-12 col-sm-12 col-12 ps-1 float-start d-none cssanimation fadeInBottom"" style=""background:#F8F8F8;"" id=""Benefits"">
        <div class=""col-md-12"">
            <div class=""card"">
                <div class=""card-body"">
                    <div class=""table-rep-plugin"">
                        <div class=""table-responsive mb-0"" data-pattern=""priority-columns"">
                            <table id=""datatable-1"" class=""table table-bordered table-striped dt-responsive nowrap"" style=""border-collapse: collapse; border-spacing: 0; width: 100%;"">
                                <thead>
                                    <tr>
                                        <th>
                                            Invoice No.
                                        </th>
                                        <th>
                                            Company
                                        </th>
    ");
            WriteLiteral(@"                                    <th>
                                            Final Invoice
                                        </th>
                                        <th>
                                            Created Date
                                        </th>
                                        <th>

                                        </th>
                                    </tr>
                                </thead>
                                <tbody>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
</div>
<input type=""hidden"" name=""InvoiceNumber"" id=""InvoiceNumber"" />

<div id=""CreateInvoiceInfo"" class=""modal"" role=""dialog"" aria-hidden=""true"" tabindex=""-1"" data-bs-keyboard=""false"" data-bs-backdrop=""static"">
    <div class=""modal-dialog"" role=""document"">
        <div class=");
            WriteLiteral(@"""modal-content"">
            <div class=""modal-header"">
                <h5 class=""modal-title"">Final Invoice</h5>
                <button type=""button"" class=""close btn btn-blue"" id=""CreateInvoiceInfoModalClose"" aria-label=""Close"">
                    <span aria-hidden=""true"">&times;</span>
                </button>
            </div>
            <div class=""modal-body"">
                <div class=""form-group"">
                    <label class=""control-label"">Date</label> <span class=""text-danger"">*</span>
                    <input name=""InvoiceDate"" class=""form-control"" data-toggle=""datepicker"" id=""InvoiceDate"" placeholder=""dd-mm-yyyy"" oninvalid=""this.setCustomValidity('Please Select Date which you want to display on pdf.')"" oninput=""this.setCustomValidity('')"" required readonly />
                </div>
                <div class=""form-group m-3"">
                    <input type=""button"" value=""Save"" class=""btn btn-blue"" id=""btnSaveInfo"" />
                </div>
            </div>
       ");
            WriteLiteral(@" </div>
    </div>
</div>

<div id=""InvoiceModal"" class=""modal"" role=""dialog"" aria-hidden=""true"" tabindex=""-1"" data-bs-keyboard=""false"" data-bs-backdrop=""static"">
    <div class=""modal-dialog"" role=""document"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <div class=""col-12"">
                    <button type=""button"" class=""close btn btn-blue float-end"" id=""InvoiceModalClose"" aria-label=""Close"">
                        <span aria-hidden=""true"">&times;</span>
                    </button>
                </div>
            </div>
            <div class=""modal-body"">
                <div class=""col-12"">
                    <div class=""form-group"">
                        <h5 class=""text-justify font-weight-bold"">Do You Want to Change any Invoice Details?</h5>
                        <input type=""radio"" name=""Changes"" class=""form-check-input"" value=""Yes"" /> Yes
                        <input type=""radio"" name=""Changes"" class=""form-check-input"" value");
            WriteLiteral(@"=""No"" /> No
                    </div>
                    <div class=""form-group m-3"">
                        <input type=""button"" value=""Save"" class=""btn btn-blue"" id=""btnSave"" />
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "793b0970d7db8c5e751b643ea8a7ee8cdee709f6b89c87450d06413adbec5a1d17129", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n<!-- Required datatable js -->\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "793b0970d7db8c5e751b643ea8a7ee8cdee709f6b89c87450d06413adbec5a1d18227", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "793b0970d7db8c5e751b643ea8a7ee8cdee709f6b89c87450d06413adbec5a1d19291", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n<!-- Responsive examples -->\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "793b0970d7db8c5e751b643ea8a7ee8cdee709f6b89c87450d06413adbec5a1d20391", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "793b0970d7db8c5e751b643ea8a7ee8cdee709f6b89c87450d06413adbec5a1d21455", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n<!-- Sweet Alerts-->\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "793b0970d7db8c5e751b643ea8a7ee8cdee709f6b89c87450d06413adbec5a1d22547", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n<script>\r\n    $(document).ready(function () {\r\n        var flag = false;\r\n        var url = \"");
#nullable restore
#line 185 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\CompanyInvoice\Index.cshtml"
              Write(Url.Action("GetAllCompanyProformaInvoicesWithPagination", "CompanyInvoice"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""";
        url = url + ""?page="";
        var table = $('#datatable').DataTable({
            ""processing"": true,
            ""serverSide"": true,
            ""filter"": true,
            ""ajax"": {
                ""type"": ""post"",
                ""datatype"": ""json"",
                ""data"": function () {
                    var info = $('#datatable').DataTable().page.info();
                    $('#datatable').DataTable().ajax.url(
                        url + (info.page + 1)
                    );
                }
            },
            ""columns"": [
                { ""data"": ""invoiceNumber"", ""name"": ""Invoice No."" },
                { ""data"": ""date"", ""name"": ""Date"" },
                { ""data"": ""companyName"", ""name"": ""Company"" },
                { ""data"": ""service"", ""name"": ""Service"" },
                { ""data"": ""currency"", ""name"": ""Currency"" },
                { ""data"": ""totalAmount"", ""name"": ""Amount"" },
                { ""data"": ""username"", ""name"": ""Generated By"" },
                {");
            WriteLiteral("\r\n                    \"data\": function (data, full, meta) {\r\n                        var updateInvoiceurl = \"");
#nullable restore
#line 211 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\CompanyInvoice\Index.cshtml"
                                           Write(Url.Action("GetInvoiceDetails", "CompanyInvoice"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""";
                        var viewProformaInvoice = ""GeneratePI('"" + data.invoiceNumber + ""')"";
                        var generateFinalInvoice = ""GenerateFinalInvoice('"" + data.invoiceNumber + ""')"";
                        var removePI = ""RemovePI('"" + data.invoiceNumber + ""')"";
                        return '<form action=""' + updateInvoiceurl + '"" method=""get"" class=""float-start ms-2 mt-1 Update""><input type=""hidden"" name=""InvoiceNumber"" value=""' + data.invoiceNumber + '"" /><input type=""submit"" value=""Update Invoice"" class=""btn btn-blue Update"" /></form><button class=""btn btn-blue float-start ms-2 mt-1 Details"" onclick=' + viewProformaInvoice + '>View Proforma Invoice</button><button class=""btn btn-blue float-start ms-2 mt-1 Update"" onclick=' + generateFinalInvoice + '>Generate Final Invoice</button><button class=""btn btn-blue float-start ms-2 mt-1 Delete"" onclick=' + removePI + '>Remove</button>';
                    },
                    ""name"": """"
                },
            ],
          ");
            WriteLiteral(@"  ""initComplete"": function (settings, json) {
                table.columns.adjust().draw();
                $("".Update"").hide();
                $("".Delete"").hide();
                $("".Details"").hide();
                var module = $(""#Module"").val();
                $.ajax({
                    url: """);
#nullable restore
#line 227 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\CompanyInvoice\Index.cshtml"
                     Write(Url.Action("GetRolePermissionsName", "Permission"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\",\r\n                    method: \"GET\",\r\n                    data: { \"Module\": \"Invoice\" },\r\n                    success: function (RoleResponse) {\r\n                        $.ajax({\r\n                            url: \"");
#nullable restore
#line 232 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\CompanyInvoice\Index.cshtml"
                             Write(Url.Action("GetUserPermissionsName", "Permission"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                            method: ""GET"",
                            data: { ""Module"": ""Invoice"" },
                            success: function (UserResponse) {
                                if (UserResponse.length > 0) {
                                    for (let i = 0; i < UserResponse.length; i++) {
                                        $(""#"" + UserResponse[i]).show();
                                        if (UserResponse[i] == ""View"") {
                                            $("".Details"").show();
                                        }
                                        if (UserResponse[i] == ""Update"") {
                                            $(""."" + UserResponse[i]).show();
                                        }
                                        if (UserResponse[i] == ""Delete"") {
                                            $("".Delete"").show();
                                        }
                                    }
                        ");
            WriteLiteral(@"            table.columns.adjust().draw();
                                    $(""#loader"").hide();
                                }
                                else if (RoleResponse.length > 0) {
                                    for (let i = 0; i < RoleResponse.length; i++) {
                                        $(""#"" + RoleResponse[i]).show();
                                        if (RoleResponse[i] == ""View"") {
                                            $("".Details"").show();
                                        }
                                        if (RoleResponse[i] == ""Update"") {
                                            $(""."" + RoleResponse[i]).show();
                                        }
                                        if (RoleResponse[i] == ""Delete"") {
                                            $("".Delete"").show();
                                        }
                                    }
                                    table.columns.adju");
            WriteLiteral(@"st().draw();
                                    $(""#loader"").hide();
                                }
                            }
                        })
                    }
                });
                table.columns.adjust().draw();
                $(""#loader"").hide();
            },
            ""drawCallback"": function (settings, json) {
                $($.fn.dataTable.tables(true)).DataTable()
                    .columns.adjust();
                $("".Update"").hide();
                $("".Delete"").hide();
                $("".Details"").hide();
                var module = $(""#Module"").val();
                $.ajax({
                    url: """);
#nullable restore
#line 283 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\CompanyInvoice\Index.cshtml"
                     Write(Url.Action("GetRolePermissionsName", "Permission"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\",\r\n                    method: \"GET\",\r\n                    data: { \"Module\": \"Invoice\" },\r\n                    success: function (RoleResponse) {\r\n                        $.ajax({\r\n                            url: \"");
#nullable restore
#line 288 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\CompanyInvoice\Index.cshtml"
                             Write(Url.Action("GetUserPermissionsName", "Permission"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                            method: ""GET"",
                            data: { ""Module"": ""Invoice"" },
                            success: function (UserResponse) {
                                if (UserResponse.length > 0) {
                                    for (let i = 0; i < UserResponse.length; i++) {
                                        $(""#"" + UserResponse[i]).show();
                                        if (UserResponse[i] == ""View"") {
                                            $("".Details"").show();
                                        }
                                        if (UserResponse[i] == ""Update"") {
                                            $(""."" + UserResponse[i]).show();
                                        }
                                        if (UserResponse[i] == ""Delete"") {
                                            $("".Delete"").show();
                                        }
                                    }
                        ");
            WriteLiteral(@"            $($.fn.dataTable.tables(true)).DataTable()
                                        .columns.adjust();
                                    $(""#loader"").hide();
                                }
                                else if (RoleResponse.length > 0) {
                                    for (let i = 0; i < RoleResponse.length; i++) {
                                        $(""#"" + RoleResponse[i]).show();
                                        if (RoleResponse[i] == ""View"") {
                                            $("".Details"").show();
                                        }
                                        if (RoleResponse[i] == ""Update"") {
                                            $(""."" + RoleResponse[i]).show();
                                        }
                                        if (RoleResponse[i] == ""Delete"") {
                                            $("".Delete"").show();
                                        }
                     ");
            WriteLiteral(@"               }
                                    $($.fn.dataTable.tables(true)).DataTable()
                                        .columns.adjust();
                                    $(""#loader"").hide();
                                }
                            }
                        })
                    }
                });
                $(""#loader"").hide();
            },
            responsive: true,
            ""deferRender"": true,
            ""language"": {
                'processing': '<div class=""spinner-2""><div class=""center-div-2""><div class=""loader-circle-1""></div></div></div>'
            },
            paging: true,
            pagingType: 'simple_numbers',
            ordering: true,
            searching: true,
            ""aLengthMenu"": [20, 30, 50],
            dom: ""<'row'<'col-sm-12 col-md-3 pl-1'l><'col-md-3 col-sm-12'f><'col-md-6 col-sm-12'p>>"" +
                ""<'row'<'col-sm-12'tr>>"" +
                ""<'row'<'col-md-5 col-sm-12'i><'col-md-7 co");
            WriteLiteral(@"l-sm-12'p>>"",
        });

        $('#datatable tbody').on('click', 'td.dtr-control', function () {
            var tr = $(this).closest('tr');
            var row = table.row(tr);
            if (!tr.hasClass(""shown"")) {
                row.child.show();
                tr.addClass('shown');
                $("".Update"").hide();
                $("".Delete"").hide();
                $("".Details"").hide();

                var module = $(""#Module"").val();
                $.ajax({
                    url: """);
#nullable restore
#line 359 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\CompanyInvoice\Index.cshtml"
                     Write(Url.Action("GetRolePermissionsName", "Permission"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\",\r\n                    method: \"GET\",\r\n                    data: { \"Module\": \"Invoice\" },\r\n                    success: function (RoleResponse) {\r\n                        $.ajax({\r\n                            url: \"");
#nullable restore
#line 364 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\CompanyInvoice\Index.cshtml"
                             Write(Url.Action("GetUserPermissionsName", "Permission"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                            method: ""GET"",
                            data: { ""Module"": ""Invoice"" },
                            success: function (UserResponse) {
                                if (UserResponse.length > 0) {
                                    for (let i = 0; i < UserResponse.length; i++) {
                                        $(""#"" + UserResponse[i]).show();
                                        if (UserResponse[i] == ""View"") {
                                            $("".Details"").show();
                                        }
                                        if (UserResponse[i] == ""Update"") {
                                            $(""."" + UserResponse[i]).show();
                                        }
                                        if (UserResponse[i] == ""Delete"") {
                                            $("".Delete"").show();
                                        }
                                    }
                        ");
            WriteLiteral(@"            $(""#loader"").hide();
                                }
                                else if (RoleResponse.length > 0) {
                                    for (let i = 0; i < RoleResponse.length; i++) {
                                        $(""#"" + RoleResponse[i]).show();
                                        if (RoleResponse[i] == ""View"") {
                                            $("".Details"").show();
                                        }
                                        if (RoleResponse[i] == ""Update"") {
                                            $(""."" + RoleResponse[i]).show();
                                        }
                                        if (RoleResponse[i] == ""Delete"") {
                                            $("".Delete"").show();
                                        }
                                    }
                                    $(""#loader"").hide();
                                }
                            }");
            WriteLiteral(@"
                        })
                    }
                });
                $($.fn.dataTable.tables(true)).DataTable()
                    .columns.adjust();
                $(""#loader"").hide();
            }
            else {
                row.child.hide();
                tr.removeClass('shown');
            }
        });

        var coll = document.getElementsByClassName(""Suitable"");

        for (var i = 0; i < coll.length; i++) {

            coll[i].addEventListener(""click"", function () {
                $(""#Suitable"").removeClass(""d-none"");
                $(""#Benefits"").addClass(""d-none"");
                $("".Suitable"").addClass(""bg-blue"").removeClass(""border-blue"");
                $("".Suitable"").closest(""div"").addClass(""text-white"").removeClass(""text-blue"");
                if ($("".Benefits"").hasClass(""bg-blue"")) {
                    $("".Benefits"").removeClass(""bg-blue"").addClass(""border-blue-top"").addClass(""border-blue-left"").addClass(""border-blue-right"");
  ");
            WriteLiteral(@"                  $("".Benefits"").closest(""div"").addClass(""text-blue"").removeClass(""text-white"");
                    $($.fn.dataTable.tables(true)).DataTable()
                        .columns.adjust();
                }
            });
        }
    });
</script>
<script>
    $(document).ready(function () {
        var flag = false;
        var coll = document.getElementsByClassName(""Benefits"");
        for (var i = 0; i < coll.length; i++) {
            coll[i].addEventListener(""click"", function () {
                if ($.fn.DataTable.isDataTable('#datatable-1')) {
                    $('#datatable-1').DataTable().destroy();
                    $('#datatable-1').empty();
                }

                var url = """);
#nullable restore
#line 442 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\CompanyInvoice\Index.cshtml"
                      Write(Url.Action("GetAllCompanyFinalInvoicesWithPagination", "CompanyInvoice"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""";
                url = url + ""?page="";
                var table1 = $('#datatable-1').DataTable({
                    ""processing"": true,
                    ""serverSide"": true,
                    ""filter"": true,
                    ""ajax"": {
                        ""type"": ""post"",
                        ""datatype"": ""json"",
                        ""data"": function () {
                            var info = $('#datatable-1').DataTable().page.info();
                            $('#datatable-1').DataTable().ajax.url(
                                url + (info.page + 1)
                            );
                        }
                    },
                    ""columns"": [
                        { ""data"": ""invoiceNumber"", title: ""Invoice No."", name: ""Invoice No."" },
                        { ""data"": ""companyName"", title: ""Company"", name: ""Company"" },
                        {
                            ""data"": function (data, full, meta) {
                                retu");
            WriteLiteral(@"rn data.pdfName + data.extension;
                            },
                            title: ""Final Invoice"",
                            name: ""Final Invoice""
                        },
                        { ""data"": ""username"", title: ""Generated By"", name: ""Generated By"" },
                        {
                            ""data"": function (data, full, meta) {
                                var downloadPdf = """);
#nullable restore
#line 471 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\CompanyInvoice\Index.cshtml"
                                              Write(Url.Action("DownloadSelectedDocument", "CompanyInvoice"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""";
                                downloadPdf = downloadPdf + ""?Id="" + data.id;
                                var removeFinalInvoice = ""RemoveFinalInvoice('"" + data.invoiceNumber + ""')"";
                                return '<a href=' + downloadPdf + ' class=""btn btn-blue float-start ms-2 Details"" >Download</a><button class=""btn btn-blue float-start ms-2 Delete"" onclick=' + removeFinalInvoice + '>Remove</button>';
                            },
                            title: """",
                            name: """"
                        },
                    ],
                    ""initComplete"": function (settings, json) {
                        $($.fn.dataTable.tables(true)).DataTable()
                            .columns.adjust();
                        $("".Update"").hide();
                        $("".Delete"").hide();
                        $("".Details"").hide();
                        var module = $(""#Module"").val();
                        $.ajax({
                       ");
            WriteLiteral("     url: \"");
#nullable restore
#line 488 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\CompanyInvoice\Index.cshtml"
                             Write(Url.Action("GetRolePermissionsName", "Permission"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                            method: ""GET"",
                            data: { ""Module"": ""Invoice"" },
                            success: function (RoleResponse) {
                                $.ajax({
                                    url: """);
#nullable restore
#line 493 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\CompanyInvoice\Index.cshtml"
                                     Write(Url.Action("GetUserPermissionsName", "Permission"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                                    method: ""GET"",
                                    data: { ""Module"": ""Invoice"" },
                                    success: function (UserResponse) {
                                        if (UserResponse.length > 0) {
                                            for (let i = 0; i < UserResponse.length; i++) {
                                                $(""#"" + UserResponse[i]).show();
                                                if (UserResponse[i] == ""View"") {
                                                    $("".Details"").show();
                                                }
                                                if (UserResponse[i] == ""Update"") {
                                                    $(""."" + UserResponse[i]).show();
                                                }
                                                if (UserResponse[i] == ""Delete"") {
                                                    $("".Delete"").sho");
            WriteLiteral(@"w();
                                                }
                                            }
                                            $($.fn.dataTable.tables(true)).DataTable()
                                                .columns.adjust();
                                            $(""#loader"").hide();
                                        }
                                        else if (RoleResponse.length > 0) {
                                            for (let i = 0; i < RoleResponse.length; i++) {
                                                $(""#"" + RoleResponse[i]).show();
                                                if (RoleResponse[i] == ""View"") {
                                                    $("".Details"").show();
                                                }
                                                if (RoleResponse[i] == ""Update"") {
                                                    $(""."" + RoleResponse[i]).show();
                         ");
            WriteLiteral(@"                       }
                                                if (RoleResponse[i] == ""Delete"") {
                                                    $("".Delete"").show();
                                                }
                                            }
                                            $($.fn.dataTable.tables(true)).DataTable()
                                                .columns.adjust();
                                            $(""#loader"").hide();
                                        }
                                    }
                                })
                            }
                        });
                        $($.fn.dataTable.tables(true)).DataTable()
                            .columns.adjust();
                        $(""#loader"").hide();
                    },
                    ""drawCallback"": function (settings, json) {
                        $($.fn.dataTable.tables(true)).DataTable()
                       ");
            WriteLiteral(@"     .columns.adjust();
                        $("".Update"").hide();
                        $("".Delete"").hide();
                        $("".Details"").hide();
                        var module = $(""#Module"").val();
                        $.ajax({
                            url: """);
#nullable restore
#line 547 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\CompanyInvoice\Index.cshtml"
                             Write(Url.Action("GetRolePermissionsName", "Permission"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                            method: ""GET"",
                            data: { ""Module"": ""Invoice"" },
                            success: function (RoleResponse) {
                                $.ajax({
                                    url: """);
#nullable restore
#line 552 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\CompanyInvoice\Index.cshtml"
                                     Write(Url.Action("GetUserPermissionsName", "Permission"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                                    method: ""GET"",
                                    data: { ""Module"": ""Invoice"" },
                                    success: function (UserResponse) {
                                        if (UserResponse.length > 0) {
                                            for (let i = 0; i < UserResponse.length; i++) {
                                                $(""#"" + UserResponse[i]).show();
                                                if (UserResponse[i] == ""View"") {
                                                    $("".Details"").show();
                                                }
                                                if (UserResponse[i] == ""Update"") {
                                                    $(""."" + UserResponse[i]).show();
                                                }
                                                if (UserResponse[i] == ""Delete"") {
                                                    $("".Delete"").sho");
            WriteLiteral(@"w();
                                                }
                                            }
                                            $($.fn.dataTable.tables(true)).DataTable()
                                                .columns.adjust();
                                            $(""#loader"").hide();
                                        }
                                        else if (RoleResponse.length > 0) {
                                            for (let i = 0; i < RoleResponse.length; i++) {
                                                $(""#"" + RoleResponse[i]).show();
                                                if (RoleResponse[i] == ""View"") {
                                                    $("".Details"").show();
                                                }
                                                if (RoleResponse[i] == ""Update"") {
                                                    $(""."" + RoleResponse[i]).show();
                         ");
            WriteLiteral(@"                       }
                                                if (RoleResponse[i] == ""Delete"") {
                                                    $("".Delete"").show();
                                                }
                                            }
                                            $($.fn.dataTable.tables(true)).DataTable()
                                                .columns.adjust();
                                            $(""#loader"").hide();
                                        }
                                    }
                                })
                            }
                        });
                        $($.fn.dataTable.tables(true)).DataTable()
                            .columns.adjust();
                        $(""#loader"").hide();
                    },
                    ""responsive"": true,
                    ""deferRender"": true,
                    ""language"": {
                        'processing': ");
            WriteLiteral(@"'<div class=""spinner-2""><div class=""center-div-2""><div class=""loader-circle-1""></div></div></div>'
                    },
                    paging: true,
                    pagingType: 'simple_numbers',
                    ordering: true,
                    searching: true,
                    ""aLengthMenu"": [20, 30, 50],
                    dom: ""<'row'<'col-sm-12 col-md-3'l><'col-md-3 col-sm-12'f><'col-md-6 col-sm-12'p>>"" +
                        ""<'row'<'col-sm-12'tr>>"" +
                        ""<'row'<'col-md-5 col-sm-12'i><'col-md-7 col-sm-12'p>>"",
                });

                $('#datatable-1 tbody').on('click', 'td.dtr-control', function () {

                    var tr = $(this).closest('tr');
                    var row = table1.row(tr);
                    if (!tr.hasClass(""shown"")) {
                        row.child.show();
                        tr.addClass('shown');
                        $("".Update"").hide();
                        $("".Delete"").hide();
      ");
            WriteLiteral("                  $(\".Details\").hide();\r\n\r\n                        var module = $(\"#Module\").val();\r\n                        $.ajax({\r\n                            url: \"");
#nullable restore
#line 626 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\CompanyInvoice\Index.cshtml"
                             Write(Url.Action("GetRolePermissionsName", "Permission"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                            method: ""GET"",
                            data: { ""Module"": ""Invoice"" },
                            success: function (RoleResponse) {
                                $.ajax({
                                    url: """);
#nullable restore
#line 631 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\CompanyInvoice\Index.cshtml"
                                     Write(Url.Action("GetUserPermissionsName", "Permission"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                                    method: ""GET"",
                                    data: { ""Module"": ""Invoice"" },
                                    success: function (UserResponse) {
                                        if (UserResponse.length > 0) {
                                            for (let i = 0; i < UserResponse.length; i++) {
                                                $(""#"" + UserResponse[i]).show();
                                                if (UserResponse[i] == ""View"") {
                                                    $("".Details"").show();
                                                }
                                                if (UserResponse[i] == ""Update"") {
                                                    $(""."" + UserResponse[i]).show();
                                                }
                                                if (UserResponse[i] == ""Delete"") {
                                                    $("".Delete"").sho");
            WriteLiteral(@"w();
                                                }
                                            }
                                            $(""#loader"").hide();
                                        }
                                        else if (RoleResponse.length > 0) {
                                            for (let i = 0; i < RoleResponse.length; i++) {
                                                $(""#"" + RoleResponse[i]).show();
                                                if (RoleResponse[i] == ""View"") {
                                                    $("".Details"").show();
                                                }
                                                if (RoleResponse[i] == ""Update"") {
                                                    $(""."" + RoleResponse[i]).show();
                                                }
                                                if (RoleResponse[i] == ""Delete"") {
                                              ");
            WriteLiteral(@"      $("".Delete"").show();
                                                }
                                            }
                                            $(""#loader"").hide();
                                        }
                                    }
                                })
                            }
                        });
                        $($.fn.dataTable.tables(true)).DataTable()
                            .columns.adjust();
                        $(""#loader"").hide();
                    }
                    else {
                        row.child.hide();
                        tr.removeClass('shown');
                    }
                });

                $(""#Suitable"").addClass(""d-none"");
                $(""#Benefits"").removeClass(""d-none"");
                $("".Benefits"").addClass(""bg-blue"").removeClass(""border-blue"");
                $("".Benefits"").closest(""div"").addClass(""text-white"").removeClass(""text-blue"");
                if ");
            WriteLiteral(@"($("".Suitable"").hasClass(""bg-blue"")) {
                    $("".Suitable"").removeClass(""bg-blue"").addClass(""border-blue-top"").addClass(""border-blue-left"").addClass(""border-blue-right"");
                    $("".Suitable"").closest(""div"").addClass(""text-blue"").removeClass(""text-white"");
                }
            });
        }
    });

</script>
<script>
    $(document).ready(function () {
        $(""#loader"").hide();
    });
    $(""#InvoiceModalClose"").on(""click"", function () {
        $('#InvoiceModal').modal('hide');
    });
    $(""#CreateInvoiceInfoModalClose"").on(""click"", function () {
        $('#CreateInvoiceInfo').modal('hide');
    });
</script>
<script>
    function AddNew() {
        var url = """);
#nullable restore
#line 705 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\CompanyInvoice\Index.cshtml"
              Write(Url.Action("Create", "CompanyInvoice"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\";\r\n        window.location.href = url;\r\n    };\r\n\r\n    function GeneratePI(invoice) {\r\n        var url = \"");
#nullable restore
#line 710 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\CompanyInvoice\Index.cshtml"
              Write(Url.Action("ProformaInvoice", "CompanyInvoice"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""";
        url = url + ""?InvoiceNumber="" + invoice;
        window.open(url, ""NewWindow"");
    };

    function GenerateFinalInvoice(invoice) {
        $(""#InvoiceNumber"").val(invoice);
        $mymodal = $(""#InvoiceModal"");
        $mymodal.modal(""show"");
    };
</script>
<script>
    $(""#btnSave"").on(""click"", function () {

        var selectedVal = """";
        var select = $(""input[name='Changes']:checked"").val();
        if (select.length > 0) {

            selectedVal = select;
            if (selectedVal == ""No"") {
                $('#InvoiceModal').modal('hide');
                $mymodal = $(""#CreateInvoiceInfo"");
                $mymodal.modal(""show"");
            }
            else if (selectedVal == ""Yes"") {
                var invoice = $(""#InvoiceNumber"").val();
                var url = """);
#nullable restore
#line 736 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\CompanyInvoice\Index.cshtml"
                      Write(Url.Action("InvoiceDetails", "CompanyInvoice"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""";
                url = url + ""?InvoiceNumber="" + invoice;
                window.location.href = url;
            }
        }
    });
</script>
<script>
    $(function () {
        $('#InvoiceDate').datepicker({
            format: ""yyyy-mm-dd"",
            changeMonth: true,
            changeYear: true,
            autoclose: true,
            todayHighlight: true,
        });
    });
</script>
<script>
    $(""#btnSaveInfo"").on(""click"", function () {
        $(""#loader"").show();
        var invoiceDate = $(""#InvoiceDate"").val();
        var invoice = $(""#InvoiceNumber"").val();
        var invoiceName = invoice + '_' + invoiceDate;

        if (invoiceDate == """" || invoiceDate == null) {
            $(""#loader"").hide();
            alert(""Please Select Date Which You Want To Display On Pdf."");
            $(""#InvoiceDate"").focus();
            return false;
        }
        if (!/^\d{4}\-\d{1,2}\-\d{1,2}$/.test(invoiceDate)) {
            var today = new Date();
          ");
            WriteLiteral(@"  var dd = String(today.getDate()).padStart(2, '0');
            var mm = String(today.getMonth() + 1).padStart(2, '0');
            var yyyy = today.getFullYear();

            today = yyyy + '-' + mm + '-' + dd;

            alert(""Please Enter Valid Date Format for Invoice Date."");
            $('#InvoiceDate').datepicker('setDate', today);
            $(""#InvoiceDate"").focus();
            $(""#loader"").hide();
            return false;
        }
        $.ajax({
            url: """);
#nullable restore
#line 782 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\CompanyInvoice\Index.cshtml"
             Write(Url.Action("CheckFinalInvoice", "CompanyInvoice"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
            method: ""GET"",
            data: { ""Invoice"": invoice },
            success: function (response) {
                $(""#loader"").hide();
                if (parseInt(response) < 0) {
                    const swalWithBootstrapButtons = Swal.mixin({
                        customClass: {
                            confirmButton: 'ms-3 btn btn-success',
                            cancelButton: 'btn btn-danger'
                        },
                        buttonsStyling: false
                    })

                    swalWithBootstrapButtons.fire({
                        title: 'Do you want to Overwrite Final Invoice?',
                        text: ""You won't be able to revert this!"",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonText: 'Yes, delete it!',
                        cancelButtonText: 'No, cancel!',
                        reverseButtons: true,
                        showC");
            WriteLiteral("onfirmButton: true,\r\n                    }).then((result) => {\r\n                        if (result.isConfirmed) {\r\n                            $(\"#loader\").hide();\r\n                            var url = \"");
#nullable restore
#line 808 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\CompanyInvoice\Index.cshtml"
                                  Write(Url.Action("TaxInvoice", "CompanyInvoice"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                                url = url + ""?InvoiceNumber="" + invoice + ""&InvoiceName="" + invoiceName + ""&InvoiceDate="" + invoiceDate;
                            $('#CreateInvoiceInfo').modal('hide');
                            var win = window.open(url, 'WorkshopJobDone');
                            var timer = setInterval(function () {
                                if (win.closed) {
                                    clearInterval(timer);
                                    window.location.reload();
                                }
                            }, 300);

                        } else {
                            window.location.reload();
                        }
                    });
                }
                else {
                    $(""#loader"").hide();
                    var url = """);
#nullable restore
#line 826 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\CompanyInvoice\Index.cshtml"
                          Write(Url.Action("TaxInvoice", "CompanyInvoice"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                        url = url + ""?InvoiceNumber="" + invoice + ""&InvoiceName="" + invoiceName + ""&InvoiceDate="" + invoiceDate;
                    $('#CreateInvoiceInfo').modal('hide');
                    var win = window.open(url, 'WorkshopJobDone');
                    var timer = setInterval(function () {
                        if (win.closed) {
                            clearInterval(timer);
                            window.location.reload();
                        }
                    }, 300);
                }
            }
        });
    });
</script>
<script>
    function RemovePI(Invoicenumber) {
        event.preventDefault();
        const swalWithBootstrapButtons = Swal.mixin({
            customClass: {
                confirmButton: 'ms-3 btn btn-success',
                cancelButton: 'btn btn-danger'
            },
            buttonsStyling: false
        })

        swalWithBootstrapButtons.fire({
            title: 'Are you sure?',
            text:");
            WriteLiteral(@" ""You won't be able to revert this!"",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Yes, delete it!',
            cancelButtonText: 'No, cancel!',
            reverseButtons: true,
            showConfirmButton: true,
        }).then((result) => {
            if (result.isConfirmed) {
                $(""#loader"").show();
                $.ajax({
                    url: """);
#nullable restore
#line 865 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\CompanyInvoice\Index.cshtml"
                     Write(Url.Action("DeletePI", "CompanyInvoice"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                    method: ""GET"",
                    data: { ""Invoice"": Invoicenumber },
                    success: function (response) {
                        $(""#loader"").hide();
                        swalWithBootstrapButtons.fire({
                            title: 'Deleted.',
                            text: ""Proforma Invoice Deleted Successfully..!!"",
                            icon: 'success'
                        }).then((result) => {
                            window.location.reload();
                        });
                    }
                });
            }
            else if (
                result.dismiss === Swal.DismissReason.cancel
            ) {
                $(""#loader"").hide();
                swalWithBootstrapButtons.fire(
                    'Cancelled',
                    'Cancled by User..!! :)',
                    'error'
                )
            }
        });
    };


    function RemoveFinalInvoice(Invoicenumber) {
  ");
            WriteLiteral(@"      event.preventDefault();
        const swalWithBootstrapButtons = Swal.mixin({
            customClass: {
                confirmButton: 'ms-3 btn btn-success',
                cancelButton: 'btn btn-danger'
            },
            buttonsStyling: false
        })

        swalWithBootstrapButtons.fire({
            title: 'Are you sure?',
            text: ""You won't be able to revert this!"",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Yes, delete it!',
            cancelButtonText: 'No, cancel!',
            reverseButtons: true,
            showConfirmButton: true,
        }).then((result) => {
            if (result.isConfirmed) {
                $(""#loader"").show();
                $.ajax({
                    url: """);
#nullable restore
#line 917 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\CompanyInvoice\Index.cshtml"
                     Write(Url.Action("DeleteFinalInvoice", "CompanyInvoice"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                    method: ""GET"",
                    data: { ""Invoice"": Invoicenumber },
                    success: function (response) {
                        $(""#loader"").hide();
                        swalWithBootstrapButtons.fire({
                            title: 'Deleted.',
                            text: ""Invoice Deleted Successfully..!!"",
                            icon: 'success'
                        }).then((result) => {
                            window.location.reload();
                        });
                    }
                });
            }
            else if (
                result.dismiss === Swal.DismissReason.cancel
            ) {
                $(""#loader"").hide();
                swalWithBootstrapButtons.fire(
                    'Cancelled',
                    'Cancled by User..!! :)',
                    'error'
                )
            }
        });
    };

</script>
<script>
    $(""#searchByValueProforma"").on('change");
            WriteLiteral(@"', function () {
        var selectedValue = $(""#searchByValueProforma"").val();
        if (selectedValue == ""Created Date"") {
            $(""#searchedValueProforma"").val("""");
            $(""#searchedValueProforma"").datepicker({
                format: 'dd-mm-yyyy',
                changeMonth: true,
                changeYear: true,
                autoclose: true,
                todayHighlight: true,
            })

            $(""#searchedValueProforma"").attr(""readonly"", ""readonly"");
        }
        else {
            $(""#searchedValueProforma"").datepicker(""destroy"");
            $(""#searchedValueProforma"").removeAttr(""readonly"");
            $(""#searchedValueProforma"").val("""");
        }
    });

    $(""#searchByValueFinal"").on('change', function () {
        var selectedValue = $(""#searchByValueFinal"").val();
        $(""#searchedValueFinal"").val("""");
    });

    function ClearFilterToDatatable() {
        window.location.reload();
    }
</script>
<script>
    $(function");
            WriteLiteral(@" () {
        $(""#Insert"").hide();
        $(""#View"").hide();
        $("".Update"").hide();
        $("".Delete"").hide();
        $("".Details"").hide();
    });
</script>
<script>
    $(function () {
        $(""#loader"").show();
        var module = $(""#Module"").val();
        $.ajax({
            url: """);
#nullable restore
#line 991 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\CompanyInvoice\Index.cshtml"
             Write(Url.Action("GetRolePermissionsName", "Permission"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\",\r\n            method: \"GET\",\r\n            data: { \"Module\": \"Invoice\" },\r\n            success: function (RoleResponse) {\r\n                $(\"#loader\").show();\r\n                $.ajax({\r\n                    url: \"");
#nullable restore
#line 997 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\CompanyInvoice\Index.cshtml"
                     Write(Url.Action("GetUserPermissionsName", "Permission"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                    method: ""GET"",
                    data: { ""Module"": ""Invoice"" },
                    success: function (UserResponse) {
                        $(""#loader"").show();
                        if (UserResponse.length > 0) {
                            for (let i = 0; i < UserResponse.length; i++) {
                                $(""#"" + UserResponse[i]).show();
                                if (UserResponse[i] == ""View"") {
                                    $("".Details"").show();
                                }
                                if (UserResponse[i] == ""Update"") {
                                    $(""."" + UserResponse[i]).show();
                                }
                                if (UserResponse[i] == ""Delete"") {
                                    $(""."" + UserResponse[i]).show();
                                }
                            }
                            $(""#loader"").hide();
                        }
                 ");
            WriteLiteral(@"       else if (RoleResponse.length > 0) {
                            for (let i = 0; i < RoleResponse.length; i++) {
                                $(""#"" + RoleResponse[i]).show();
                                if (RoleResponse[i] == ""View"") {
                                    $("".Details"").show();
                                }
                                if (RoleResponse[i] == ""Update"") {
                                    $(""."" + RoleResponse[i]).show();
                                }
                                if (RoleResponse[i] == ""Delete"") {
                                    $(""."" + RoleResponse[i]).show();
                                }
                            }
                            $(""#loader"").hide();
                        } else {
                            alert(""You don't have any permission for this module."");
                            $(""#loader"").hide();
                        }
                    }
                })
          ");
            WriteLiteral(@"  }
        });
        $(""#loader"").hide();
    });
</script>
<script>
    $(window).resize(function () {
        var allRows = $('#datatable tbody tr');
        allRows.each(function () {
            var tr = $(this).closest('tr');
            var row = $($.fn.dataTable.tables(true)).DataTable().row(tr);
            if (tr.hasClass(""shown"")) {
                row.child.hide();
                tr.removeClass('shown');
                tr.removeClass('parent');
            }
        });

        var allRows1 = $('#datatable-1 tbody tr');
        allRows1.each(function () {
            var tr = $(this).closest('tr');
            var row = $($.fn.dataTable.tables(true)).DataTable().row(tr);
            if (tr.hasClass(""shown"")) {
                row.child.hide();
                tr.removeClass('shown');
                tr.removeClass('parent');
            }
        });
    });
</script>");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<DIBN.Areas.Admin.Models.GetPIAndFinalInvoices> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
