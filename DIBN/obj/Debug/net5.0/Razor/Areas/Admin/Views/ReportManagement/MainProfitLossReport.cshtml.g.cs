#pragma checksum "D:\DIBN PORTAL\DIBN PORTAL - LIVE\DIBN\Areas\Admin\Views\ReportManagement\MainProfitLossReport.cshtml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "70a862323a0089255fc9f77ba19bf6db71e58360e7c012f8bfcea05ae6d763f1"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_Admin_Views_ReportManagement_MainProfitLossReport), @"mvc.1.0.view", @"/Areas/Admin/Views/ReportManagement/MainProfitLossReport.cshtml")]
namespace AspNetCore
{
    #line default
    using global::System;
    using global::System.Collections.Generic;
    using global::System.Linq;
    using global::System.Threading.Tasks;
    using global::Microsoft.AspNetCore.Mvc;
    using global::Microsoft.AspNetCore.Mvc.Rendering;
    using global::Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\DIBN PORTAL\DIBN PORTAL - LIVE\DIBN\Areas\Admin\Views\_ViewImports.cshtml"
using DIBN

#nullable disable
    ;
#nullable restore
#line 2 "D:\DIBN PORTAL\DIBN PORTAL - LIVE\DIBN\Areas\Admin\Views\_ViewImports.cshtml"
using DIBN.Areas.Admin.Models

#nullable disable
    ;
#nullable restore
#line 3 "D:\DIBN PORTAL\DIBN PORTAL - LIVE\DIBN\Areas\Admin\Views\_ViewImports.cshtml"
using DIBN.Areas.Admin.Data

#nullable disable
    ;
#nullable restore
#line 4 "D:\DIBN PORTAL\DIBN PORTAL - LIVE\DIBN\Areas\Admin\Views\_ViewImports.cshtml"
using DIBN.Areas.Admin.IRepository

#nullable disable
    ;
#nullable restore
#line 5 "D:\DIBN PORTAL\DIBN PORTAL - LIVE\DIBN\Areas\Admin\Views\_ViewImports.cshtml"
using DIBN.Areas.Admin.Repository

#line default
#line hidden
#nullable disable
    ;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"Sha256", @"70a862323a0089255fc9f77ba19bf6db71e58360e7c012f8bfcea05ae6d763f1", @"/Areas/Admin/Views/ReportManagement/MainProfitLossReport.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"Sha256", @"605a41b4408e5d1ff247f7264e35f4305eb9eeecf14a77cb4f30041778bbf31f", @"/Areas/Admin/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Areas_Admin_Views_ReportManagement_MainProfitLossReport : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    #nullable disable
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/dibn_business_image/paper_2.jpg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("img-fluid text-center"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/dibn_business_image/seo-investment-business-data-analysis-optimization_18660-3125.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("img-fluid text-center mt-2"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "01", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "02", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "03", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "04", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "05", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "06", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "07", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_12 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "08", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_13 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "09", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_14 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "10", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_15 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "11", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_16 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "12", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\DIBN PORTAL\DIBN PORTAL - LIVE\DIBN\Areas\Admin\Views\ReportManagement\MainProfitLossReport.cshtml"
  
    ViewData["Title"] = "Main Company Profit & Loss Report";

#line default
#line hidden
#nullable disable

            WriteLiteral(@"<style>
    .addEffect {
        /*box-shadow: 3px 1px #243c7c;*/
        box-shadow: 3px 1px #243c7c;
    }
</style>
<div id=""loader"">
    <div class=""spinner-1"">
        <div class=""center-div-1"">
            <div class=""loader-circle-75"">
            </div>
        </div>
    </div>
</div>
<div class=""row"" id=""View"">
    <div class=""col-12"">
        <div class=""card"">
            <div class=""card-body"">
                <h3 class=""text-center front-text-theme fw-bold"">Profit & Loss Report</h3>
                
                <hr class=""text-theme"" style=""height:1px;"" />
                <div class=""col-md-12"" id=""showBackButtonBlock"" hidden=""hidden"">
                    <h5 class=""text-center front-text-theme fw-bold mt-2"" id=""showSelectedType""></h5>
                    <button class=""btn btn-theme float-end"" id=""backButtonReport"">
                        Back
                    </button>
                </div>

                <div class=""col-md-12 mt-4 mb-3"" id=""SelectPdfOrGra");
            WriteLiteral(@"phType"">
                    <div class=""row text-center justify-content-center"">
                        <div class=""col-md-2 col-sm-4 p-1 mx-3 mt-1 float-left border rounded-3 bg-white border-theme front-text-theme"" style=""cursor:pointer;"" onclick=""SelectRangeType('Pdf or Excel');"" onmouseover=""addeffect1();"" onmouseout=""removeeffect1();"" id=""effect1"">
                            <p class=""text-center h5 text-truncate front-text-theme text-break mt-2"">Pdf or Excel</p>
                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "70a862323a0089255fc9f77ba19bf6db71e58360e7c012f8bfcea05ae6d763f111264", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                        </div>
                        <div class=""col-md-2 col-sm-4 p-1 mx-3 mt-1 float-left border rounded-3 bg-white border-theme front-text-theme"" style=""cursor:pointer;"" onclick=""SelectRangeType('Graph');"" onmouseover=""addeffect2();"" onmouseout=""removeeffect2();"" id=""effect2"">
                            <p class=""text-center h5 text-truncate front-text-theme text-break mt-2"">Graph</p>
                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "70a862323a0089255fc9f77ba19bf6db71e58360e7c012f8bfcea05ae6d763f112856", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                        </div>
                    </div>
                </div>
                
                <div class=""col-md-12 mt-4 mb-3"" id=""SelectedRangeType"" hidden=""hidden"">
                    <div class=""row text-center justify-content-center"">
                        <div class=""col-md-2 col-sm-4 p-1 mx-3 mt-1 float-left"" id=""Weekly"">
                            <input type=""radio"" name=""SelectedOptionType"" class=""form-check-input"" value=""Weekly"" onclick=""GetSelectedType('Weekly');"" /><span class=""front-text-theme text-center h5 text-truncate text-break mt-2 ms-2"">Weekly</span>
                        </div>
                        <div class=""col-md-2 col-sm-4 p-1 mx-3 mt-1 float-left"" id=""Monthly"">
                            <input type=""radio"" name=""SelectedOptionType"" class=""form-check-input"" value=""Monthly"" onclick=""GetSelectedType('Monthly');"" /><span class=""front-text-theme text-center h5 text-truncate text-break mt-2 ms-2"">Monthly</span>
                        </div>
  ");
            WriteLiteral(@"                      <div class=""col-md-2 col-sm-4 p-1 mx-3 mt-1 float-left"" id=""Yearly"">
                            <input type=""radio"" name=""SelectedOptionType"" class=""form-check-input"" value=""Yearly"" onclick=""GetSelectedType('Yearly');"" /><span class=""front-text-theme text-center h5 text-truncate text-break mt-2 ms-2"">Yearly</span>
                        </div>
                        <div class=""col-md-2 col-sm-4 p-1 mx-3 mt-1 float-left"" id=""Custom"">
                            <input type=""radio"" name=""SelectedOptionType"" class=""form-check-input"" value=""Custom"" onclick=""GetSelectedType('Custom');"" checked=""checked"" /><span class=""front-text-theme text-center h5 text-truncate text-break mt-2 ms-2"">Custom</span>
                        </div>
                    </div>
                </div>

                <div id=""weeklySelection"" hidden=""hidden"">
                    <div class=""row text-center justify-content-center"">
                        <div class=""col-md-2 col-sm-4 p-1 mx-3 mt-2 fl");
            WriteLiteral(@"oat-left"">
                            <button class=""btn btn-theme"" id=""weeklyReport"">
                                Generate Report
                            </button>
                        </div>
                    </div>
                </div>
                
                <div id=""monthSelection"" hidden=""hidden"">
                    <div class=""row text-center justify-content-center"">
                        <div class=""col-md-4 col-sm-6 p-1 mx-3 mt-1 float-left"">
                            <p class=""front-text-theme text-center h5 text-truncate text-break mt-2 ms-2"">Select Month :</p>
                            <select name=""selectMonth"" id=""selectMonth"" class=""form-control form-select"">
                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "70a862323a0089255fc9f77ba19bf6db71e58360e7c012f8bfcea05ae6d763f116965", async() => {
                WriteLiteral("Select Month");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_4.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("selected", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "70a862323a0089255fc9f77ba19bf6db71e58360e7c012f8bfcea05ae6d763f118498", async() => {
                WriteLiteral("January");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_5.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "70a862323a0089255fc9f77ba19bf6db71e58360e7c012f8bfcea05ae6d763f119715", async() => {
                WriteLiteral("February");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_6.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_6);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "70a862323a0089255fc9f77ba19bf6db71e58360e7c012f8bfcea05ae6d763f120933", async() => {
                WriteLiteral("March");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_7.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_7);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "70a862323a0089255fc9f77ba19bf6db71e58360e7c012f8bfcea05ae6d763f122148", async() => {
                WriteLiteral("April");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_8.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "70a862323a0089255fc9f77ba19bf6db71e58360e7c012f8bfcea05ae6d763f123363", async() => {
                WriteLiteral("May");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_9.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_9);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "70a862323a0089255fc9f77ba19bf6db71e58360e7c012f8bfcea05ae6d763f124576", async() => {
                WriteLiteral("June");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_10.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_10);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "70a862323a0089255fc9f77ba19bf6db71e58360e7c012f8bfcea05ae6d763f125792", async() => {
                WriteLiteral("July");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_11.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_11);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "70a862323a0089255fc9f77ba19bf6db71e58360e7c012f8bfcea05ae6d763f127008", async() => {
                WriteLiteral("August");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_12.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_12);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "70a862323a0089255fc9f77ba19bf6db71e58360e7c012f8bfcea05ae6d763f128226", async() => {
                WriteLiteral("September");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_13.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_13);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "70a862323a0089255fc9f77ba19bf6db71e58360e7c012f8bfcea05ae6d763f129447", async() => {
                WriteLiteral("October");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_14.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_14);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "70a862323a0089255fc9f77ba19bf6db71e58360e7c012f8bfcea05ae6d763f130666", async() => {
                WriteLiteral("November");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_15.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_15);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "70a862323a0089255fc9f77ba19bf6db71e58360e7c012f8bfcea05ae6d763f131886", async() => {
                WriteLiteral("December");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_16.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_16);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                            </select>
                        </div>
                        <div class=""col-md-4 col-sm-6 p-1 mx-3 mt-1 float-left"">
                            <p class=""front-text-theme text-center h5 text-truncate text-break mt-2 ms-2"">Select Year :</p>
                            <select name=""selectYear"" id=""selectYear"" class=""form-control form-select"">
                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "70a862323a0089255fc9f77ba19bf6db71e58360e7c012f8bfcea05ae6d763f133498", async() => {
                WriteLiteral("Select Year");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_4.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("selected", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                            </select>
                        </div>
                    </div>
                    <div class=""row text-center justify-content-center"">
                        <div class=""col-md-2 col-sm-4 p-1 mx-3 mt-2 float-left"">
                            <button class=""btn btn-theme"" id=""monthReport"">
                                Generate Report
                            </button>
                        </div>
                    </div>
                </div>
                
                <div id=""yearSelection"" hidden=""hidden"">
                    <div class=""row text-center justify-content-center"">
                        <div class=""col-md-4 col-sm-6 p-1 mx-3 mt-1 float-left"">
                            <p class=""front-text-theme text-center h5 text-truncate text-break mt-2 ms-2"">Select Year :</p>
                            <select name=""selectYear"" id=""selectedYear"" class=""form-control form-select"">
                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "70a862323a0089255fc9f77ba19bf6db71e58360e7c012f8bfcea05ae6d763f136021", async() => {
                WriteLiteral("Select Year");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_4.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("selected", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                            </select>
                        </div>
                    </div>
                    <div class=""row text-center justify-content-center"">
                        <div class=""col-md-2 col-sm-4 p-1 mx-3 mt-2 float-left"">
                            <button class=""btn btn-theme"" id=""yearReport"">
                                Generate Report
                            </button>
                        </div>
                    </div>
                </div>
                
                <div id=""customSelection"" hidden=""hidden"">
                    <div class=""row text-center justify-content-center"">
                        <div class=""col-md-4 col-sm-6 p-1 mx-3 mt-1 float-left"">
                            <p class=""front-text-theme text-center h5 text-truncate text-break mt-2 ms-2"">From Date :</p>
                            <input name=""FromDate"" class=""form-control"" id=""FromDate"" placeholder=""yyyy-mm-dd"" readonly />
                        </div>
      ");
            WriteLiteral(@"                  <div class=""col-md-4 col-sm-6 p-1 mx-3 mt-1 float-left"">
                            <p class=""front-text-theme text-center h5 text-truncate text-break mt-2 ms-2"">To Date :</p>
                            <input name=""ToDate"" class=""form-control"" id=""ToDate"" placeholder=""yyyy-mm-dd"" readonly />
                        </div>
                    </div>
                    <div class=""row text-center justify-content-center"">
                        <div class=""col-md-2 col-sm-4 p-1 mx-3 mt-2 float-left"">
                            <button class=""btn btn-theme"" id=""customReport"">
                                Generate Report
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<input type=""hidden"" name=""SelectedType"" id=""SelectedType"" />

<script>
    $(document).ready(function () {
        $(""#loader"").hide();
    });

    function addeffect1() {
   ");
            WriteLiteral(@"     $(""#effect1"").addClass(""addEffect"");
    };

    function removeeffect1() {
        $(""#effect1"").removeClass(""addEffect"");
    };

    function addeffect2() {
        $(""#effect2"").addClass(""addEffect"");
    };

    function removeeffect2() {
        $(""#effect2"").removeClass(""addEffect"");
    };
</script>
<script>
    function GetSelectedType(getSelectedName) {
        if (getSelectedName == ""Weekly"") {
            $(""#monthSelection"").attr(""hidden"", ""hidden"");
            $(""#yearSelection"").attr(""hidden"", ""hidden"");
            $(""#weeklySelection"").removeAttr(""hidden"");
            $(""#customSelection"").attr(""hidden"", ""hidden"");
        }
        else if (getSelectedName == ""Monthly"") {
            $(""#monthSelection"").removeAttr(""hidden"");
            $(""#yearSelection"").attr(""hidden"", ""hidden"");
            $(""#weeklySelection"").attr(""hidden"", ""hidden"");
            $(""#customSelection"").attr(""hidden"", ""hidden"");
        }
        else if (getSelectedName == ""Yearly"") ");
            WriteLiteral(@"{
            $(""#monthSelection"").attr(""hidden"", ""hidden"");
            $(""#yearSelection"").removeAttr(""hidden"");
            $(""#weeklySelection"").attr(""hidden"", ""hidden"");
            $(""#customSelection"").attr(""hidden"", ""hidden"");
        }
        else if (getSelectedName == ""Custom"") {
            $(""#monthSelection"").attr(""hidden"", ""hidden"");
            $(""#yearSelection"").attr(""hidden"", ""hidden"");
            $(""#customSelection"").removeAttr(""hidden"");
            $(""#weeklySelection"").attr(""hidden"", ""hidden"");
        }
    };

    function SelectRangeType(selectedType) {
        $(""#SelectedType"").val(selectedType);
        $(""#showSelectedType"").text(selectedType);
        $(""#SelectPdfOrGraphType"").attr(""hidden"", ""hidden"");
        $(""#showBackButtonBlock"").removeAttr(""hidden"");
        $(""#SelectedRangeType"").removeAttr(""hidden"");
        $(""#customSelection"").removeAttr(""hidden"");
    };

    $(""#backButtonReport"").on('click',function(){
        $(""#SelectPdfOrGraphType""");
            WriteLiteral(@").removeAttr(""hidden"");
        $(""#SelectedRangeType"").attr(""hidden"", ""hidden"");
        $(""#monthSelection"").attr(""hidden"", ""hidden"");
        $(""#yearSelection"").attr(""hidden"", ""hidden"");
        $(""#weeklySelection"").attr(""hidden"", ""hidden"");
        $(""#customSelection"").attr(""hidden"", ""hidden"");
        $(""#showSelectedType"").text("""");
        $(""input:radio[name='SelectedOptionType']"").prop(""checked"", false);
        $(""input:radio[name='SelectedOptionType'][value='Custom']"").prop(""checked"", true);
        $(""#showBackButtonBlock"").attr(""hidden"", ""hidden"");
    });

    // Generate Year Select List from year 2020 to current year
    $(document).ready(function () {
        const d = new Date();
        let year = d.getFullYear();
        var yearRange = new Array();
        var previousYear = ""2020"";
        var indexRange = parseInt(year) - parseInt(previousYear);

        for (var index = 0; index <= indexRange; index++) {
            if(parseInt(year) == parseInt(previousYear)){");
            WriteLiteral(@"
                $(""#selectYear"").append('<option value=' + parseInt(previousYear) + ' selected=""selected"">' + parseInt(previousYear) + '</option>');
                $(""#selectedYear"").append('<option value=' + parseInt(previousYear) + ' selected=""selected"">' + parseInt(previousYear) + '</option>');
            }
            else{
                $(""#selectYear"").append('<option value=' + parseInt(previousYear) + '>' + parseInt(previousYear) + '</option>');
                $(""#selectedYear"").append('<option value=' + parseInt(previousYear) + '>' + parseInt(previousYear) + '</option>');
            }
            previousYear = parseInt(previousYear) + 1;
        }
    });

    $(function () {
        $(""#FromDate"").datepicker({
            format: 'yyyy-mm-dd',
            changeMonth: true,
            changeYear: true,
            autoclose: true,
            todayHighlight: true,
        }).on('changeDate', function (selected) {
            var minDate = new Date(selected.date);
        ");
            WriteLiteral(@"    minDate.setDate(minDate.getDate() + 1);
            $('#ToDate').datepicker('setStartDate', minDate);
        });

        $(""#ToDate"").datepicker({
            format: 'yyyy-mm-dd',
            changeMonth: true,
            changeYear: true,
            autoclose: true,
            todayHighlight: true,
        }).on('changeDate', function (selected) {
            var minDate = new Date(selected.date);
            minDate.setDate(minDate.getDate() - 1);
            $('#FromDate').datepicker('setEndDate', minDate);
        });
    });

    $(function () {
        $(""#WeeklyFromDate"").datepicker({
            format: 'yyyy-mm-dd',
            changeMonth: true,
            changeYear: true,
            autoclose: true,
            todayHighlight: true,
        }).on('changeDate', function (selected) {
            var minDate = new Date(selected.date);
            var maxDate = new Date(selected.date);
            minDate.setDate(minDate.getDate() + 6);
            $('#WeeklyToD");
            WriteLiteral(@"ate').datepicker('setEndDate', minDate);
            $('#WeeklyToDate').datepicker('setStartDate', maxDate);
        });

        $(""#WeeklyToDate"").datepicker({
            format: 'yyyy-mm-dd',
            changeMonth: true,
            changeYear: true,
            autoclose: true,
            todayHighlight: true,
        }).on('changeDate', function (selected) {
            var minDate = new Date(selected.date);
            var maxDate = new Date(selected.date);
            var weeklyFromDate = $(""#WeeklyFromDate"").val();
            minDate.setDate(minDate.getDate() - 6);
            $('#WeeklyFromDate').datepicker('setStartDate', minDate);
            $('#WeeklyFromDate').datepicker('setEndDate', maxDate);
        });
    });
</script>
<script>
    $(""#customReport"").on('click', function () {
        var FromDate = $(""#FromDate"").val();
        var ToDate = $(""#ToDate"").val();
        var SelectedType = $(""#SelectedType"").val();

        if (FromDate != null && FromDate != """" ");
            WriteLiteral(@"&& FromDate != ""undefined"") {
            if (ToDate != null && ToDate != """" && ToDate != ""undefined"") {
                if (ToDate < FromDate) {
                    alert(""Please select proper date, To Date should be greater than From Date."");
                    return false;
                }
                else {
                    if (SelectedType == ""Pdf or Excel"") {
                        var url = """);
            Write(
#nullable restore
#line 314 "D:\DIBN PORTAL\DIBN PORTAL - LIVE\DIBN\Areas\Admin\Views\ReportManagement\MainProfitLossReport.cshtml"
                                    Url.Action("ProfitLossCustomReport","ReportManagement")

#line default
#line hidden
#nullable disable
            );
            WriteLiteral("\";\r\n                        url = url + \"?fromDate=\" + FromDate + \"&toDate=\" + ToDate;\r\n                        window.location.href = url;\r\n                    }\r\n                    else {\r\n                        var url = \"");
            Write(
#nullable restore
#line 319 "D:\DIBN PORTAL\DIBN PORTAL - LIVE\DIBN\Areas\Admin\Views\ReportManagement\MainProfitLossReport.cshtml"
                                    Url.Action("ProfitLossCustomReportGraph","ReportManagement")

#line default
#line hidden
#nullable disable
            );
            WriteLiteral(@""";
                        url = url + ""?fromDate="" + FromDate + ""&toDate="" + ToDate;
                        window.location.href = url;
                    }
                }
            }
            else {
                alert(""Please select till which date you want to generate report.!"");
                return false;
            }
        }
        else {
            alert(""Please select from which date you want to generate report.!"");
            return false;
        }
    });

    $(""#weeklyReport"").on('click', function () {
        var url = """);
            Write(
#nullable restore
#line 337 "D:\DIBN PORTAL\DIBN PORTAL - LIVE\DIBN\Areas\Admin\Views\ReportManagement\MainProfitLossReport.cshtml"
                    Url.Action("ProfitLossWeeklyReport","ReportManagement")

#line default
#line hidden
#nullable disable
            );
            WriteLiteral(@""";
        var currentStartDate = new Date();
        var currentEndDate = new Date();
        var currentDay = currentStartDate.getDay();
        var SelectedType = $(""#SelectedType"").val();

        if (currentDay == 0) {
            var startingDate = currentStartDate.setDate(currentStartDate.getDate() - 6);
            var endingDate = currentDate;

            var startDate = new Date(startingDate);
            var endDate = new Date(endingDate);

            startMonth = (startDate.getMonth() + 1).toString();
            endMonth = (endDate.getMonth() + 1).toString();

            if (startMonth.length <= 1) {
                startMonth = ""0"" + (startDate.getMonth() + 1);
            }
            else {
                startMonth = (startDate.getMonth() + 1);
            }

            if (endMonth.length <= 1) {
                endMonth = ""0"" + (endDate.getMonth() + 1).toString();
            }
            else {
                endMonth = (endDate.getMonth() + 1).toString()");
            WriteLiteral(@";
            }

            var finalStartDate = startDate.getFullYear() + '-' + startMonth + '-' + startDate.getDate();
            var finalEndDate = endDate.getFullYear() + '-' + endMonth + '-' + endDate.getDate();
            if (SelectedType == ""Pdf or Excel"") {
                url = url + ""?fromDate="" + finalStartDate + ""&toDate="" + finalEndDate;
                window.location.href = url;
            }
            else{
                url = """);
            Write(
#nullable restore
#line 374 "D:\DIBN PORTAL\DIBN PORTAL - LIVE\DIBN\Areas\Admin\Views\ReportManagement\MainProfitLossReport.cshtml"
                        Url.Action("ProfitLossWeeklyReportGraph","ReportManagement")

#line default
#line hidden
#nullable disable
            );
            WriteLiteral(@""";
                url = url + ""?fromDate="" + finalStartDate + ""&toDate="" + finalEndDate;
                window.location.href = url;
            }
        }
        else if (currentDay == 1) {
            var startingDate = currentStartDate.setDate(currentStartDate.getDate());
            var endingDate = currentEndDate.setDate(currentEndDate.getDate() + 6);

            var startDate = new Date(startingDate);
            var endDate = new Date(endingDate);

            startMonth = (startDate.getMonth() + 1).toString();
            endMonth = (endDate.getMonth() + 1).toString();

            if (startMonth.length <= 1) {
                startMonth = ""0"" + (startDate.getMonth() + 1);
            }
            else {
                startMonth = (startDate.getMonth() + 1);
            }

            if (endMonth.length <= 1) {
                endMonth = ""0"" + (endDate.getMonth() + 1).toString();
            }
            else {
                endMonth = (endDate.getMonth() + 1).toSt");
            WriteLiteral(@"ring();
            }

            var finalStartDate = startDate.getFullYear() + '-' + startMonth + '-' + startDate.getDate();
            var finalEndDate = endDate.getFullYear() + '-' + endMonth + '-' + endDate.getDate();
            if (SelectedType == ""Pdf or Excel"") {
                url = url + ""?fromDate="" + finalStartDate + ""&toDate="" + finalEndDate;
                window.location.href = url;
            }
            else{
                url = """);
            Write(
#nullable restore
#line 410 "D:\DIBN PORTAL\DIBN PORTAL - LIVE\DIBN\Areas\Admin\Views\ReportManagement\MainProfitLossReport.cshtml"
                        Url.Action("ProfitLossWeeklyReportGraph","ReportManagement")

#line default
#line hidden
#nullable disable
            );
            WriteLiteral(@""";
                url = url + ""?fromDate="" + finalStartDate + ""&toDate="" + finalEndDate;
                window.location.href = url;
            }
        }
        else if (currentDay == 2) {
            var startingDate = currentStartDate.setDate(currentStartDate.getDate() - 1);
            var endingDate = currentEndDate.setDate(currentEndDate.getDate() + 5);

            var startDate = new Date(startingDate);
            var endDate = new Date(endingDate);

            startMonth = (startDate.getMonth() + 1).toString();
            endMonth = (endDate.getMonth() + 1).toString();

            if (startMonth.length <= 1) {
                startMonth = ""0"" + (startDate.getMonth() + 1);
            }
            else {
                startMonth = (startDate.getMonth() + 1);
            }

            if (endMonth.length <= 1) {
                endMonth = ""0"" + (endDate.getMonth() + 1).toString();
            }
            else {
                endMonth = (endDate.getMonth() + 1).");
            WriteLiteral(@"toString();
            }

            var finalStartDate = startDate.getFullYear() + '-' + startMonth + '-' + startDate.getDate();
            var finalEndDate = endDate.getFullYear() + '-' + endMonth + '-' + endDate.getDate();

            if (SelectedType == ""Pdf or Excel"") {
                url = url + ""?fromDate="" + finalStartDate + ""&toDate="" + finalEndDate;
                window.location.href = url;
            }
            else{
                url = """);
            Write(
#nullable restore
#line 447 "D:\DIBN PORTAL\DIBN PORTAL - LIVE\DIBN\Areas\Admin\Views\ReportManagement\MainProfitLossReport.cshtml"
                        Url.Action("ProfitLossWeeklyReportGraph","ReportManagement")

#line default
#line hidden
#nullable disable
            );
            WriteLiteral(@""";
                url = url + ""?fromDate="" + finalStartDate + ""&toDate="" + finalEndDate;
                window.location.href = url;
            }
        }
        else if (currentDay == 3) {
            var startingDate = currentStartDate.setDate(currentStartDate.getDate() - 2);
            var endingDate = currentEndDate.setDate(currentEndDate.getDate() + 4);

            var startDate = new Date(startingDate);
            var endDate = new Date(endingDate);

            startMonth = (startDate.getMonth() + 1).toString();
            endMonth = (endDate.getMonth() + 1).toString();

            if (startMonth.length <= 1) {
                startMonth = ""0"" + (startDate.getMonth() + 1);
            }
            else {
                startMonth = (startDate.getMonth() + 1);
            }

            if (endMonth.length <= 1) {
                endMonth = ""0"" + (endDate.getMonth() + 1).toString();
            }
            else {
                endMonth = (endDate.getMonth() + 1).");
            WriteLiteral(@"toString();
            }

            var finalStartDate = startDate.getFullYear() + '-' + startMonth + '-' + startDate.getDate();
            var finalEndDate = endDate.getFullYear() + '-' + endMonth + '-' + endDate.getDate();
            if (SelectedType == ""Pdf or Excel"") {
                url = url + ""?fromDate="" + finalStartDate + ""&toDate="" + finalEndDate;
                window.location.href = url;
            }
            else{
                url = """);
            Write(
#nullable restore
#line 483 "D:\DIBN PORTAL\DIBN PORTAL - LIVE\DIBN\Areas\Admin\Views\ReportManagement\MainProfitLossReport.cshtml"
                        Url.Action("ProfitLossWeeklyReportGraph","ReportManagement")

#line default
#line hidden
#nullable disable
            );
            WriteLiteral(@""";
                url = url + ""?fromDate="" + finalStartDate + ""&toDate="" + finalEndDate;
                window.location.href = url;
            }
        }
        else if (currentDay == 4) {
            var startingDate = currentStartDate.setDate(currentStartDate.getDate() - 3);
            var endingDate = currentEndDate.setDate(currentEndDate.getDate() + 3);

            var startDate = new Date(startingDate);
            var endDate = new Date(endingDate);

            startMonth = (startDate.getMonth() + 1).toString();
            endMonth = (endDate.getMonth() + 1).toString();

            if (startMonth.length <= 1) {
                startMonth = ""0"" + (startDate.getMonth() + 1);
            }
            else {
                startMonth = (startDate.getMonth() + 1);
            }

            if (endMonth.length <= 1) {
                endMonth = ""0"" + (endDate.getMonth() + 1).toString();
            }
            else {
                endMonth = (endDate.getMonth() + 1).");
            WriteLiteral(@"toString();
            }

            var finalStartDate = startDate.getFullYear() + '-' + startMonth + '-' + startDate.getDate();
            var finalEndDate = endDate.getFullYear() + '-' + endMonth + '-' + endDate.getDate();
            if (SelectedType == ""Pdf or Excel"") {
                url = url + ""?fromDate="" + finalStartDate + ""&toDate="" + finalEndDate;
                window.location.href = url;
            }
            else{
                url = """);
            Write(
#nullable restore
#line 519 "D:\DIBN PORTAL\DIBN PORTAL - LIVE\DIBN\Areas\Admin\Views\ReportManagement\MainProfitLossReport.cshtml"
                        Url.Action("ProfitLossWeeklyReportGraph","ReportManagement")

#line default
#line hidden
#nullable disable
            );
            WriteLiteral(@""";
                url = url + ""?fromDate="" + finalStartDate + ""&toDate="" + finalEndDate;
                window.location.href = url;
            }
        }
        else if (currentDay == 5) {
            var startMonth = """", endMonth = """";
            var startingDate = currentStartDate.setDate(currentStartDate.getDate() - 4);
            var endingDate = currentEndDate.setDate(currentEndDate.getDate() + 2);

            var startDate = new Date(startingDate);
            var endDate = new Date(endingDate);

            startMonth = (startDate.getMonth() + 1).toString();
            endMonth = (endDate.getMonth() + 1).toString();

            if (startMonth.length <= 1) {
                startMonth = ""0"" + (startDate.getMonth() + 1);
            }
            else {
                startMonth = (startDate.getMonth() + 1);
            }

            if (endMonth.length <= 1) {
                endMonth = ""0"" + (endDate.getMonth() + 1).toString();
            }
            else {
   ");
            WriteLiteral(@"             endMonth = (endDate.getMonth() + 1).toString();
            }

            var finalStartDate = startDate.getFullYear() + '-' + startMonth + '-' + startDate.getDate();
            var finalEndDate = endDate.getFullYear() + '-' + endMonth + '-' + endDate.getDate();

            if (SelectedType == ""Pdf or Excel"") {
                url = url + ""?fromDate="" + finalStartDate + ""&toDate="" + finalEndDate;
                window.location.href = url;
            }
            else{
                url = """);
            Write(
#nullable restore
#line 557 "D:\DIBN PORTAL\DIBN PORTAL - LIVE\DIBN\Areas\Admin\Views\ReportManagement\MainProfitLossReport.cshtml"
                        Url.Action("ProfitLossWeeklyReportGraph","ReportManagement")

#line default
#line hidden
#nullable disable
            );
            WriteLiteral(@""";
                url = url + ""?fromDate="" + finalStartDate + ""&toDate="" + finalEndDate;
                window.location.href = url;
            }
        }
        else if (currentDay == 6) {
            var startingDate = currentStartDate.setDate(currentStartDate.getDate() - 5);
            var endingDate = currentEndDate.setDate(currentEndDate.getDate() + 1);

            var startDate = new Date(startingDate);
            var endDate = new Date(endingDate);

            startMonth = (startDate.getMonth() + 1).toString();
            endMonth = (endDate.getMonth() + 1).toString();

            if (startMonth.length <= 1) {
                startMonth = ""0"" + (startDate.getMonth() + 1);
            }
            else {
                startMonth = (startDate.getMonth() + 1);
            }

            if (endMonth.length <= 1) {
                endMonth = ""0"" + (endDate.getMonth() + 1).toString();
            }
            else {
                endMonth = (endDate.getMonth() + 1).");
            WriteLiteral(@"toString();
            }

            var finalStartDate = startDate.getFullYear() + '-' + startMonth + '-' + startDate.getDate();
            var finalEndDate = endDate.getFullYear() + '-' + endMonth + '-' + endDate.getDate();

            if (SelectedType == ""Pdf or Excel"") {
                url = url + ""?fromDate="" + finalStartDate + ""&toDate="" + finalEndDate;
                window.location.href = url;
            }
            else{
                url = """);
            Write(
#nullable restore
#line 594 "D:\DIBN PORTAL\DIBN PORTAL - LIVE\DIBN\Areas\Admin\Views\ReportManagement\MainProfitLossReport.cshtml"
                        Url.Action("ProfitLossWeeklyReportGraph","ReportManagement")

#line default
#line hidden
#nullable disable
            );
            WriteLiteral(@""";
                url = url + ""?fromDate="" + finalStartDate + ""&toDate="" + finalEndDate;
                window.location.href = url;
            }
        }
    });

    $(""#monthReport"").on('click',function(){
        var month = $(""#selectMonth"").val();
        var year = $(""#selectYear"").val();
        var SelectedType = $(""#SelectedType"").val();

        if (month != """" && month != null && month != ""unidentified"") {
            if (year != """" && year != null && year != ""unidentified"") {
                if (SelectedType == ""Pdf or Excel"") {
                    var url = """);
            Write(
#nullable restore
#line 609 "D:\DIBN PORTAL\DIBN PORTAL - LIVE\DIBN\Areas\Admin\Views\ReportManagement\MainProfitLossReport.cshtml"
                                Url.Action("ProfitLossMonthlyReport","ReportManagement")

#line default
#line hidden
#nullable disable
            );
            WriteLiteral("\";\r\n                    url = url + \"?month=\" + month + \"&year=\" + year;\r\n                    window.location.href=url;\r\n                }\r\n                else{\r\n                    var url = \"");
            Write(
#nullable restore
#line 614 "D:\DIBN PORTAL\DIBN PORTAL - LIVE\DIBN\Areas\Admin\Views\ReportManagement\MainProfitLossReport.cshtml"
                                Url.Action("ProfitLossMonthlyReportGraph","ReportManagement")

#line default
#line hidden
#nullable disable
            );
            WriteLiteral(@""";
                    url = url + ""?month="" + month + ""&year="" + year;
                    window.location.href = url;
                }
            }
            else{
                alert(""Please select Year.!"");
                return false;
            }
        } 
        else{
            alert(""Please select Month.!"");
            return false;
        }
    });

    $(""#yearReport"").on('click',function(){
        var year = $(""#selectedYear"").val();
        var SelectedType = $(""#SelectedType"").val();

        if (year != """" && year != null && year != ""unidentified"") {
            if (SelectedType == ""Pdf or Excel"") {
                var url = """);
            Write(
#nullable restore
#line 636 "D:\DIBN PORTAL\DIBN PORTAL - LIVE\DIBN\Areas\Admin\Views\ReportManagement\MainProfitLossReport.cshtml"
                            Url.Action("ProfitLossYearlyReport","ReportManagement")

#line default
#line hidden
#nullable disable
            );
            WriteLiteral("\";\r\n                url = url + \"?year=\" + year;\r\n                window.location.href=url;\r\n            }\r\n            else{\r\n                var url = \"");
            Write(
#nullable restore
#line 641 "D:\DIBN PORTAL\DIBN PORTAL - LIVE\DIBN\Areas\Admin\Views\ReportManagement\MainProfitLossReport.cshtml"
                            Url.Action("ProfitLossYealyReportGraph","ReportManagement")

#line default
#line hidden
#nullable disable
            );
            WriteLiteral(@""";
                url = url + ""?year="" + year;
                window.location.href = url;
            }
        }
        else{
            alert(""Please select Year.!"");
            return false;
        }
        
    });
</script>
<script>
    // Disable all months after current month for current year.                                                         -- Yashasvi TBC(17-06-2023)
    $(document).ready(function(){
        var year = $(""#selectYear"").val();
        
        if (year == """" || year == null || year == ""unidentified""){
            var getDate = new Date();
            var currentYear = getDate.getFullYear();
            var currentMonth = (getDate.getMonth() + 1).toString();
            var startMonth = (getDate.getMonth() +2);
            //startMonth = startMonth + 1;
            var gap = 12 -parseInt(startMonth);
            if (currentMonth.length <= 1) {
                startMonth = ""0"" + (getDate.getMonth() + 2);
            }

            for (var index");
            WriteLiteral(@" = 0; index <= gap;index++){
                
                if (startMonth.toString().length <= 1) {
                    startMonth = ""0"" + parseInt(startMonth);
                }
                $(""#selectMonth option[value="" + startMonth + ""]"").attr(""disabled"", ""disabled"");
                startMonth = parseInt(startMonth) + 1;
            }
        }
        else{
            var getDate = new Date();
            var currentYear = getDate.getFullYear();
            if (parseInt(year) == parseInt(currentYear)) {
                var currentMonth = (getDate.getMonth() + 1).toString();
                var startMonth = (getDate.getMonth() + 2);
                var gap = 12 - parseInt(startMonth);
                if (currentMonth.length <= 1) {
                    startMonth = ""0"" + (getDate.getMonth() + 2);
                }

                for (var index = 0; index <= gap; index++) {
                    if (startMonth.toString().length <= 1) {
                        startMonth = ""0"" +");
            WriteLiteral(@" parseInt(startMonth);
                    }
                    $(""#selectMonth option[value="" + startMonth + ""]"").attr(""disabled"", ""disabled"");
                    startMonth = parseInt(startMonth) + 1;
                }
            }
        }
    });

    $(""#selectYear"").on('change',function(){
        var year = $(""#selectYear"").val();
        var getDate = new Date();
        var currentYear = getDate.getFullYear();
        var currentMonth = (getDate.getMonth() + 1).toString();
        var startMonth = (getDate.getMonth() + 2);
        var gap = 12 - parseInt(startMonth);
        
        if (parseInt(year) == parseInt(currentYear)) {
            if (currentMonth.length <= 1) {
                startMonth = ""0"" + (getDate.getMonth() + 2);
            }

            for (var index = 0; index <= gap; index++) {
                if (startMonth.toString().length <= 1) {
                    startMonth = ""0"" + parseInt(startMonth);
                }
                $(""#selectMonth op");
            WriteLiteral(@"tion[value="" + startMonth + ""]"").attr(""disabled"", ""disabled"");
                startMonth = parseInt(startMonth) + 1;
            }
        }
        else{
            for (var index = 0; index <= gap; index++) {
                if (startMonth.toString().length <= 1) {
                    startMonth = ""0"" + parseInt(startMonth);
                }
                $(""#selectMonth option[value="" + startMonth + ""]"").removeAttr(""disabled"");
                startMonth = parseInt(startMonth) + 1;
            }
        }
    });
</script>
<script>
    $(function () {
        $(""#Insert"").hide();
        $(""#View"").hide();
        $("".Update"").hide();
        $("".Delete"").hide();
        $("".Details"").hide();
    });
</script>
<script>
    $(function () {
        $(""#loader"").show();
        var module = $(""#Module"").val();
        $.ajax({
            url: """);
            Write(
#nullable restore
#line 746 "D:\DIBN PORTAL\DIBN PORTAL - LIVE\DIBN\Areas\Admin\Views\ReportManagement\MainProfitLossReport.cshtml"
                   Url.Action("GetRolePermissionsName", "Permission")

#line default
#line hidden
#nullable disable
            );
            WriteLiteral(@""",
            method: ""GET"",
            data: { ""Module"": ""ReportManagement"" },
            async: false,
            contentType: ""application/json; charset=utf-8"",
            dataType: ""json"",
            success: function (RoleResponse) {
                $(""#loader"").show();
                $.ajax({
                    url: """);
            Write(
#nullable restore
#line 755 "D:\DIBN PORTAL\DIBN PORTAL - LIVE\DIBN\Areas\Admin\Views\ReportManagement\MainProfitLossReport.cshtml"
                           Url.Action("GetUserPermissionsName", "Permission")

#line default
#line hidden
#nullable disable
            );
            WriteLiteral(@""",
                    method: ""GET"",
                    data: { ""Module"": ""ReportManagement"" },
                    async: false,
                    contentType: ""application/json; charset=utf-8"",
                    dataType: ""json"",
                    success: function (UserResponse) {
                        $(""#loader"").show();
                        if (UserResponse.length > 0) {
                            for (let i = 0; i < UserResponse.length; i++) {
                                $(""#"" + UserResponse[i]).show();
                                if (UserResponse[i] == ""View"") {
                                    $("".Details"").show();
                                }
                                if (UserResponse[i] == ""Update"") {
                                    $(""."" + UserResponse[i]).show();
                                }
                                if (UserResponse[i] == ""Delete"") {
                                    $(""."" + UserResponse[i]).show();
        ");
            WriteLiteral(@"                        }
                            }
                            $(""#loader"").hide();
                        }
                        else if (RoleResponse.length > 0) {
                            for (let i = 0; i < RoleResponse.length; i++) {
                                $(""#"" + RoleResponse[i]).show();
                                if (RoleResponse[i] == ""View"") {
                                    $("".Details"").show();
                                }
                                if (RoleResponse[i] == ""Update"") {
                                    $(""."" + RoleResponse[i]).show();
                                }
                                if (RoleResponse[i] == ""Delete"") {
                                    $(""."" + RoleResponse[i]).show();
                                }
                            }
                            $(""#loader"").hide();

                        } else {
                            alert(""You don't have any permissi");
            WriteLiteral("on for this module.\");\r\n                            $(\"#loader\").hide();\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n        });\r\n        $(\"#loader\").hide();\r\n    });\r\n</script>");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
