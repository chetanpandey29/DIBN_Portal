#pragma checksum "D:\Devotion Business\DIBN\DIBN\Views\ServiceRequests\Index.cshtml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "e32d38fc4c15e3c4bd04cc70f768a3d2df811b6935372bafd3d3e2efc11961bd"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_ServiceRequests_Index), @"mvc.1.0.view", @"/Views/ServiceRequests/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using global::System;
    using global::System.Collections.Generic;
    using global::System.Linq;
    using global::System.Threading.Tasks;
    using global::Microsoft.AspNetCore.Mvc;
    using global::Microsoft.AspNetCore.Mvc.Rendering;
    using global::Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Devotion Business\DIBN\DIBN\Views\_ViewImports.cshtml"
using DIBN;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Devotion Business\DIBN\DIBN\Views\_ViewImports.cshtml"
using DIBN.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA256", @"e32d38fc4c15e3c4bd04cc70f768a3d2df811b6935372bafd3d3e2efc11961bd", @"/Views/ServiceRequests/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA256", @"7d5ddeb28e6b11bd8a350250841d25befde6ee969eb2ffe12afe4b0408fac805", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Views_ServiceRequests_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<DIBN.Models.GetAllRequests>
    #nullable disable
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("type", "hidden", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("Module"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("CompanyId"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "0", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "3", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "4", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("float-end col-md-6"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("ServiceStatus"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("onchange", new global::Microsoft.AspNetCore.Html.HtmlString("showRequest();"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "Serial Number", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "Created By", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_12 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "Created On", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_13 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "Company", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_14 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "Sales Person", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_15 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "Assigned User(s)", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_16 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "Service Request Type", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_17 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "asc", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_18 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "desc", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_19 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "Created Date", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_20 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "Applicant Name", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_21 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/jquery/dist/jquery.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_22 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/libs/datatables.net/js/jquery.dataTables.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_23 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/libs/datatables.net-bs4/js/dataTables.bootstrap4.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_24 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/libs/datatables.net-responsive/js/dataTables.responsive.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_25 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/libs/datatables.net-responsive-bs4/js/responsive.bootstrap4.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_26 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/libs/sweetalert2/sweetalert2.all.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_27 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/libs/sweetalert2/sweetalert2.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_28 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/bootstrap.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_29 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/select2/select2.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_30 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_31 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/select2/select2.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 2 "D:\Devotion Business\DIBN\DIBN\Views\ServiceRequests\Index.cshtml"
  
    ViewData["Title"] = "Index";

#line default
#line hidden
#nullable disable
            WriteLiteral("<style>\r\n    .d-none-custom {\r\n        display: none !important;\r\n    }\r\n</style>\r\n\r\n<div id=\"loader\">\r\n    <div class=\"spinner-1\">\r\n        <div class=\"center-div-1\">\r\n");
            WriteLiteral("            <div class=\"loader-circle-75\">\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("input", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "e32d38fc4c15e3c4bd04cc70f768a3d2df811b6935372bafd3d3e2efc11961bd14900", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.InputTypeName = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
#nullable restore
#line 22 "D:\Devotion Business\DIBN\DIBN\Views\ServiceRequests\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => Model.Module);

#line default
#line hidden
#nullable disable
            __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("input", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "e32d38fc4c15e3c4bd04cc70f768a3d2df811b6935372bafd3d3e2efc11961bd16629", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.InputTypeName = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
#nullable restore
#line 23 "D:\Devotion Business\DIBN\DIBN\Views\ServiceRequests\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => Model.CurrentCompanyId);

#line default
#line hidden
#nullable disable
            __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n<div class=\"row\">\r\n    <div class=\"col-md-12 float-start\">\r\n");
#nullable restore
#line 26 "D:\Devotion Business\DIBN\DIBN\Views\ServiceRequests\Index.cshtml"
         if (@Model.SendCompanyId != 0)
        {

#line default
#line hidden
#nullable disable
            WriteLiteral("            <a");
            BeginWriteAttribute("href", " href=\"", 793, "\"", 850, 1);
#nullable restore
#line 28 "D:\Devotion Business\DIBN\DIBN\Views\ServiceRequests\Index.cshtml"
WriteAttributeValue("", 800, Url.Action("Index","Company",new{name="Company"}), 800, 50, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(" class=\"btn btn-blue float-end mt-2 ms-3\">\r\n                Back to list\r\n            </a>\r\n");
#nullable restore
#line 31 "D:\Devotion Business\DIBN\DIBN\Views\ServiceRequests\Index.cshtml"
        }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"        <div class=""col-md-3 col-lg-2 col-sm-6 float-end"">
            <div class=""card p-0"">
                <div class=""card-body p-2"">
                    <div class=""d-flex justify-content-evenly"">
                        <h6 class=""float-end col-md-6 mt-2 ms-2""><b>Filter :</b></h6>
                        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("select", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e32d38fc4c15e3c4bd04cc70f768a3d2df811b6935372bafd3d3e2efc11961bd19680", async() => {
                WriteLiteral("\r\n                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e32d38fc4c15e3c4bd04cc70f768a3d2df811b6935372bafd3d3e2efc11961bd19993", async() => {
                    WriteLiteral("All");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_3.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e32d38fc4c15e3c4bd04cc70f768a3d2df811b6935372bafd3d3e2efc11961bd21266", async() => {
                    WriteLiteral("Open");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_4.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e32d38fc4c15e3c4bd04cc70f768a3d2df811b6935372bafd3d3e2efc11961bd22540", async() => {
                    WriteLiteral("Closed");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_5.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e32d38fc4c15e3c4bd04cc70f768a3d2df811b6935372bafd3d3e2efc11961bd23816", async() => {
                    WriteLiteral("Rejected");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_6.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_6);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                        ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
#nullable restore
#line 37 "D:\Devotion Business\DIBN\DIBN\Views\ServiceRequests\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => Model.SelectedStatus);

#line default
#line hidden
#nullable disable
            __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"row\" id=\"View\">\r\n");
#nullable restore
#line 50 "D:\Devotion Business\DIBN\DIBN\Views\ServiceRequests\Index.cshtml"
     if (Model.CompanyId == 1)
    {

#line default
#line hidden
#nullable disable
            WriteLiteral(@"        <div class=""col-md-12 p-0"">
            <div class=""col-md-3 col-sm-12 col ps-1 float-start"">
                <div class=""card bg-blue p-3 mb-0 Suitable text-white text-center text-break font-weight-4 font-size-16"" style=""border-radius:15px 15px 0px 0px;"">
                    Company Service Request(s)
                </div>
            </div>
            <div class=""col-md-3 col-sm-12 col ps-1 float-start"">
                <div class=""card p-3 Benefits mb-0 text-break border-blue-top border-blue-left border-blue-right text-blue text-center font-weight-4 font-size-16"" style=""border-radius:15px 15px 0px 0px;"">
                    Employee Service Request(s)
                </div>
            </div>

            <div class=""col-md-12 col-sm-12 col-12 ps-1 float-start cssanimation fadeInBottom"" style=""background:#F8F8F8;"" id=""Suitable"">
                <div class=""col-md-12"">
                    <div class=""card"">
                        <div class=""card-header"">
                         ");
            WriteLiteral(@"   <div class=""col-md-12 float-end"">
                                <button class=""btn btn-blue float-end"" onclick=""ClearFilterToDatatable();"">Clear All</button>
                            </div>
                            <div class=""col-md-12"">
                                <div class=""col-md-6 float-start"">
                                    <div class=""col-lg-4 float-start"">
                                        <div class=""form-group"">
                                            <label class=""control-label"">Sort By : </label>
                                            <select class=""form-select"" id=""sortingByCmp"">
                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e32d38fc4c15e3c4bd04cc70f768a3d2df811b6935372bafd3d3e2efc11961bd28719", async() => {
                WriteLiteral("Serial Number");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_10.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_10);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e32d38fc4c15e3c4bd04cc70f768a3d2df811b6935372bafd3d3e2efc11961bd29960", async() => {
                WriteLiteral("Created By");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_11.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_11);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e32d38fc4c15e3c4bd04cc70f768a3d2df811b6935372bafd3d3e2efc11961bd31198", async() => {
                WriteLiteral("Created On");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_12.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_12);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e32d38fc4c15e3c4bd04cc70f768a3d2df811b6935372bafd3d3e2efc11961bd32436", async() => {
                WriteLiteral("Company");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_13.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_13);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e32d38fc4c15e3c4bd04cc70f768a3d2df811b6935372bafd3d3e2efc11961bd33671", async() => {
                WriteLiteral("Sales Person");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_14.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_14);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e32d38fc4c15e3c4bd04cc70f768a3d2df811b6935372bafd3d3e2efc11961bd34911", async() => {
                WriteLiteral("Assigned User(s)");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_15.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_15);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e32d38fc4c15e3c4bd04cc70f768a3d2df811b6935372bafd3d3e2efc11961bd36155", async() => {
                WriteLiteral("Requested Service");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_16.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_16);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                            </select>
                                        </div>
                                    </div>
                                    <div class=""col-lg-4 float-start"">
                                        <div class=""form-group ms-2"">
                                            <label class=""control-label"">Sorting Order : </label>
                                            <select class=""form-select"" id=""sortingDirectionCmp"">
                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e32d38fc4c15e3c4bd04cc70f768a3d2df811b6935372bafd3d3e2efc11961bd37897", async() => {
                WriteLiteral("Low to High");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_17.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_17);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e32d38fc4c15e3c4bd04cc70f768a3d2df811b6935372bafd3d3e2efc11961bd39136", async() => {
                WriteLiteral("High to Low");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_18.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_18);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                            </select>
                                        </div>
                                    </div>
                                    <div class=""col-lg-4 float-start"" style=""margin-top:28px !important;"">
                                        <button class=""btn btn-blue float-start ms-2 me-2"" onclick=""ApplyFilterToCompanyServiceDatatable();"">Apply Filter</button>
                                    </div>
                                </div>
                                <div class=""col-md-6 float-start"">
                                    <div class=""col-lg-4 float-start"">
                                        <div class=""form-group"">
                                            <label class=""control-label"">Search By : </label>
                                            <select class=""form-select"" id=""searchByValueCmp"">
                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e32d38fc4c15e3c4bd04cc70f768a3d2df811b6935372bafd3d3e2efc11961bd41294", async() => {
                WriteLiteral("Serial Number");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_10.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_10);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e32d38fc4c15e3c4bd04cc70f768a3d2df811b6935372bafd3d3e2efc11961bd42535", async() => {
                WriteLiteral("Created By");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_11.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_11);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e32d38fc4c15e3c4bd04cc70f768a3d2df811b6935372bafd3d3e2efc11961bd43773", async() => {
                WriteLiteral("Created On");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_19.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_19);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e32d38fc4c15e3c4bd04cc70f768a3d2df811b6935372bafd3d3e2efc11961bd45011", async() => {
                WriteLiteral("Company");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_13.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_13);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e32d38fc4c15e3c4bd04cc70f768a3d2df811b6935372bafd3d3e2efc11961bd46246", async() => {
                WriteLiteral("Assigned User(s)");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_15.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_15);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e32d38fc4c15e3c4bd04cc70f768a3d2df811b6935372bafd3d3e2efc11961bd47490", async() => {
                WriteLiteral("Sales Person");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_14.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_14);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e32d38fc4c15e3c4bd04cc70f768a3d2df811b6935372bafd3d3e2efc11961bd48730", async() => {
                WriteLiteral("Requested Service");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_16.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_16);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                            </select>
                                        </div>
                                    </div>
                                    <div class=""col-lg-4 float-start"">
                                        <div class=""form-group ms-2"">
                                            <label class=""control-label"">Search By : </label>
                                            <input id=""searchedValueCmp"" name=""searchedValueCmp"" class=""form-control"" />
                                        </div>
                                    </div>
                                    <div class=""col-lg-4 float-start"" style=""margin-top:28px !important;"">
                                        <button class=""btn btn-blue float-start ms-2 me-2"" onclick=""ApplyFilterToCompanyServiceDatatable();"">Search</button>
                                    </div>
                                </div>
                            </div>
                        </div>
     ");
            WriteLiteral(@"                   <div class=""card-body"">
                            <div class=""table-rep-plugin"">
                                <div class=""table-responsive mb-0"" data-pattern=""priority-columns"">
                                    <table id=""datatable"" class=""table table-bordered table-striped dt-responsive nowrap"" style=""width: 100%;"">
                                        <thead>
                                            <tr>
                                                <th class=""align-middle text-center"">
                                                    SR No.
                                                </th>
                                                <th class=""align-middle text-center"">
                                                    Created By
                                                </th>
                                                <th class=""align-middle text-center"">
                                                    Created Date
              ");
            WriteLiteral(@"                                  </th>
                                                <th class=""align-middle text-center"">
                                                    Company
                                                </th>
                                                <th class=""align-middle text-center"">
                                                    Sales Person
                                                </th>
                                                <th class=""align-middle text-center"">
                                                    Requested Service
                                                </th>
                                                <th class=""align-middle text-center"">
                                                    Status
                                                </th>
                                                <th class=""align-middle text-center"">
                                                    Assigned User(s)
");
            WriteLiteral(@"                                                </th>
                                                <th>

                                                </th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                        </tbody>
                                    </table>
                                </div>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class=""col-md-12 col-sm-12 col-12 ps-1 float-start d-none-custom cssanimation fadeInBottom"" style=""background:#F8F8F8;"" id=""Benefits"">
                <div class=""col-md-12"">
                    <div class=""card"">
                        <div class=""card-header"">
                            <div class=""col-md-12 float-end"">
                                <button class=""btn btn-blue float-end"" onclick=""Cl");
            WriteLiteral(@"earFilterToDatatable();"">Clear All</button>
                            </div>
                            <div class=""col-md-12"">
                                <div class=""col-md-6 float-start"">
                                    <div class=""col-lg-4 float-start"">
                                        <div class=""form-group"">
                                            <label class=""control-label"">Sort By : </label>
                                            <select class=""form-select"" id=""sortingByEmp"">
                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e32d38fc4c15e3c4bd04cc70f768a3d2df811b6935372bafd3d3e2efc11961bd54803", async() => {
                WriteLiteral("Serial Number");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_10.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_10);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e32d38fc4c15e3c4bd04cc70f768a3d2df811b6935372bafd3d3e2efc11961bd56044", async() => {
                WriteLiteral("Created By");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_11.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_11);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e32d38fc4c15e3c4bd04cc70f768a3d2df811b6935372bafd3d3e2efc11961bd57282", async() => {
                WriteLiteral("Created On");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_12.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_12);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e32d38fc4c15e3c4bd04cc70f768a3d2df811b6935372bafd3d3e2efc11961bd58520", async() => {
                WriteLiteral("Company");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_13.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_13);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e32d38fc4c15e3c4bd04cc70f768a3d2df811b6935372bafd3d3e2efc11961bd59755", async() => {
                WriteLiteral("Sales Person");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_14.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_14);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e32d38fc4c15e3c4bd04cc70f768a3d2df811b6935372bafd3d3e2efc11961bd60995", async() => {
                WriteLiteral("Assigned User(s)");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_15.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_15);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e32d38fc4c15e3c4bd04cc70f768a3d2df811b6935372bafd3d3e2efc11961bd62239", async() => {
                WriteLiteral("Applicant Name");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_20.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_20);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e32d38fc4c15e3c4bd04cc70f768a3d2df811b6935372bafd3d3e2efc11961bd63481", async() => {
                WriteLiteral("Requested Service");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_16.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_16);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                            </select>
                                        </div>
                                    </div>
                                    <div class=""col-lg-4 float-start"">
                                        <div class=""form-group ms-2"">
                                            <label class=""control-label"">Sorting Order : </label>
                                            <select class=""form-select"" id=""sortingDirectionEmp"">
                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e32d38fc4c15e3c4bd04cc70f768a3d2df811b6935372bafd3d3e2efc11961bd65223", async() => {
                WriteLiteral("Low to High");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_17.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_17);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e32d38fc4c15e3c4bd04cc70f768a3d2df811b6935372bafd3d3e2efc11961bd66462", async() => {
                WriteLiteral("High to Low");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_18.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_18);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                            </select>
                                        </div>
                                    </div>
                                    <div class=""col-lg-4 float-start"" style=""margin-top:28px !important;"">
                                        <button class=""btn btn-blue float-start ms-2 me-2"" onclick=""ApplyFilterToEmployeeServiceDatatable();"">Apply Filter</button>
                                    </div>
                                </div>
                                <div class=""col-md-6 float-start"">
                                    <div class=""col-lg-4 float-start"">
                                        <div class=""form-group"">
                                            <label class=""control-label"">Search By : </label>
                                            <select class=""form-select"" id=""searchByValueEmp"">
                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e32d38fc4c15e3c4bd04cc70f768a3d2df811b6935372bafd3d3e2efc11961bd68621", async() => {
                WriteLiteral("Serial Number");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_10.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_10);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e32d38fc4c15e3c4bd04cc70f768a3d2df811b6935372bafd3d3e2efc11961bd69862", async() => {
                WriteLiteral("Created By");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_11.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_11);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e32d38fc4c15e3c4bd04cc70f768a3d2df811b6935372bafd3d3e2efc11961bd71100", async() => {
                WriteLiteral("Created On");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_19.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_19);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e32d38fc4c15e3c4bd04cc70f768a3d2df811b6935372bafd3d3e2efc11961bd72338", async() => {
                WriteLiteral("Company");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_13.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_13);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e32d38fc4c15e3c4bd04cc70f768a3d2df811b6935372bafd3d3e2efc11961bd73573", async() => {
                WriteLiteral("Sales Person");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_14.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_14);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e32d38fc4c15e3c4bd04cc70f768a3d2df811b6935372bafd3d3e2efc11961bd74813", async() => {
                WriteLiteral("Assigned User(s)");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_15.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_15);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e32d38fc4c15e3c4bd04cc70f768a3d2df811b6935372bafd3d3e2efc11961bd76057", async() => {
                WriteLiteral("Applicant Name");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_20.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_20);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e32d38fc4c15e3c4bd04cc70f768a3d2df811b6935372bafd3d3e2efc11961bd77299", async() => {
                WriteLiteral("Requested Service");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_16.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_16);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                            </select>
                                        </div>
                                    </div>
                                    <div class=""col-lg-4 float-start"">
                                        <div class=""form-group ms-2"">
                                            <label class=""control-label"">Search By : </label>
                                            <input id=""searchedValueEmp"" name=""searchedValueEmp"" class=""form-control"" />
                                        </div>
                                    </div>
                                    <div class=""col-lg-4 float-start"" style=""margin-top:28px !important;"">
                                        <button class=""btn btn-blue float-start ms-2 me-2"" onclick=""ApplyFilterToEmployeeServiceDatatable();"">Search</button>
                                    </div>
                                </div>
                            </div>
                        </div>
    ");
            WriteLiteral(@"                    <div class=""card-body"">
                            <div class=""table-rep-plugin"">
                                <div class=""table-responsive mb-0"" data-pattern=""priority-columns"">
                                    <table id=""datatable-1"" class=""table table-bordered table-striped dt-responsive nowrap"" style=""width: 100%;"">
                                        <thead>
                                            <tr>
                                                <th class=""align-middle text-center"">
                                                    SR No.
                                                </th>
                                                <th class=""align-middle text-center"">
                                                    Created By
                                                </th>
                                                <th class=""align-middle text-center"">
                                                    Created Date
           ");
            WriteLiteral(@"                                     </th>
                                                <th class=""align-middle text-center"">
                                                    Company
                                                </th>
                                                <th class=""align-middle text-center"">
                                                    Sales Person
                                                </th>
                                                <th class=""align-middle text-center"">
                                                    Applicant Name
                                                </th>
                                                <th class=""align-middle text-center"">
                                                    Requested Service
                                                </th>
                                                <th class=""align-middle text-center"">
                                                    Status");
            WriteLiteral(@"
                                                </th>
                                                <th class=""align-middle text-center"">
                                                    Assigned User(s)
                                                </th>
                                                <th>

                                                </th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
");
#nullable restore
#line 285 "D:\Devotion Business\DIBN\DIBN\Views\ServiceRequests\Index.cshtml"
    }
    else
    {

#line default
#line hidden
#nullable disable
            WriteLiteral(@"        <div class=""col-md-12 p-0"">
            <div class=""col-md-3 col-sm-12 col ps-1 float-start"">
                <div class=""card bg-blue p-3 mb-0 TabIndexData-1 text-white text-center text-break font-weight-4 font-size-16"" style=""border-radius:15px 15px 0px 0px;"">
                    Company Service Request(s)
                </div>
            </div>
            <div class=""col-md-3 col-sm-12 col ps-1 float-start"">
                <div class=""card p-3 TabIndexData-2 mb-0 text-break border-blue-top border-blue-left border-blue-right text-blue text-center font-weight-4 font-size-16"" style=""border-radius:15px 15px 0px 0px;"">
                    Employee Service Request(s)
                </div>
            </div>
            <div class=""col-md-12 col-sm-12 col-12 ps-1 float-start cssanimation fadeInBottom"" style=""background:#F8F8F8;"" id=""TabIndexData-1"">
                <div class=""col-md-12"">
                    <div class=""card"">
                        <div class=""card-body"">
           ");
            WriteLiteral(@"                 <div class=""table-rep-plugin"">
                                <div class=""table-responsive mb-0"" data-pattern=""priority-columns"">
                                    <table id=""datatable-3"" class=""table table-bordered table-striped dt-responsive nowrap"" style=""width: 100%;"">
                                        <thead>
                                            <tr>
                                                <th class=""align-middle text-center"">
                                                    SR No.
                                                </th>
                                                <th class=""align-middle text-center"">
                                                    Created By
                                                </th>
                                                <th class=""align-middle text-center"">
                                                    Created Date
                                                </th>
            ");
            WriteLiteral(@"                                    <th class=""align-middle text-center"">
                                                    Company
                                                </th>
                                                <th class=""align-middle text-center"">
                                                    Requested Service
                                                </th>
                                                <th class=""align-middle text-center"">
                                                    Status
                                                </th>
                                                <th class=""align-middle text-center"">
                                                    Assigned User(s)
                                                </th>
                                                <th>

                                                </th>
                                            </tr>

                                        </");
            WriteLiteral(@"thead>
                                        <tbody>
                                        </tbody>
                                    </table>
                                </div>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class=""col-md-12 col-sm-12 col-12 ps-1 float-start d-none-custom cssanimation fadeInBottom"" style=""background:#F8F8F8;"" id=""TabIndexData-2"">
                <div class=""col-md-12"">
                    <div class=""card"">
                        <div class=""card-body"">
                            <div class=""table-rep-plugin"">
                                <div class=""table-responsive mb-0"" data-pattern=""priority-columns"">
                                    <table id=""datatable-4"" class=""table table-bordered table-striped dt-responsive nowrap"" style=""width: 100%;"">
                                        <thead>
                                           ");
            WriteLiteral(@" <tr>
                                                <th class=""align-middle text-center"">
                                                    SR No.
                                                </th>
                                                <th class=""align-middle text-center"">
                                                    Created By
                                                </th>
                                                <th class=""align-middle text-center"">
                                                    Created Date
                                                </th>
                                                <th class=""align-middle text-center"">
                                                    Company
                                                </th>
                                                <th class=""align-middle text-center"">
                                                    Applicant Name
                                           ");
            WriteLiteral(@"     </th>
                                                <th class=""align-middle text-center"">
                                                    Requested Service
                                                </th>
                                                <th class=""align-middle text-center"">
                                                    Status
                                                </th>
                                                <th class=""align-middle text-center"">
                                                    Assigned User(s)
                                                </th>
                                                <th>

                                                </th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                        </tbody>
                                    </table>
                            ");
            WriteLiteral("    </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n");
#nullable restore
#line 393 "D:\Devotion Business\DIBN\DIBN\Views\ServiceRequests\Index.cshtml"
    }

#line default
#line hidden
#nullable disable
            WriteLiteral("</div>\r\n\r\n\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e32d38fc4c15e3c4bd04cc70f768a3d2df811b6935372bafd3d3e2efc11961bd89555", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_21);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n<!-- Required datatable js -->\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e32d38fc4c15e3c4bd04cc70f768a3d2df811b6935372bafd3d3e2efc11961bd90654", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_22);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e32d38fc4c15e3c4bd04cc70f768a3d2df811b6935372bafd3d3e2efc11961bd91719", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_23);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n<!-- Responsive examples -->\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e32d38fc4c15e3c4bd04cc70f768a3d2df811b6935372bafd3d3e2efc11961bd92820", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_24);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e32d38fc4c15e3c4bd04cc70f768a3d2df811b6935372bafd3d3e2efc11961bd93885", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_25);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n<!-- Sweet Alerts-->\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e32d38fc4c15e3c4bd04cc70f768a3d2df811b6935372bafd3d3e2efc11961bd94978", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_26);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "e32d38fc4c15e3c4bd04cc70f768a3d2df811b6935372bafd3d3e2efc11961bd96043", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_27);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e32d38fc4c15e3c4bd04cc70f768a3d2df811b6935372bafd3d3e2efc11961bd97104", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_28);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "e32d38fc4c15e3c4bd04cc70f768a3d2df811b6935372bafd3d3e2efc11961bd98173", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_29);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_30);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e32d38fc4c15e3c4bd04cc70f768a3d2df811b6935372bafd3d3e2efc11961bd99314", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_31);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
<script>
    $(document).ready(function () {
        $(""#loader"").hide();
    });
</script>
<script>
    ////// Open Selection dropdown on focus                                     -- Yashasvi TBC (09-02-2023)
    $(document).on('focus', '.select2.select2-container', function (e) {
        if (e.originalEvent && $(this).find("".select2-selection--single"").length > 0) {
            $(this).siblings('select').select2('open');
        }
    });
    $(function () {
        $('#Companies').select2();
    });
</script>
<script>
    jQuery.extend(jQuery.fn.dataTableExt.oSort, {
        ""date-dmy-pre"": function (a) {
            if (a == null || a == """") {
                return 0;
            }
            var date = a.split('-');
            return (date[2] + date[1] + date[0]) * 1;
        },

        ""date-dmy-asc"": function (a, b) {
            return ((a < b) ? -1 : ((a > b) ? 1 : 0));
        },

        ""date-dmy-desc"": function (a, b) {
            return ((a < b) ? 1 : ((a > ");
            WriteLiteral("b) ? -1 : 0));\r\n        }\r\n    });\r\n</script>\r\n<script>\r\n    $(document).ready(function () {\r\n        var status = $(\"#ServiceStatus\").val();\r\n        var CompanyId = $(\"#CompanyId\").val();\r\n        var url = \"");
#nullable restore
#line 454 "D:\Devotion Business\DIBN\DIBN\Views\ServiceRequests\Index.cshtml"
              Write(Url.Action("GetAllCompanyServiceRequestsTemp","ServiceRequests"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""";
        if (parseInt(CompanyId) != 0) {
            if (status != null) {
                url = url + ""?status="" + status + ""&CompanyId="" + CompanyId + ""&page="";
            }
            else {
                url = url + ""?CompanyId="" + CompanyId + ""&page="";
            }
        }
        else {
            if (status != null) {
                url = url + ""?status="" + status + ""&page="";
            }
            else {
                url = url + ""?page="";
            }
        }

        var table1 = $('#datatable-3').DataTable({
            ""processing"": true,
            ""serverSide"": true,
            ""filter"": true,
            ""ajax"": {
                ""type"": ""post"",
                ""datatype"": ""json"",
                ""data"": function () {
                    var info = $('#datatable-3').DataTable().page.info();
                    $('#datatable-3').DataTable().ajax.url(
                        url + (info.page + 1)
                    );
                }
        ");
            WriteLiteral(@"    },
            ""responsive"": true,
            ""deferRender"": true,
            ""language"": {
                'processing': '<div class=""spinner-2""><div class=""center-div-2""><div class=""loader-circle-1""></div></div></div>'
            },
            ""columns"": [
                { ""data"": ""serialNumber"", ""name"": ""SR No."" },
                { ""data"": ""requestedBy"", ""name"": ""Created By"" },
                { ""data"": ""createdOn"", ""name"": ""Created Date"" },
                { ""data"": ""companyName"", ""name"": ""Company"" },
                { ""data"": ""requestedService"", ""name"": ""Requested Service"" },
                { ""data"": ""status"", ""name"": ""Status"" },
                { ""data"": ""assignedUser"", ""name"": ""Assigned User(s)"" },
                {
                    ""data"": function (data, full, meta) {
                        var url = """);
#nullable restore
#line 501 "D:\Devotion Business\DIBN\DIBN\Views\ServiceRequests\Index.cshtml"
                              Write(Url.Action("TrackServiceRequest","ServiceRequests"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""";
                        url = url + ""?SerialNumber="" + data.serialNumber + ""&name=MyRequests"" + ""&serviceRequestType=Company"" + ""&isCompany=true"";
                        return '<a href=""' + url + '"" class=""btn btn-blue Details"">Track</a>';
                    },
                    ""name"": """"
                },
            ],
            ""initComplete"": function (settings, json) {
                var jsonData = json[""currentPage""];
                var displayData = json[""displayData""];
                var sortDir = json[""sortDir""];
                var sortIndex = json[""sortIndex""];
                if (parseInt(jsonData) != 0) {
                    var currentPage = parseInt(jsonData) - 1;
                    $($.fn.dataTable.tables(true)).DataTable().order([sortIndex, sortDir]).draw('page');
                    table1.column(sortIndex).order(sortDir).draw();
                    $($.fn.dataTable.tables(true)).DataTable().page.len(displayData).draw('page');
                    $($.fn.dataT");
            WriteLiteral(@"able.tables(true)).DataTable().page(currentPage).draw('page');
                }
                $("".Update"").hide();
                $("".Delete"").hide();
                $("".Details"").hide();
                var module = $(""#Module"").val();
                $.ajax({
                    url: """);
#nullable restore
#line 525 "D:\Devotion Business\DIBN\DIBN\Views\ServiceRequests\Index.cshtml"
                     Write(Url.Action("GetRolePermissionsName", "UserPermission"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\",\r\n                    method: \"GET\",\r\n                    data: { \"Module\": \"MyRequests\" },\r\n                    success: function (RoleResponse) {\r\n                        $.ajax({\r\n                            url: \"");
#nullable restore
#line 530 "D:\Devotion Business\DIBN\DIBN\Views\ServiceRequests\Index.cshtml"
                             Write(Url.Action("GetUserPermissionsName", "UserPermission"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                            method: ""GET"",
                            data: { ""Module"": ""MyRequests"" },
                            success: function (UserResponse) {
                                if (UserResponse.length > 0) {
                                    for (let i = 0; i < UserResponse.length; i++) {
                                        $(""#"" + UserResponse[i]).show();
                                        if (UserResponse[i] == ""View"") {
                                            $("".Details"").show();
                                        }
                                        if (UserResponse[i] == ""Update"") {
                                            $(""."" + UserResponse[i]).show();
                                        }
                                        if (UserResponse[i] == ""Delete"") {
                                            $("".Delete"").show();
                                        }
                                    }
                     ");
            WriteLiteral(@"               $($.fn.dataTable.tables(true)).DataTable()
                                        .columns.adjust();
                                    $(""#loader"").hide();
                                }
                                else if (RoleResponse.length > 0) {
                                    for (let i = 0; i < RoleResponse.length; i++) {
                                        $(""#"" + RoleResponse[i]).show();
                                        if (RoleResponse[i] == ""View"") {
                                            $("".Details"").show();
                                        }
                                        if (RoleResponse[i] == ""Update"") {
                                            $(""."" + RoleResponse[i]).show();
                                        }
                                        if (RoleResponse[i] == ""Delete"") {
                                            $("".Delete"").show();
                                        }
                  ");
            WriteLiteral(@"                  }
                                    $($.fn.dataTable.tables(true)).DataTable()
                                        .columns.adjust();
                                    $(""#loader"").hide();
                                }
                            }
                        })
                    }
                });
                $(""#loader"").hide();
            },
            ""drawCallback"": function (settings, json) {
                $("".Update"").hide();
                $("".Delete"").hide();
                $("".Details"").hide();
                var module = $(""#Module"").val();
                $.ajax({
                    url: """);
#nullable restore
#line 580 "D:\Devotion Business\DIBN\DIBN\Views\ServiceRequests\Index.cshtml"
                     Write(Url.Action("GetRolePermissionsName", "UserPermission"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\",\r\n                    method: \"GET\",\r\n                    data: { \"Module\": \"MyRequests\" },\r\n                    success: function (RoleResponse) {\r\n                        $.ajax({\r\n                            url: \"");
#nullable restore
#line 585 "D:\Devotion Business\DIBN\DIBN\Views\ServiceRequests\Index.cshtml"
                             Write(Url.Action("GetUserPermissionsName", "UserPermission"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                            method: ""GET"",
                            data: { ""Module"": ""MyRequests"" },
                            success: function (UserResponse) {
                                if (UserResponse.length > 0) {
                                    for (let i = 0; i < UserResponse.length; i++) {
                                        $(""#"" + UserResponse[i]).show();
                                        if (UserResponse[i] == ""View"") {
                                            $("".Details"").show();
                                        }
                                        if (UserResponse[i] == ""Update"") {
                                            $(""."" + UserResponse[i]).show();
                                        }
                                        if (UserResponse[i] == ""Delete"") {
                                            $("".Delete"").show();
                                        }
                                    }
                     ");
            WriteLiteral(@"               $($.fn.dataTable.tables(true)).DataTable()
                                        .columns.adjust();
                                    $(""#loader"").hide();
                                }
                                else if (RoleResponse.length > 0) {
                                    for (let i = 0; i < RoleResponse.length; i++) {
                                        $(""#"" + RoleResponse[i]).show();
                                        if (RoleResponse[i] == ""View"") {
                                            $("".Details"").show();
                                        }
                                        if (RoleResponse[i] == ""Update"") {
                                            $(""."" + RoleResponse[i]).show();
                                        }
                                        if (RoleResponse[i] == ""Delete"") {
                                            $("".Delete"").show();
                                        }
                  ");
            WriteLiteral(@"                  }
                                    $($.fn.dataTable.tables(true)).DataTable()
                                        .columns.adjust();
                                    $(""#loader"").hide();
                                }
                            }
                        })
                    }
                });
                $(""#loader"").hide();
            },
            paging: true,
            pagingType: 'simple_numbers',
            ordering: true,
            searching: true,
            ""aLengthMenu"": [20, 30, 50],
            dom: ""<'row'<'col-sm-3'l><'col-sm-3'f><'col-sm-6'p>>"" +
                ""<'row'<'col-sm-12'tr>>"" +
                ""<'row'<'col-sm-5'i><'col-sm-7'p>>"",
        });

        $('#datatable-3 tbody').on('click', 'td.dtr-control', function () {
            var tr = $(this).closest('tr');
            var row = table1.row(tr);
            if (!tr.hasClass(""shown"")) {
                row.child.show();
                tr.add");
            WriteLiteral("Class(\'shown\');\r\n                $(\".Update\").hide();\r\n                $(\".Delete\").hide();\r\n                $(\".Details\").hide();\r\n                var module = $(\"#Module\").val();\r\n                $.ajax({\r\n                    url: \"");
#nullable restore
#line 650 "D:\Devotion Business\DIBN\DIBN\Views\ServiceRequests\Index.cshtml"
                     Write(Url.Action("GetRolePermissionsName", "UserPermission"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\",\r\n                    method: \"GET\",\r\n                    data: { \"Module\": \"MyRequests\" },\r\n                    success: function (RoleResponse) {\r\n                        $.ajax({\r\n                            url: \"");
#nullable restore
#line 655 "D:\Devotion Business\DIBN\DIBN\Views\ServiceRequests\Index.cshtml"
                             Write(Url.Action("GetUserPermissionsName", "UserPermission"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                            method: ""GET"",
                            data: { ""Module"": ""MyRequests"" },
                            success: function (UserResponse) {
                                if (UserResponse.length > 0) {
                                    for (let i = 0; i < UserResponse.length; i++) {
                                        $(""#"" + UserResponse[i]).show();
                                        if (UserResponse[i] == ""View"") {
                                            $("".Details"").show();
                                        }
                                        if (UserResponse[i] == ""Update"") {
                                            $(""."" + UserResponse[i]).show();
                                        }
                                        if (UserResponse[i] == ""Delete"") {
                                            $("".Delete"").show();
                                        }
                                    }
                     ");
            WriteLiteral(@"               $(""#loader"").hide();
                                }
                                else if (RoleResponse.length > 0) {
                                    for (let i = 0; i < RoleResponse.length; i++) {
                                        $(""#"" + RoleResponse[i]).show();
                                        if (RoleResponse[i] == ""View"") {
                                            $("".Details"").show();
                                        }
                                        if (RoleResponse[i] == ""Update"") {
                                            $(""."" + RoleResponse[i]).show();
                                        }
                                        if (RoleResponse[i] == ""Delete"") {
                                            $("".Delete"").show();
                                        }
                                    }
                                    $(""#loader"").hide();
                                }
                          ");
            WriteLiteral(@"  }
                        })
                    }
                });
                $(""#loader"").hide();
            }
            else {
                row.child.hide();
                tr.removeClass('shown');
            }
        });

        var coll = document.getElementsByClassName(""TabIndexData-1"");

        for (var i = 0; i < coll.length; i++) {
            coll[i].addEventListener(""click"", function () {

                $(""#TabIndexData-1"").removeClass(""d-none-custom"");
                $(""#TabIndexData-2"").addClass(""d-none-custom"");
                $("".TabIndexData-1"").addClass(""bg-blue"").removeClass(""border-blue"");
                $("".TabIndexData-1"").closest(""div"").addClass(""text-white"").removeClass(""text-blue"");
                if ($("".TabIndexData-2"").hasClass(""bg-blue"")) {
                    $("".TabIndexData-2"").removeClass(""bg-blue"").addClass(""border-blue-top"").addClass(""border-blue-left"").addClass(""border-blue-right"");
                    $("".TabIndexData-2"").cl");
            WriteLiteral(@"osest(""div"").addClass(""text-blue"").removeClass(""text-white"");
                }
            });
        }
    });
</script>
<script>
    $(document).ready(function () {
        var status = $(""#ServiceStatus"").val();
        var CompanyId = $(""#CompanyId"").val();
        var url = """);
#nullable restore
#line 722 "D:\Devotion Business\DIBN\DIBN\Views\ServiceRequests\Index.cshtml"
              Write(Url.Action("GetAllEmployeeServiceRequestsTemp","ServiceRequests"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""";
        if (parseInt(CompanyId) != 0) {
            if (status != null) {
                url = url + ""?status="" + status + ""&CompanyId="" + CompanyId + ""&page="";
            }
            else {
                url = url + ""?CompanyId="" + CompanyId + ""&page="";
            }
        }
        else {
            if (status != null) {
                url = url + ""?status="" + status + ""&page="";
            }
            else {
                url = url + ""?page="";
            }
        }
        var coll = document.getElementsByClassName(""TabIndexData-2"");


        for (var i = 0; i < coll.length; i++) {

            coll[i].addEventListener(""click"", function () {

                $(""#TabIndexData-1"").addClass(""d-none-custom"");
                $(""#TabIndexData-2"").removeClass(""d-none-custom"");
                $("".TabIndexData-2"").addClass(""bg-blue"").removeClass(""border-blue"");
                $("".TabIndexData-2"").closest(""div"").addClass(""text-white"").removeClass(""text-blue"");
     ");
            WriteLiteral(@"           if ($("".TabIndexData-1"").hasClass(""bg-blue"")) {
                    $("".TabIndexData-1"").removeClass(""bg-blue"").addClass(""border-blue-top"").addClass(""border-blue-left"").addClass(""border-blue-right"");
                    $("".TabIndexData-1"").closest(""div"").addClass(""text-blue"").removeClass(""text-white"");
                }

                if ($.fn.dataTable.isDataTable('#datatable-4')) {
                    $('#datatable-4').DataTable().destroy();
                    $('#datatable-4').empty();
                }

                var table = $('#datatable-4').DataTable({
                    ""processing"": true,
                    ""serverSide"": true,
                    ""filter"": true,
                    ""ajax"": {
                        ""type"": ""post"",
                        ""datatype"": ""json"",
                        ""data"": function () {
                            var info = $('#datatable-4').DataTable().page.info();
                            $('#datatable-4').DataTable().aja");
            WriteLiteral(@"x.url(
                                url + (info.page + 1)
                            );
                        }
                    },
                    ""responsive"": true,
                    ""deferRender"": true,
                    ""language"": {
                        'processing': '<div class=""spinner-2""><div class=""center-div-2""><div class=""loader-circle-1""></div></div></div>'
                    },
                    ""columns"": [
                        { ""data"": ""serialNumber"", name: ""SR No."", title: ""SR No."" },
                        { ""data"": ""requestedBy"", name: ""Created By"", title: ""Created By"" },
                        { ""data"": ""createdOn"", name: ""Created Date"", title: ""Created Date"" },
                        { ""data"": ""companyName"", name: ""Company"", title: ""Company"" },
                        { ""data"": ""applicantName"", name: ""Applicant Name"", title: ""Applicant Name"" },
                        { ""data"": ""requestedService"", name: ""Requested Service"", title: ""Requested S");
            WriteLiteral(@"ervice"" },
                        { ""data"": ""status"", name: ""Status"", title: ""Status"" },
                        { ""data"": ""assignedUser"", name: ""Assigned User(s)"", title: ""Assigned User(s)"" },
                        {
                            ""data"": function (data, full, meta) {
                                var url = """);
#nullable restore
#line 790 "D:\Devotion Business\DIBN\DIBN\Views\ServiceRequests\Index.cshtml"
                                      Write(Url.Action("TrackServiceRequest","ServiceRequests"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""";
                                url = url + ""?SerialNumber="" + data.serialNumber + ""&name=MyRequests"" + ""&serviceRequestType=Employee"" + ""&isCompany=true"";
                                return '<a href=""' + url + '"" class=""btn btn-blue"">Track</a>';
                            },
                            title: """"
                        },
                    ],
                    ""initComplete"": function (settings, json) {
                        var jsonData = json[""currentPage""];
                        var displayData = json[""displayData""];
                        var sortDir = json[""sortDir""];
                        var sortIndex = json[""sortIndex""];
                        if (parseInt(jsonData) != 0) {
                            var currentPage = parseInt(jsonData) - 1;
                            $($.fn.dataTable.tables(true)).DataTable().order([sortIndex, sortDir]).draw('page');
                            table.column(sortIndex).order(sortDir).draw();
                     ");
            WriteLiteral(@"       $($.fn.dataTable.tables(true)).DataTable().page.len(displayData).draw('page');
                            $($.fn.dataTable.tables(true)).DataTable().page(currentPage).draw('page');
                        }
                        $("".Update"").hide();
                        $("".Delete"").hide();
                        $("".Details"").hide();
                        var module = $(""#Module"").val();
                        $.ajax({
                            url: """);
#nullable restore
#line 814 "D:\Devotion Business\DIBN\DIBN\Views\ServiceRequests\Index.cshtml"
                             Write(Url.Action("GetRolePermissionsName", "UserPermission"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                            method: ""GET"",
                            data: { ""Module"": ""MyRequests"" },
                            success: function (RoleResponse) {
                                $.ajax({
                                    url: """);
#nullable restore
#line 819 "D:\Devotion Business\DIBN\DIBN\Views\ServiceRequests\Index.cshtml"
                                     Write(Url.Action("GetUserPermissionsName", "UserPermission"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                                    method: ""GET"",
                                    data: { ""Module"": ""MyRequests"" },
                                    success: function (UserResponse) {
                                        if (UserResponse.length > 0) {
                                            for (let i = 0; i < UserResponse.length; i++) {
                                                $(""#"" + UserResponse[i]).show();
                                                if (UserResponse[i] == ""View"") {
                                                    $("".Details"").show();
                                                }
                                                if (UserResponse[i] == ""Update"") {
                                                    $(""."" + UserResponse[i]).show();
                                                }
                                                if (UserResponse[i] == ""Delete"") {
                                                    $("".Delete"").");
            WriteLiteral(@"show();
                                                }
                                            }
                                            $($.fn.dataTable.tables(true)).DataTable()
                                                .columns.adjust();
                                            $(""#loader"").hide();
                                        }
                                        else if (RoleResponse.length > 0) {
                                            for (let i = 0; i < RoleResponse.length; i++) {
                                                $(""#"" + RoleResponse[i]).show();
                                                if (RoleResponse[i] == ""View"") {
                                                    $("".Details"").show();
                                                }
                                                if (RoleResponse[i] == ""Update"") {
                                                    $(""."" + RoleResponse[i]).show();
                      ");
            WriteLiteral(@"                          }
                                                if (RoleResponse[i] == ""Delete"") {
                                                    $("".Delete"").show();
                                                }
                                            }
                                            $($.fn.dataTable.tables(true)).DataTable()
                                                .columns.adjust();
                                            $(""#loader"").hide();
                                        }
                                    }
                                })
                            }
                        });
                        $(""#loader"").hide();
                    },
                    ""drawCallback"": function (settings, json) {
                        $("".Update"").hide();
                        $("".Delete"").hide();
                        $("".Details"").hide();
                        var module = $(""#Module"").val();
       ");
            WriteLiteral("                 $.ajax({\r\n                            url: \"");
#nullable restore
#line 869 "D:\Devotion Business\DIBN\DIBN\Views\ServiceRequests\Index.cshtml"
                             Write(Url.Action("GetRolePermissionsName", "UserPermission"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                            method: ""GET"",
                            data: { ""Module"": ""MyRequests"" },
                            success: function (RoleResponse) {
                                $.ajax({
                                    url: """);
#nullable restore
#line 874 "D:\Devotion Business\DIBN\DIBN\Views\ServiceRequests\Index.cshtml"
                                     Write(Url.Action("GetUserPermissionsName", "UserPermission"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                                    method: ""GET"",
                                    data: { ""Module"": ""MyRequests"" },
                                    success: function (UserResponse) {
                                        if (UserResponse.length > 0) {
                                            for (let i = 0; i < UserResponse.length; i++) {
                                                $(""#"" + UserResponse[i]).show();
                                                if (UserResponse[i] == ""View"") {
                                                    $("".Details"").show();
                                                }
                                                if (UserResponse[i] == ""Update"") {
                                                    $(""."" + UserResponse[i]).show();
                                                }
                                                if (UserResponse[i] == ""Delete"") {
                                                    $("".Delete"").");
            WriteLiteral(@"show();
                                                }
                                            }
                                            $($.fn.dataTable.tables(true)).DataTable()
                                                .columns.adjust();
                                            $(""#loader"").hide();
                                        }
                                        else if (RoleResponse.length > 0) {
                                            for (let i = 0; i < RoleResponse.length; i++) {
                                                $(""#"" + RoleResponse[i]).show();
                                                if (RoleResponse[i] == ""View"") {
                                                    $("".Details"").show();
                                                }
                                                if (RoleResponse[i] == ""Update"") {
                                                    $(""."" + RoleResponse[i]).show();
                      ");
            WriteLiteral(@"                          }
                                                if (RoleResponse[i] == ""Delete"") {
                                                    $("".Delete"").show();
                                                }
                                            }
                                            $($.fn.dataTable.tables(true)).DataTable()
                                                .columns.adjust();
                                            $(""#loader"").hide();
                                        }
                                    }
                                })
                            }
                        });
                        $(""#loader"").hide();
                    },
                    paging: true,
                    autoWidth: true,
                    ordering: true,
                    searching: true,
                    responsive: true,
                    ""aLengthMenu"": [20, 30, 50],
                    dom: ""<'row'");
            WriteLiteral(@"<'col-sm-3'l><'col-sm-3'f><'col-sm-6'p>>"" +
                        ""<'row'<'col-sm-12'tr>>"" +
                        ""<'row'<'col-sm-5'i><'col-sm-7'p>>"",
                });

                $('#datatable-4 tbody').on('click', 'td.dtr-control', function () {
                    var tr = $(this).closest('tr');
                    var row = table.row(tr);
                    if (!tr.hasClass(""shown"")) {
                        row.child.show();
                        tr.addClass('shown');
                        $("".Update"").hide();
                        $("".Delete"").hide();
                        $("".Details"").hide();
                        var module = $(""#Module"").val();
                        $.ajax({
                            url: """);
#nullable restore
#line 940 "D:\Devotion Business\DIBN\DIBN\Views\ServiceRequests\Index.cshtml"
                             Write(Url.Action("GetRolePermissionsName", "UserPermission"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                            method: ""GET"",
                            data: { ""Module"": ""MyRequests"" },
                            success: function (RoleResponse) {
                                $.ajax({
                                    url: """);
#nullable restore
#line 945 "D:\Devotion Business\DIBN\DIBN\Views\ServiceRequests\Index.cshtml"
                                     Write(Url.Action("GetUserPermissionsName", "UserPermission"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                                    method: ""GET"",
                                    data: { ""Module"": ""MyRequests"" },
                                    success: function (UserResponse) {
                                        if (UserResponse.length > 0) {
                                            for (let i = 0; i < UserResponse.length; i++) {
                                                $(""#"" + UserResponse[i]).show();
                                                if (UserResponse[i] == ""View"") {
                                                    $("".Details"").show();
                                                }
                                                if (UserResponse[i] == ""Update"") {
                                                    $(""."" + UserResponse[i]).show();
                                                }
                                                if (UserResponse[i] == ""Delete"") {
                                                    $("".Delete"").");
            WriteLiteral(@"show();
                                                }
                                            }
                                            $(""#loader"").hide();
                                        }
                                        else if (RoleResponse.length > 0) {
                                            for (let i = 0; i < RoleResponse.length; i++) {
                                                $(""#"" + RoleResponse[i]).show();
                                                if (RoleResponse[i] == ""View"") {
                                                    $("".Details"").show();
                                                }
                                                if (RoleResponse[i] == ""Update"") {
                                                    $(""."" + RoleResponse[i]).show();
                                                }
                                                if (RoleResponse[i] == ""Delete"") {
                                           ");
            WriteLiteral(@"         $("".Delete"").show();
                                                }
                                            }
                                            $(""#loader"").hide();
                                        }
                                    }
                                })
                            }
                        });
                        $(""#loader"").hide();
                    }
                    else {
                        row.child.hide();
                        tr.removeClass('shown');
                    }
                });

            });
        }
    });
</script>
<script>
    $(document).ready(function () {
        var status = $(""#ServiceStatus"").val();
        var table1 = $('#datatable').DataTable({
            ""processing"": true,
            ""serverSide"": true,
            ""filter"": false,
            ""ajax"": {
                ""type"": ""post"",
                ""datatype"": ""json"",
                ""data"": function");
            WriteLiteral(@" (oSettings,json) {
                    var info = Math.ceil(oSettings.start / oSettings.length) + 1;
                    var sortingBy = $(""#sortingByCmp"").val();
                    var sortingOrder = $(""#sortingDirectionCmp"").val();
                    var searchBy = $(""#searchByValueCmp"").val();
                    var searchedValue = $(""#searchedValueCmp"").val();
                    
                    var url = """);
#nullable restore
#line 1012 "D:\Devotion Business\DIBN\DIBN\Views\ServiceRequests\Index.cshtml"
                          Write(Url.Action("GetAllAssignedCompanyServicesTempData","ServiceRequests"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""";
                    if (status != null && status != """") {
                        url = url + ""?status="" + status + ""&sortColumn="" + sortingBy + ""&sortDir="" + sortingOrder;
                    }
                    else {
                        url = url + ""?sortColumn="" + sortingBy + ""&sortDir="" + sortingOrder;
                    }
                    if (searchBy != """" && searchedValue != """") {
                        url = url + ""&searchBy="" + searchBy + ""&searchString="" + searchedValue;
                    }

                    url = url +""&page=""
                    $('#datatable').DataTable().ajax.url(
                        url + info
                    );
                }
            },
            ""responsive"": true,
            ""deferRender"": true,
            ""language"": {
                'processing': '<div class=""spinner-2""><div class=""center-div-2""><div class=""loader-circle-1""></div></div></div>'
            },
            ""columns"": [
                { ""data"": ""s");
            WriteLiteral(@"erialNumber"", ""name"": ""SR No."" },
                { ""data"": ""requestedBy"", ""name"": ""Created By"" },
                { ""data"": ""createdOn"", ""name"": ""Created Date"" },
                { ""data"": ""companyName"", ""name"": ""Company"" },
                { ""data"": ""salesPerson"", ""name"": ""Sales Person"" },
                { ""data"": ""requestedService"", ""name"": ""Requested Service"" },
                { ""data"": ""status"", ""name"": ""Status"" },
                { ""data"": ""assignedUser"", ""name"": ""Assigned User(s)"" },
                {
                    ""data"": function (data, full, meta) {
                        var url = """);
#nullable restore
#line 1045 "D:\Devotion Business\DIBN\DIBN\Views\ServiceRequests\Index.cshtml"
                              Write(Url.Action("TrackServiceRequest","ServiceRequests"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""";
                        url = url + ""?SerialNumber="" + data.serialNumber + ""&name=MyRequests"" + ""&serviceRequestType=Company"";
                        return '<a href=""' + url + '"" class=""btn btn-blue"">Track</a>';
                    },
                    ""name"": """"
                },
            ],
            ""initComplete"": function (settings, json) {
                var jsonData = json[""currentPage""];
                var displayData = json[""displayData""];
                var sortColumnData = json[""sortColumnData""];
                var sortColumnDirectionData = json[""sortColumnDirectionData""];
                var searchByData = json[""searchByData""];
                var searchedValueData = json[""searchedValueData""];
                if (parseInt(jsonData) != 0) {
                    
                    var currentPage = parseInt(jsonData) - 1;
                    table1.page.len(displayData).draw('page');
                    table1.page(currentPage).draw('page');
                    i");
            WriteLiteral(@"f(sortColumnData != null && sortColumnData !="""")
                        $(""#sortingByCmp"").val(sortColumnData).change();
                    if(sortColumnDirectionData != null && sortColumnDirectionData !="""")
                        $(""#sortingDirectionCmp"").val(sortColumnDirectionData).change();
                    if(searchByData != null)
                        $(""#searchByValueCmp"").val(searchByData).change();
                    if(searchedValueData != null && searchedValueData != """")
                        $(""#searchedValueCmp"").val(searchedValueData);
                }

                $("".Update"").hide();
                $("".Delete"").hide();
                $("".Details"").hide();
                var module = $(""#Module"").val();
                $.ajax({
                    url: """);
#nullable restore
#line 1079 "D:\Devotion Business\DIBN\DIBN\Views\ServiceRequests\Index.cshtml"
                     Write(Url.Action("GetRolePermissionsName", "UserPermission"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\",\r\n                    method: \"GET\",\r\n                    data: { \"Module\": \"MyRequests\" },\r\n                    success: function (RoleResponse) {\r\n                        $.ajax({\r\n                            url: \"");
#nullable restore
#line 1084 "D:\Devotion Business\DIBN\DIBN\Views\ServiceRequests\Index.cshtml"
                             Write(Url.Action("GetUserPermissionsName", "UserPermission"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                            method: ""GET"",
                            data: { ""Module"": ""MyRequests"" },
                            success: function (UserResponse) {
                                if (UserResponse.length > 0) {
                                    for (let i = 0; i < UserResponse.length; i++) {
                                        $(""#"" + UserResponse[i]).show();
                                        if (UserResponse[i] == ""View"") {
                                            $("".Details"").show();
                                        }
                                        if (UserResponse[i] == ""Update"") {
                                            $(""."" + UserResponse[i]).show();
                                        }
                                        if (UserResponse[i] == ""Delete"") {
                                            $("".Delete"").show();
                                        }
                                    }
                     ");
            WriteLiteral(@"               $($.fn.dataTable.tables(true)).DataTable()
                                        .columns.adjust();
                                    $(""#loader"").hide();
                                }
                                else if (RoleResponse.length > 0) {
                                    for (let i = 0; i < RoleResponse.length; i++) {
                                        $(""#"" + RoleResponse[i]).show();
                                        if (RoleResponse[i] == ""View"") {
                                            $("".Details"").show();
                                        }
                                        if (RoleResponse[i] == ""Update"") {
                                            $(""."" + RoleResponse[i]).show();
                                        }
                                        if (RoleResponse[i] == ""Delete"") {
                                            $("".Delete"").show();
                                        }
                  ");
            WriteLiteral(@"                  }
                                    $($.fn.dataTable.tables(true)).DataTable()
                                        .columns.adjust();
                                    $(""#loader"").hide();
                                }
                            }
                        })
                    }
                });
                $(""#loader"").hide();
            },
            ""drawCallback"": function (settings, json) {
                $("".Update"").hide();
                $("".Delete"").hide();
                $("".Details"").hide();
                var module = $(""#Module"").val();
                $.ajax({
                    url: """);
#nullable restore
#line 1134 "D:\Devotion Business\DIBN\DIBN\Views\ServiceRequests\Index.cshtml"
                     Write(Url.Action("GetRolePermissionsName", "UserPermission"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\",\r\n                    method: \"GET\",\r\n                    data: { \"Module\": \"MyRequests\" },\r\n                    success: function (RoleResponse) {\r\n                        $.ajax({\r\n                            url: \"");
#nullable restore
#line 1139 "D:\Devotion Business\DIBN\DIBN\Views\ServiceRequests\Index.cshtml"
                             Write(Url.Action("GetUserPermissionsName", "UserPermission"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                            method: ""GET"",
                            data: { ""Module"": ""MyRequests"" },
                            success: function (UserResponse) {
                                if (UserResponse.length > 0) {
                                    for (let i = 0; i < UserResponse.length; i++) {
                                        $(""#"" + UserResponse[i]).show();
                                        if (UserResponse[i] == ""View"") {
                                            $("".Details"").show();
                                        }
                                        if (UserResponse[i] == ""Update"") {
                                            $(""."" + UserResponse[i]).show();
                                        }
                                        if (UserResponse[i] == ""Delete"") {
                                            $("".Delete"").show();
                                        }
                                    }
                     ");
            WriteLiteral(@"               $($.fn.dataTable.tables(true)).DataTable()
                                        .columns.adjust();
                                    $(""#loader"").hide();
                                }
                                else if (RoleResponse.length > 0) {
                                    for (let i = 0; i < RoleResponse.length; i++) {
                                        $(""#"" + RoleResponse[i]).show();
                                        if (RoleResponse[i] == ""View"") {
                                            $("".Details"").show();
                                        }
                                        if (RoleResponse[i] == ""Update"") {
                                            $(""."" + RoleResponse[i]).show();
                                        }
                                        if (RoleResponse[i] == ""Delete"") {
                                            $("".Delete"").show();
                                        }
                  ");
            WriteLiteral(@"                  }
                                    $($.fn.dataTable.tables(true)).DataTable()
                                        .columns.adjust();
                                    $(""#loader"").hide();
                                }
                            }
                        })
                    }
                });
                $(""#loader"").hide();
            },
            paging: true,
            pagingType: 'simple_numbers',
            ordering: false,
            searching: false,
            ""aLengthMenu"": [20, 30, 50],
            dom: ""<'row'<'col-sm-3'l><'col-sm-3'f><'col-sm-6'p>>"" +
                ""<'row'<'col-sm-12'tr>>"" +
                ""<'row'<'col-sm-5'i><'col-sm-7'p>>"",
        });

        $('#datatable tbody').on('click', 'td.dtr-control', function () {
            var tr = $(this).closest('tr');
            var row = table1.row(tr);
            if (!tr.hasClass(""shown"")) {
                row.child.show();
                tr.add");
            WriteLiteral("Class(\'shown\');\r\n                $(\".Update\").hide();\r\n                $(\".Delete\").hide();\r\n                $(\".Details\").hide();\r\n                var module = $(\"#Module\").val();\r\n                $.ajax({\r\n                    url: \"");
#nullable restore
#line 1204 "D:\Devotion Business\DIBN\DIBN\Views\ServiceRequests\Index.cshtml"
                     Write(Url.Action("GetRolePermissionsName", "UserPermission"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\",\r\n                    method: \"GET\",\r\n                    data: { \"Module\": \"MyRequests\" },\r\n                    success: function (RoleResponse) {\r\n                        $.ajax({\r\n                            url: \"");
#nullable restore
#line 1209 "D:\Devotion Business\DIBN\DIBN\Views\ServiceRequests\Index.cshtml"
                             Write(Url.Action("GetUserPermissionsName", "UserPermission"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                            method: ""GET"",
                            data: { ""Module"": ""MyRequests"" },
                            success: function (UserResponse) {
                                if (UserResponse.length > 0) {
                                    for (let i = 0; i < UserResponse.length; i++) {
                                        $(""#"" + UserResponse[i]).show();
                                        if (UserResponse[i] == ""View"") {
                                            $("".Details"").show();
                                        }
                                        if (UserResponse[i] == ""Update"") {
                                            $(""."" + UserResponse[i]).show();
                                        }
                                        if (UserResponse[i] == ""Delete"") {
                                            $("".Delete"").show();
                                        }
                                    }
                     ");
            WriteLiteral(@"               $(""#loader"").hide();
                                }
                                else if (RoleResponse.length > 0) {
                                    for (let i = 0; i < RoleResponse.length; i++) {
                                        $(""#"" + RoleResponse[i]).show();
                                        if (RoleResponse[i] == ""View"") {
                                            $("".Details"").show();
                                        }
                                        if (RoleResponse[i] == ""Update"") {
                                            $(""."" + RoleResponse[i]).show();
                                        }
                                        if (RoleResponse[i] == ""Delete"") {
                                            $("".Delete"").show();
                                        }
                                    }
                                    $(""#loader"").hide();
                                }
                          ");
            WriteLiteral(@"  }
                        })
                    }
                });
                $(""#loader"").hide();
            }
            else {
                row.child.hide();
                tr.removeClass('shown');
            }
        });

        var coll = document.getElementsByClassName(""Suitable"");

        for (var i = 0; i < coll.length; i++) {
            coll[i].addEventListener(""click"", function () {

                $(""#Suitable"").removeClass(""d-none-custom"");
                $(""#Benefits"").addClass(""d-none-custom"");
                $("".Suitable"").addClass(""bg-blue"").removeClass(""border-blue"");
                $("".Suitable"").closest(""div"").addClass(""text-white"").removeClass(""text-blue"");
                if ($("".Benefits"").hasClass(""bg-blue"")) {
                    $("".Benefits"").removeClass(""bg-blue"").addClass(""border-blue-top"").addClass(""border-blue-left"").addClass(""border-blue-right"");
                    $("".Benefits"").closest(""div"").addClass(""text-blue"").removeClass(""");
            WriteLiteral(@"text-white"");
                }
            });
        }
    });
</script>
<script>
    function ApplyFilterToCompanyServiceDatatable() {
        var status = $(""#ServiceStatus"").val();
        if ($.fn.dataTable.isDataTable('#datatable')) {
            $('#datatable').DataTable().destroy();
            $('#datatable').empty();
            var table1 = $('#datatable').DataTable({
            ""processing"": true,
            ""serverSide"": true,
            ""filter"": false,
            ""ajax"": {
                ""type"": ""post"",
                ""datatype"": ""json"",
                ""data"": function (oSettings,json) {
                    var info = Math.ceil(oSettings.start / oSettings.length) + 1;
                    var sortingBy = $(""#sortingByCmp"").val();
                    var sortingOrder = $(""#sortingDirectionCmp"").val();
                    var searchBy = $(""#searchByValueCmp"").val();
                    var searchedValue = $(""#searchedValueCmp"").val();
                    

     ");
            WriteLiteral("               var url = \"");
#nullable restore
#line 1293 "D:\Devotion Business\DIBN\DIBN\Views\ServiceRequests\Index.cshtml"
                          Write(Url.Action("GetAllAssignedCompanyServicesTempData","ServiceRequests"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""";
                    if (status != null && status != """") {
                        url = url + ""?status="" + status + ""&sortColumn="" + sortingBy + ""&sortDir="" + sortingOrder;
                    }
                    else {
                        url = url + ""?sortColumn="" + sortingBy + ""&sortDir="" + sortingOrder;
                    }
                    if (searchBy != """" && searchedValue != """") {
                        url = url + ""&searchBy="" + searchBy + ""&searchString="" + searchedValue;
                    }

                    url = url +""&page=""
                    $('#datatable').DataTable().ajax.url(
                        url + info
                    );
                }
            },
            ""responsive"": true,
            ""deferRender"": true,
            ""language"": {
                'processing': '<div class=""spinner-2""><div class=""center-div-2""><div class=""loader-circle-1""></div></div></div>'
            },
            ""columns"": [
                { ""data"": ""s");
            WriteLiteral(@"erialNumber"", name: ""SR No."",title:""SR No."" },
                { ""data"": ""requestedBy"", name: ""Created By"",title:""Created By"" },
                { ""data"": ""createdOn"", name: ""Created Date"",title:""Created Date"" },
                { ""data"": ""companyName"", name: ""Company"",title:""Company"" },
                    { ""data"": ""salesPerson"", name: ""Sales Person"", title: ""Sales Person"" },
                { ""data"": ""requestedService"", name: ""Requested Service"",title:""Requested Service"" },
                { ""data"": ""status"", name: ""Status"",title:""Status"" },
                { ""data"": ""assignedUser"", name: ""Assigned User(s)"",title:""Assigned User(s)"" },
                {
                    ""data"": function (data, full, meta) {
                        var url = """);
#nullable restore
#line 1326 "D:\Devotion Business\DIBN\DIBN\Views\ServiceRequests\Index.cshtml"
                              Write(Url.Action("TrackServiceRequest","ServiceRequests"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""";
                        url = url + ""?SerialNumber="" + data.serialNumber + ""&name=MyRequests"" + ""&serviceRequestType=Company"";
                        return '<a href=""' + url + '"" class=""btn btn-blue"">Track</a>';
                    },
                    name: """",
                    title:""""
                },
            ],
            ""initComplete"": function (settings, json) {
                var jsonData = json[""currentPage""];
                var displayData = json[""displayData""];
                var sortColumnData = json[""sortColumnData""];
                var sortColumnDirectionData = json[""sortColumnDirectionData""];
                var searchByData = json[""searchByData""];
                var searchedValueData = json[""searchedValueData""];
                if (parseInt(jsonData) != 0) {
                    
                    var currentPage = parseInt(jsonData) - 1;
                    table1.page.len(displayData).draw('page');
                    table1.page(currentPage).draw('p");
            WriteLiteral(@"age');
                    if(sortColumnData != null && sortColumnData !="""")
                        $(""#sortingByCmp"").val(sortColumnData).change();
                    if(sortColumnDirectionData != null && sortColumnDirectionData != """")
                        $(""#sortingDirectionCmp"").val(sortColumnDirectionData).change();
                    if(searchByData != null)
                        $(""#searchByValueCmp"").val(searchByData).change();
                    if(searchedValueData != null && searchedValueData != """")
                        $(""#searchedValueCmp"").val(searchedValueData);
                }

                $("".Update"").hide();
                $("".Delete"").hide();
                $("".Details"").hide();
                var module = $(""#Module"").val();
                $.ajax({
                    url: """);
#nullable restore
#line 1361 "D:\Devotion Business\DIBN\DIBN\Views\ServiceRequests\Index.cshtml"
                     Write(Url.Action("GetRolePermissionsName", "UserPermission"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\",\r\n                    method: \"GET\",\r\n                    data: { \"Module\": \"MyRequests\" },\r\n                    success: function (RoleResponse) {\r\n                        $.ajax({\r\n                            url: \"");
#nullable restore
#line 1366 "D:\Devotion Business\DIBN\DIBN\Views\ServiceRequests\Index.cshtml"
                             Write(Url.Action("GetUserPermissionsName", "UserPermission"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                            method: ""GET"",
                            data: { ""Module"": ""MyRequests"" },
                            success: function (UserResponse) {
                                if (UserResponse.length > 0) {
                                    for (let i = 0; i < UserResponse.length; i++) {
                                        $(""#"" + UserResponse[i]).show();
                                        if (UserResponse[i] == ""View"") {
                                            $("".Details"").show();
                                        }
                                        if (UserResponse[i] == ""Update"") {
                                            $(""."" + UserResponse[i]).show();
                                        }
                                        if (UserResponse[i] == ""Delete"") {
                                            $("".Delete"").show();
                                        }
                                    }
                     ");
            WriteLiteral(@"               $($.fn.dataTable.tables(true)).DataTable()
                                        .columns.adjust();
                                    $(""#loader"").hide();
                                }
                                else if (RoleResponse.length > 0) {
                                    for (let i = 0; i < RoleResponse.length; i++) {
                                        $(""#"" + RoleResponse[i]).show();
                                        if (RoleResponse[i] == ""View"") {
                                            $("".Details"").show();
                                        }
                                        if (RoleResponse[i] == ""Update"") {
                                            $(""."" + RoleResponse[i]).show();
                                        }
                                        if (RoleResponse[i] == ""Delete"") {
                                            $("".Delete"").show();
                                        }
                  ");
            WriteLiteral(@"                  }
                                    $($.fn.dataTable.tables(true)).DataTable()
                                        .columns.adjust();
                                    $(""#loader"").hide();
                                }
                            }
                        })
                    }
                });
                $(""#loader"").hide();
            },
            ""drawCallback"": function (settings, json) {
                $("".Update"").hide();
                $("".Delete"").hide();
                $("".Details"").hide();
                var module = $(""#Module"").val();
                $.ajax({
                    url: """);
#nullable restore
#line 1416 "D:\Devotion Business\DIBN\DIBN\Views\ServiceRequests\Index.cshtml"
                     Write(Url.Action("GetRolePermissionsName", "UserPermission"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\",\r\n                    method: \"GET\",\r\n                    data: { \"Module\": \"MyRequests\" },\r\n                    success: function (RoleResponse) {\r\n                        $.ajax({\r\n                            url: \"");
#nullable restore
#line 1421 "D:\Devotion Business\DIBN\DIBN\Views\ServiceRequests\Index.cshtml"
                             Write(Url.Action("GetUserPermissionsName", "UserPermission"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                            method: ""GET"",
                            data: { ""Module"": ""MyRequests"" },
                            success: function (UserResponse) {
                                if (UserResponse.length > 0) {
                                    for (let i = 0; i < UserResponse.length; i++) {
                                        $(""#"" + UserResponse[i]).show();
                                        if (UserResponse[i] == ""View"") {
                                            $("".Details"").show();
                                        }
                                        if (UserResponse[i] == ""Update"") {
                                            $(""."" + UserResponse[i]).show();
                                        }
                                        if (UserResponse[i] == ""Delete"") {
                                            $("".Delete"").show();
                                        }
                                    }
                     ");
            WriteLiteral(@"               $($.fn.dataTable.tables(true)).DataTable()
                                        .columns.adjust();
                                    $(""#loader"").hide();
                                }
                                else if (RoleResponse.length > 0) {
                                    for (let i = 0; i < RoleResponse.length; i++) {
                                        $(""#"" + RoleResponse[i]).show();
                                        if (RoleResponse[i] == ""View"") {
                                            $("".Details"").show();
                                        }
                                        if (RoleResponse[i] == ""Update"") {
                                            $(""."" + RoleResponse[i]).show();
                                        }
                                        if (RoleResponse[i] == ""Delete"") {
                                            $("".Delete"").show();
                                        }
                  ");
            WriteLiteral(@"                  }
                                    $($.fn.dataTable.tables(true)).DataTable()
                                        .columns.adjust();
                                    $(""#loader"").hide();
                                }
                            }
                        })
                    }
                });
                $(""#loader"").hide();
            },
            paging: true,
            pagingType: 'simple_numbers',
            ordering: false,
            searching: false,
            ""aLengthMenu"": [20, 30, 50],
            dom: ""<'row'<'col-sm-3'l><'col-sm-3'f><'col-sm-6'p>>"" +
                ""<'row'<'col-sm-12'tr>>"" +
                ""<'row'<'col-sm-5'i><'col-sm-7'p>>"",
        });

        $('#datatable tbody').on('click', 'td.dtr-control', function () {
            var tr = $(this).closest('tr');
            var row = table1.row(tr);
            if (!tr.hasClass(""shown"")) {
                row.child.show();
                tr.add");
            WriteLiteral("Class(\'shown\');\r\n                $(\".Update\").hide();\r\n                $(\".Delete\").hide();\r\n                $(\".Details\").hide();\r\n                var module = $(\"#Module\").val();\r\n                $.ajax({\r\n                    url: \"");
#nullable restore
#line 1486 "D:\Devotion Business\DIBN\DIBN\Views\ServiceRequests\Index.cshtml"
                     Write(Url.Action("GetRolePermissionsName", "UserPermission"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\",\r\n                    method: \"GET\",\r\n                    data: { \"Module\": \"MyRequests\" },\r\n                    success: function (RoleResponse) {\r\n                        $.ajax({\r\n                            url: \"");
#nullable restore
#line 1491 "D:\Devotion Business\DIBN\DIBN\Views\ServiceRequests\Index.cshtml"
                             Write(Url.Action("GetUserPermissionsName", "UserPermission"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                            method: ""GET"",
                            data: { ""Module"": ""MyRequests"" },
                            success: function (UserResponse) {
                                if (UserResponse.length > 0) {
                                    for (let i = 0; i < UserResponse.length; i++) {
                                        $(""#"" + UserResponse[i]).show();
                                        if (UserResponse[i] == ""View"") {
                                            $("".Details"").show();
                                        }
                                        if (UserResponse[i] == ""Update"") {
                                            $(""."" + UserResponse[i]).show();
                                        }
                                        if (UserResponse[i] == ""Delete"") {
                                            $("".Delete"").show();
                                        }
                                    }
                     ");
            WriteLiteral(@"               $(""#loader"").hide();
                                }
                                else if (RoleResponse.length > 0) {
                                    for (let i = 0; i < RoleResponse.length; i++) {
                                        $(""#"" + RoleResponse[i]).show();
                                        if (RoleResponse[i] == ""View"") {
                                            $("".Details"").show();
                                        }
                                        if (RoleResponse[i] == ""Update"") {
                                            $(""."" + RoleResponse[i]).show();
                                        }
                                        if (RoleResponse[i] == ""Delete"") {
                                            $("".Delete"").show();
                                        }
                                    }
                                    $(""#loader"").hide();
                                }
                          ");
            WriteLiteral(@"  }
                        })
                    }
                });
                $(""#loader"").hide();
            }
            else {
                row.child.hide();
                tr.removeClass('shown');
            }
        });
        }
    }
</script>
<script>
    $(document).ready(function () {
        var coll = document.getElementsByClassName(""Benefits"");
        var status = $(""#ServiceStatus"").val();
        for (var i = 0; i < coll.length; i++) {

            coll[i].addEventListener(""click"", function () {

                $(""#Suitable"").addClass(""d-none-custom"");
                $(""#Benefits"").removeClass(""d-none-custom"");
                $("".Benefits"").addClass(""bg-blue"").removeClass(""border-blue"");
                $("".Benefits"").closest(""div"").addClass(""text-white"").removeClass(""text-blue"");
                if ($("".Suitable"").hasClass(""bg-blue"")) {
                    $("".Suitable"").removeClass(""bg-blue"").addClass(""border-blue-top"").addClass(""border-blue-l");
            WriteLiteral(@"eft"").addClass(""border-blue-right"");
                    $("".Suitable"").closest(""div"").addClass(""text-blue"").removeClass(""text-white"");

                }

                if ($.fn.dataTable.isDataTable('#datatable-1')) {
                    $('#datatable-1').DataTable().destroy();
                    $('#datatable-1').empty();
                }

                var table = $('#datatable-1').DataTable({
                    ""processing"": true,
                    ""serverSide"": true,
                    ""filter"": false,
                    ""ajax"": {
                        ""type"": ""post"",
                        ""datatype"": ""json"",
                        ""data"": function (oSettings, json) {
                            var info = Math.ceil(oSettings.start / oSettings.length) + 1;
                            
                            var sortingBy = $(""#sortingByEmp"").val();
                            var sortingOrder = $(""#sortingDirectionEmp"").val();
                            var se");
            WriteLiteral("archBy = $(\"#searchByValueEmp\").val();\r\n                            var searchedValue = $(\"#searchedValueEmp\").val();\r\n                            \r\n\r\n                            var url = \"");
#nullable restore
#line 1578 "D:\Devotion Business\DIBN\DIBN\Views\ServiceRequests\Index.cshtml"
                                  Write(Url.Action("GetAllAssignedEmployeeServicesTempData","ServiceRequests"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""";
                            if (status != null && status != """") {
                                url = url + ""?status="" + status + ""&sortColumn="" + sortingBy + ""&sortDir="" + sortingOrder;
                            }
                            else {
                                url = url + ""?sortColumn="" + sortingBy + ""&sortDir="" + sortingOrder;
                            }
                            if (searchBy != """" && searchedValue != """") {
                                url = url + ""&searchBy="" + searchBy + ""&searchString="" + searchedValue;
                            }

                            url = url + ""&page="";
                            $('#datatable-1').DataTable().ajax.url(
                                url + info
                            );
                        }
                    },
                    ""responsive"": true,
                    ""deferRender"": true,
                    ""language"": {
                        'processing': '<div class=""s");
            WriteLiteral(@"pinner-2""><div class=""center-div-2""><div class=""loader-circle-1""></div></div></div>'
                    },
                    ""columns"": [
                        { ""data"": ""serialNumber"", title: ""SR No."", name: ""SR No."" },
                        { ""data"": ""requestedBy"", title: ""Created By"", name: ""Created By"" },
                        { ""data"": ""createdOn"", title: ""Created Date"", name: ""Created Date"" },
                        { ""data"": ""companyName"", title: ""Company"", name: ""Company"" },
                        { ""data"": ""salesPerson"", title: ""Sales Person"", name: ""Sales Person"" },
                        { ""data"": ""applicantName"", title: ""Applicant Name"", name: ""Applicant Name"" },
                        { ""data"": ""requestedService"", title: ""Requested Service"", name: ""Requested Service"" },
                        { ""data"": ""status"", title: ""Status"", name: ""Status"" },
                        { ""data"": ""assignedUser"", title: ""Assigned User(s)"", name: ""Assigned User(s)"" },
                     ");
            WriteLiteral("   {\r\n                            \"data\": function (data, full, meta) {\r\n                                var url = \"");
#nullable restore
#line 1612 "D:\Devotion Business\DIBN\DIBN\Views\ServiceRequests\Index.cshtml"
                                      Write(Url.Action("TrackServiceRequest","ServiceRequests"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""";
                                url = url + ""?SerialNumber="" + data.serialNumber + ""&name=MyRequests"" + ""&serviceRequestType=Employee"";
                                return '<a href=""' + url + '"" class=""btn btn-blue"">Track</a>';
                            },
                            title: """",
                            name: """"
                        },
                    ],
                    ""initComplete"": function (settings, json) {
                        var jsonData = json[""currentPage""];
                        var displayData = json[""displayData""];
                        var sortColumnData = json[""sortColumnData""];
                        var sortColumnDirectionData = json[""sortColumnDirectionData""];
                        var searchByData = json[""searchByData""];
                        var searchedValueData = json[""searchedValueData""];
                        if (parseInt(jsonData) != 0) {
                            
                            var currentPage = par");
            WriteLiteral(@"seInt(jsonData) - 1;
                            table.page.len(displayData).draw('page');
                            table.page(currentPage).draw('page');
                            if(sortColumnData != null && sortColumnData !="""")
                                $(""#sortingByEmp"").val(sortColumnData).change();
                            if(sortColumnDirectionData!=null && sortColumnDirectionData !="""")
                                $(""#sortingDirectionEmp"").val(sortColumnDirectionData).change();
                            if(searchByData != null)
                                $(""#searchByValueEmp"").val(searchByData).change();
                            if(searchedValueData != null && searchedValueData != """")
                                $(""#searchedValueEmp"").val(searchedValueData);
                        }
                        $("".Update"").hide();
                        $("".Delete"").hide();
                        $("".Details"").hide();
                        var module = $(""");
            WriteLiteral("#Module\").val();\r\n                        $.ajax({\r\n                            url: \"");
#nullable restore
#line 1646 "D:\Devotion Business\DIBN\DIBN\Views\ServiceRequests\Index.cshtml"
                             Write(Url.Action("GetRolePermissionsName", "UserPermission"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                            method: ""GET"",
                            data: { ""Module"": ""MyRequests"" },
                            success: function (RoleResponse) {
                                $.ajax({
                                    url: """);
#nullable restore
#line 1651 "D:\Devotion Business\DIBN\DIBN\Views\ServiceRequests\Index.cshtml"
                                     Write(Url.Action("GetUserPermissionsName", "UserPermission"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                                    method: ""GET"",
                                    data: { ""Module"": ""MyRequests"" },
                                    success: function (UserResponse) {
                                        if (UserResponse.length > 0) {
                                            for (let i = 0; i < UserResponse.length; i++) {
                                                $(""#"" + UserResponse[i]).show();
                                                if (UserResponse[i] == ""View"") {
                                                    $("".Details"").show();
                                                }
                                                if (UserResponse[i] == ""Update"") {
                                                    $(""."" + UserResponse[i]).show();
                                                }
                                                if (UserResponse[i] == ""Delete"") {
                                                    $("".Delete"").");
            WriteLiteral(@"show();
                                                }
                                            }
                                            $($.fn.dataTable.tables(true)).DataTable()
                                                .columns.adjust();
                                            $(""#loader"").hide();
                                        }
                                        else if (RoleResponse.length > 0) {
                                            for (let i = 0; i < RoleResponse.length; i++) {
                                                $(""#"" + RoleResponse[i]).show();
                                                if (RoleResponse[i] == ""View"") {
                                                    $("".Details"").show();
                                                }
                                                if (RoleResponse[i] == ""Update"") {
                                                    $(""."" + RoleResponse[i]).show();
                      ");
            WriteLiteral(@"                          }
                                                if (RoleResponse[i] == ""Delete"") {
                                                    $("".Delete"").show();
                                                }
                                            }
                                            $($.fn.dataTable.tables(true)).DataTable()
                                                .columns.adjust();
                                            $(""#loader"").hide();
                                        }
                                    }
                                })
                            }
                        });
                        $(""#loader"").hide();
                    },
                    ""drawCallback"": function (settings, json) {
                        $("".Update"").hide();
                        $("".Delete"").hide();
                        $("".Details"").hide();
                        var module = $(""#Module"").val();
       ");
            WriteLiteral("                 $.ajax({\r\n                            url: \"");
#nullable restore
#line 1701 "D:\Devotion Business\DIBN\DIBN\Views\ServiceRequests\Index.cshtml"
                             Write(Url.Action("GetRolePermissionsName", "UserPermission"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                            method: ""GET"",
                            data: { ""Module"": ""MyRequests"" },
                            success: function (RoleResponse) {
                                $.ajax({
                                    url: """);
#nullable restore
#line 1706 "D:\Devotion Business\DIBN\DIBN\Views\ServiceRequests\Index.cshtml"
                                     Write(Url.Action("GetUserPermissionsName", "UserPermission"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                                    method: ""GET"",
                                    data: { ""Module"": ""MyRequests"" },
                                    success: function (UserResponse) {
                                        if (UserResponse.length > 0) {
                                            for (let i = 0; i < UserResponse.length; i++) {
                                                $(""#"" + UserResponse[i]).show();
                                                if (UserResponse[i] == ""View"") {
                                                    $("".Details"").show();
                                                }
                                                if (UserResponse[i] == ""Update"") {
                                                    $(""."" + UserResponse[i]).show();
                                                }
                                                if (UserResponse[i] == ""Delete"") {
                                                    $("".Delete"").");
            WriteLiteral(@"show();
                                                }
                                            }
                                            $($.fn.dataTable.tables(true)).DataTable()
                                                .columns.adjust();
                                            $(""#loader"").hide();
                                        }
                                        else if (RoleResponse.length > 0) {
                                            for (let i = 0; i < RoleResponse.length; i++) {
                                                $(""#"" + RoleResponse[i]).show();
                                                if (RoleResponse[i] == ""View"") {
                                                    $("".Details"").show();
                                                }
                                                if (RoleResponse[i] == ""Update"") {
                                                    $(""."" + RoleResponse[i]).show();
                      ");
            WriteLiteral(@"                          }
                                                if (RoleResponse[i] == ""Delete"") {
                                                    $("".Delete"").show();
                                                }
                                            }
                                            $($.fn.dataTable.tables(true)).DataTable()
                                                .columns.adjust();
                                            $(""#loader"").hide();
                                        }
                                    }
                                })
                            }
                        });
                        $(""#loader"").hide();
                    },
                    paging: true,
                    ordering: false,
                    searching: false,
                    responsive: true,
                    ""aLengthMenu"": [20, 30, 50],
                    dom: ""<'row'<'col-sm-3'l><'col-sm-3'f><'col-sm-6");
            WriteLiteral(@"'p>>"" +
                        ""<'row'<'col-sm-12'tr>>"" +
                        ""<'row'<'col-sm-5'i><'col-sm-7'p>>"",
                });

                $('#datatable-1 tbody').on('click', 'td.dtr-control', function () {
                    var tr = $(this).closest('tr');
                    var row = table.row(tr);
                    if (!tr.hasClass(""shown"")) {
                        row.child.show();
                        tr.addClass('shown');
                        $("".Update"").hide();
                        $("".Delete"").hide();
                        $("".Details"").hide();
                        var module = $(""#Module"").val();
                        $.ajax({
                            url: """);
#nullable restore
#line 1771 "D:\Devotion Business\DIBN\DIBN\Views\ServiceRequests\Index.cshtml"
                             Write(Url.Action("GetRolePermissionsName", "UserPermission"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                            method: ""GET"",
                            data: { ""Module"": ""MyRequests"" },
                            success: function (RoleResponse) {
                                $.ajax({
                                    url: """);
#nullable restore
#line 1776 "D:\Devotion Business\DIBN\DIBN\Views\ServiceRequests\Index.cshtml"
                                     Write(Url.Action("GetUserPermissionsName", "UserPermission"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                                    method: ""GET"",
                                    data: { ""Module"": ""MyRequests"" },
                                    success: function (UserResponse) {
                                        if (UserResponse.length > 0) {
                                            for (let i = 0; i < UserResponse.length; i++) {
                                                $(""#"" + UserResponse[i]).show();
                                                if (UserResponse[i] == ""View"") {
                                                    $("".Details"").show();
                                                }
                                                if (UserResponse[i] == ""Update"") {
                                                    $(""."" + UserResponse[i]).show();
                                                }
                                                if (UserResponse[i] == ""Delete"") {
                                                    $("".Delete"").");
            WriteLiteral(@"show();
                                                }
                                            }
                                            $(""#loader"").hide();
                                        }
                                        else if (RoleResponse.length > 0) {
                                            for (let i = 0; i < RoleResponse.length; i++) {
                                                $(""#"" + RoleResponse[i]).show();
                                                if (RoleResponse[i] == ""View"") {
                                                    $("".Details"").show();
                                                }
                                                if (RoleResponse[i] == ""Update"") {
                                                    $(""."" + RoleResponse[i]).show();
                                                }
                                                if (RoleResponse[i] == ""Delete"") {
                                           ");
            WriteLiteral(@"         $("".Delete"").show();
                                                }
                                            }
                                            $(""#loader"").hide();
                                        }
                                    }
                                })
                            }
                        });
                        $(""#loader"").hide();
                    }
                    else {
                        row.child.hide();
                        tr.removeClass('shown');
                    }
                });

            });
        }

    });
</script>
<script>
    function ApplyFilterToEmployeeServiceDatatable(){
        var status = $(""#ServiceStatus"").val();
        if ($.fn.dataTable.isDataTable('#datatable-1')) {
            $('#datatable-1').DataTable().destroy();
            $('#datatable-1').empty();

            var table = $('#datatable-1').DataTable({
                ""processing"": true,
    ");
            WriteLiteral(@"            ""serverSide"": true,
                ""filter"": false,
                ""ajax"": {
                    ""type"": ""post"",
                    ""datatype"": ""json"",
                    ""data"": function (oSettings, json) {
                        var info = Math.ceil(oSettings.start / oSettings.length) + 1;
                        var sortingBy = $(""#sortingByEmp"").val();
                        var sortingOrder = $(""#sortingDirectionEmp"").val();
                        var searchBy = $(""#searchByValueEmp"").val();
                        var searchedValue = $(""#searchedValueEmp"").val();

                        var url = """);
#nullable restore
#line 1848 "D:\Devotion Business\DIBN\DIBN\Views\ServiceRequests\Index.cshtml"
                              Write(Url.Action("GetAllAssignedEmployeeServicesTempData","ServiceRequests"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""";
                        if (status != null && status != """") {
                            url = url + ""?status="" + status + ""&sortColumn="" + sortingBy + ""&sortDir="" + sortingOrder;
                        }
                        else {
                            url = url + ""?sortColumn="" + sortingBy + ""&sortDir="" + sortingOrder;
                        }
                        if (searchBy != """" && searchedValue != """") {
                            url = url + ""&searchBy="" + searchBy + ""&searchString="" + searchedValue;
                        }

                        url = url +""&page="";
                        $('#datatable-1').DataTable().ajax.url(
                            url + info
                        );
                    }
                },
                ""responsive"": true,
                ""deferRender"": true,
                ""language"": {
                    'processing': '<div class=""spinner-2""><div class=""center-div-2""><div class=""loader-circle-1""></div></div>");
            WriteLiteral(@"</div>'
                },
                ""columns"": [
                    { ""data"": ""serialNumber"", title: ""SR No."", name: ""SR No."" },
                    { ""data"": ""requestedBy"", title: ""Created By"", name: ""Created By"" },
                    { ""data"": ""createdOn"", title: ""Created Date"", name: ""Created Date"" },
                    { ""data"": ""companyName"", title: ""Company"", name: ""Company"" },
                    { ""data"": ""salesPerson"", title: ""Sales Person"", name: ""Sales Person"" },
                    { ""data"": ""applicantName"", title: ""Applicant Name"", name: ""Applicant Name"" },
                    { ""data"": ""requestedService"", title: ""Requested Service"", name: ""Requested Service"" },
                    { ""data"": ""status"", title: ""Status"", name: ""Status"" },
                    { ""data"": ""assignedUser"", title: ""Assigned User(s)"", name: ""Assigned User(s)"" },
                    {
                        ""data"": function (data, full, meta) {
                            var url = """);
#nullable restore
#line 1882 "D:\Devotion Business\DIBN\DIBN\Views\ServiceRequests\Index.cshtml"
                                  Write(Url.Action("TrackServiceRequest","ServiceRequests"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""";
                            url = url + ""?SerialNumber="" + data.serialNumber + ""&name=MyRequests"" + ""&serviceRequestType=Employee"";
                            return '<a href=""' + url + '"" class=""btn btn-blue"">Track</a>';
                        },
                        title: """",
                        name: """"
                    },
                ],
                ""initComplete"": function (settings, json) {
                    var jsonData = json[""currentPage""];
                    var displayData = json[""displayData""];
                    var sortColumnData = json[""sortColumnData""];
                    var sortColumnDirectionData = json[""sortColumnDirectionData""];
                    var searchByData = json[""searchByData""];
                    var searchedValueData = json[""searchedValueData""];
                    if (parseInt(jsonData) != 0) {
                        
                        var currentPage = parseInt(jsonData) - 1;
                        table.page.len(display");
            WriteLiteral(@"Data).draw('page');
                        table.page(currentPage).draw('page');
                        if(sortColumnData != null && sortColumnData!="""")
                            $(""#sortingByEmp"").val(sortColumnData).change();
                        if(sortColumnDirectionData != null && sortColumnDirectionData !="""")
                            $(""#sortingDirectionEmp"").val(sortColumnDirectionData).change();
                        if (searchByData != null)
                            $(""#searchByValueEmp"").val(searchByData).change();
                        if (searchedValueData != null && searchedValueData != """")
                            $(""#searchedValueEmp"").val(searchedValueData);
                    }
                    $("".Update"").hide();
                    $("".Delete"").hide();
                    $("".Details"").hide();
                    var module = $(""#Module"").val();
                    $.ajax({
                        url: """);
#nullable restore
#line 1916 "D:\Devotion Business\DIBN\DIBN\Views\ServiceRequests\Index.cshtml"
                         Write(Url.Action("GetRolePermissionsName", "UserPermission"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\",\r\n                        method: \"GET\",\r\n                        data: { \"Module\": \"MyRequests\" },\r\n                        success: function (RoleResponse) {\r\n                            $.ajax({\r\n                                url: \"");
#nullable restore
#line 1921 "D:\Devotion Business\DIBN\DIBN\Views\ServiceRequests\Index.cshtml"
                                 Write(Url.Action("GetUserPermissionsName", "UserPermission"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                                method: ""GET"",
                                data: { ""Module"": ""MyRequests"" },
                                success: function (UserResponse) {
                                    if (UserResponse.length > 0) {
                                        for (let i = 0; i < UserResponse.length; i++) {
                                            $(""#"" + UserResponse[i]).show();
                                            if (UserResponse[i] == ""View"") {
                                                $("".Details"").show();
                                            }
                                            if (UserResponse[i] == ""Update"") {
                                                $(""."" + UserResponse[i]).show();
                                            }
                                            if (UserResponse[i] == ""Delete"") {
                                                $("".Delete"").show();
                                            }
");
            WriteLiteral(@"                                        }
                                        $($.fn.dataTable.tables(true)).DataTable()
                                            .columns.adjust();
                                        $(""#loader"").hide();
                                    }
                                    else if (RoleResponse.length > 0) {
                                        for (let i = 0; i < RoleResponse.length; i++) {
                                            $(""#"" + RoleResponse[i]).show();
                                            if (RoleResponse[i] == ""View"") {
                                                $("".Details"").show();
                                            }
                                            if (RoleResponse[i] == ""Update"") {
                                                $(""."" + RoleResponse[i]).show();
                                            }
                                            if (RoleResponse[i] == ""Delete"") {
       ");
            WriteLiteral(@"                                         $("".Delete"").show();
                                            }
                                        }
                                        $($.fn.dataTable.tables(true)).DataTable()
                                            .columns.adjust();
                                        $(""#loader"").hide();
                                    }
                                }
                            })
                        }
                    });
                    $(""#loader"").hide();
                },
                ""drawCallback"": function (settings, json) {
                    $("".Update"").hide();
                    $("".Delete"").hide();
                    $("".Details"").hide();
                    var module = $(""#Module"").val();
                    $.ajax({
                        url: """);
#nullable restore
#line 1971 "D:\Devotion Business\DIBN\DIBN\Views\ServiceRequests\Index.cshtml"
                         Write(Url.Action("GetRolePermissionsName", "UserPermission"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\",\r\n                        method: \"GET\",\r\n                        data: { \"Module\": \"MyRequests\" },\r\n                        success: function (RoleResponse) {\r\n                            $.ajax({\r\n                                url: \"");
#nullable restore
#line 1976 "D:\Devotion Business\DIBN\DIBN\Views\ServiceRequests\Index.cshtml"
                                 Write(Url.Action("GetUserPermissionsName", "UserPermission"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                                method: ""GET"",
                                data: { ""Module"": ""MyRequests"" },
                                success: function (UserResponse) {
                                    if (UserResponse.length > 0) {
                                        for (let i = 0; i < UserResponse.length; i++) {
                                            $(""#"" + UserResponse[i]).show();
                                            if (UserResponse[i] == ""View"") {
                                                $("".Details"").show();
                                            }
                                            if (UserResponse[i] == ""Update"") {
                                                $(""."" + UserResponse[i]).show();
                                            }
                                            if (UserResponse[i] == ""Delete"") {
                                                $("".Delete"").show();
                                            }
");
            WriteLiteral(@"                                        }
                                        $($.fn.dataTable.tables(true)).DataTable()
                                            .columns.adjust();
                                        $(""#loader"").hide();
                                    }
                                    else if (RoleResponse.length > 0) {
                                        for (let i = 0; i < RoleResponse.length; i++) {
                                            $(""#"" + RoleResponse[i]).show();
                                            if (RoleResponse[i] == ""View"") {
                                                $("".Details"").show();
                                            }
                                            if (RoleResponse[i] == ""Update"") {
                                                $(""."" + RoleResponse[i]).show();
                                            }
                                            if (RoleResponse[i] == ""Delete"") {
       ");
            WriteLiteral(@"                                         $("".Delete"").show();
                                            }
                                        }
                                        $($.fn.dataTable.tables(true)).DataTable()
                                            .columns.adjust();
                                        $(""#loader"").hide();
                                    }
                                }
                            })
                        }
                    });
                    $(""#loader"").hide();
                },
                paging: true,
                ordering: false,
                searching: false,
                responsive: true,
                ""aLengthMenu"": [20, 30, 50],
                dom: ""<'row'<'col-sm-3'l><'col-sm-3'f><'col-sm-6'p>>"" +
                    ""<'row'<'col-sm-12'tr>>"" +
                    ""<'row'<'col-sm-5'i><'col-sm-7'p>>"",
            });

            $('#datatable-1 tbody').on('click', 'td.dtr-contro");
            WriteLiteral(@"l', function () {
                var tr = $(this).closest('tr');
                var row = table.row(tr);
                if (!tr.hasClass(""shown"")) {
                    row.child.show();
                    tr.addClass('shown');
                    $("".Update"").hide();
                    $("".Delete"").hide();
                    $("".Details"").hide();
                    var module = $(""#Module"").val();
                    $.ajax({
                        url: """);
#nullable restore
#line 2041 "D:\Devotion Business\DIBN\DIBN\Views\ServiceRequests\Index.cshtml"
                         Write(Url.Action("GetRolePermissionsName", "UserPermission"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\",\r\n                        method: \"GET\",\r\n                        data: { \"Module\": \"MyRequests\" },\r\n                        success: function (RoleResponse) {\r\n                            $.ajax({\r\n                                url: \"");
#nullable restore
#line 2046 "D:\Devotion Business\DIBN\DIBN\Views\ServiceRequests\Index.cshtml"
                                 Write(Url.Action("GetUserPermissionsName", "UserPermission"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                                method: ""GET"",
                                data: { ""Module"": ""MyRequests"" },
                                success: function (UserResponse) {
                                    if (UserResponse.length > 0) {
                                        for (let i = 0; i < UserResponse.length; i++) {
                                            $(""#"" + UserResponse[i]).show();
                                            if (UserResponse[i] == ""View"") {
                                                $("".Details"").show();
                                            }
                                            if (UserResponse[i] == ""Update"") {
                                                $(""."" + UserResponse[i]).show();
                                            }
                                            if (UserResponse[i] == ""Delete"") {
                                                $("".Delete"").show();
                                            }
");
            WriteLiteral(@"                                        }
                                        $(""#loader"").hide();
                                    }
                                    else if (RoleResponse.length > 0) {
                                        for (let i = 0; i < RoleResponse.length; i++) {
                                            $(""#"" + RoleResponse[i]).show();
                                            if (RoleResponse[i] == ""View"") {
                                                $("".Details"").show();
                                            }
                                            if (RoleResponse[i] == ""Update"") {
                                                $(""."" + RoleResponse[i]).show();
                                            }
                                            if (RoleResponse[i] == ""Delete"") {
                                                $("".Delete"").show();
                                            }
                                      ");
            WriteLiteral(@"  }
                                        $(""#loader"").hide();
                                    }
                                }
                            })
                        }
                    });
                    $(""#loader"").hide();
                }
                else {
                    row.child.hide();
                    tr.removeClass('shown');
                }
            });
        }
    }
</script>
<script>
    $(function () {
        $(""#Insert"").hide();
        $(""#View"").hide();
        $(""#View1"").hide();
        $("".Update"").hide();
        $("".Delete"").hide();
        $("".Details"").hide();
    });
</script>
<script>
    $(function () {
        $(""#loader"").show();
        var module = $(""#Module"").val();
        $.ajax({
            url: """);
#nullable restore
#line 2109 "D:\Devotion Business\DIBN\DIBN\Views\ServiceRequests\Index.cshtml"
             Write(Url.Action("GetRolePermissionsName", "UserPermission"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
            method: ""GET"",
            data: { ""Module"": module },
            async: false,
            contentType: ""application/json; charset=utf-8"",
            dataType: ""json"",
            success: function (RoleResponse) {
                $(""#loader"").show();
                $.ajax({
                    url: """);
#nullable restore
#line 2118 "D:\Devotion Business\DIBN\DIBN\Views\ServiceRequests\Index.cshtml"
                     Write(Url.Action("GetUserPermissionsName", "UserPermission"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                    method: ""GET"",
                    data: { ""Module"": module },
                    async: false,
                    contentType: ""application/json; charset=utf-8"",
                    dataType: ""json"",
                    success: function (UserResponse) {
                        $(""#loader"").show();
                        if (UserResponse.length > 0) {
                            for (let i = 0; i < UserResponse.length; i++) {
                                if (UserResponse[i] == ""PermissionCount"") {
                                    alert(""You don't have any permission for this module."");
                                    var url = """);
#nullable restore
#line 2130 "D:\Devotion Business\DIBN\DIBN\Views\ServiceRequests\Index.cshtml"
                                          Write(Url.Action("Index","Home"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""";
                                    url = url + ""?name=HomePage"";
                                    window.location.href = url;
                                } else {
                                    $(""#"" + UserResponse[i]).show();
                                    if (UserResponse[i] == ""View"") {
                                        $("".Details"").show();
                                        $(""#View1"").show();
                                    }
                                    if (UserResponse[i] == ""Update"") {
                                        $(""."" + UserResponse[i]).show();
                                    }
                                    if (UserResponse[i] == ""Delete"") {
                                        $(""."" + UserResponse[i]).show();
                                    }
                                }

                            }
                            $(""#loader"").hide();
                        }
                        else");
            WriteLiteral(@" if (RoleResponse.length > 0) {
                            for (let i = 0; i < RoleResponse.length; i++) {
                                if (RoleResponse[i] == ""PermissionCount"") {
                                    alert(""You don't have any permission for this module."");
                                    var url = """);
#nullable restore
#line 2154 "D:\Devotion Business\DIBN\DIBN\Views\ServiceRequests\Index.cshtml"
                                          Write(Url.Action("Index","Home"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""";
                                    url = url + ""?name=HomePage"";
                                    window.location.href = url;
                                }
                                else {
                                    $(""#"" + RoleResponse[i]).show();
                                    if (RoleResponse[i] == ""View"") {
                                        $("".Details"").show();
                                        $(""#View1"").show();
                                    }
                                    if (RoleResponse[i] == ""Update"") {
                                        $(""."" + RoleResponse[i]).show();
                                    }
                                    if (RoleResponse[i] == ""Delete"") {
                                        $(""."" + RoleResponse[i]).show();
                                    }
                                }

                            }
                            $(""#loader"").hide();
                      ");
            WriteLiteral(@"  } else {
                            alert(""You don't have any permission for this module."");
                            $(""#loader"").hide();
                        }
                    }
                })
            }
        });
        $(""#loader"").hide();
    });
</script>
<script>
    $(""#Companies"").on(""change"", function () {
        var selected = $(""#Companies"").val();
        var module = $(""#Module"").val();
        var url = """);
#nullable restore
#line 2189 "D:\Devotion Business\DIBN\DIBN\Views\ServiceRequests\Index.cshtml"
              Write(Url.Action("Index", "ServiceRequests"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""";
        url = url + ""?name="" + module + ""&Company="" + selected;
        window.location.href = url;
    });

    $(function () {
        $('#ServiceStatus').select2();
    });
</script>
<script>
    function showRequest() {
        var _selectedValue = $(""#ServiceStatus"").val();
        var companyId = $(""#CompanyId"").val();
        if (_selectedValue != """") {
            var url = """);
#nullable restore
#line 2203 "D:\Devotion Business\DIBN\DIBN\Views\ServiceRequests\Index.cshtml"
                  Write(Url.Action("Index","ServiceRequests"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""";
            if(companyId !="""" && companyId!=0){
                url = url + ""?name=MyRequests&Status="" + _selectedValue+""&CompanyId=""+companyId;
            }
            else{
                url = url + ""?name=MyRequests&Status="" + _selectedValue;
            }
            window.location.href = url;
        }
        else {
            var url = """);
#nullable restore
#line 2213 "D:\Devotion Business\DIBN\DIBN\Views\ServiceRequests\Index.cshtml"
                  Write(Url.Action("Index","ServiceRequests"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""";
            if(companyId !="""" && companyId!=0){
                url = url + ""?name=MyRequests"" + ""&CompanyId="" + companyId;
            }
            else{
                url = url + ""?name=MyRequests"";
            }
            window.location.href = url;
        }
    };
</script>
<script>
    $(window).resize(function () {
        var allRows = $('#datatable tbody tr');
        allRows.each(function () {
            var tr = $(this).closest('tr');
            var row = $($.fn.dataTable.tables(true)).DataTable().row(tr);
            if (tr.hasClass(""shown"")) {
                row.child.hide();
                tr.removeClass('shown');
                tr.removeClass('parent');
            }
        });

        var allRows1 = $('#datatable-1 tbody tr');
        allRows1.each(function () {
            var tr = $(this).closest('tr');
            var row = $($.fn.dataTable.tables(true)).DataTable().row(tr);
            if (tr.hasClass(""shown"")) {
                row.child.hide();");
            WriteLiteral(@"
                tr.removeClass('shown');
                tr.removeClass('parent');
            }
        });

        var allRows2 = $('#datatable-3 tbody tr');
        allRows2.each(function () {
            var tr = $(this).closest('tr');
            var row = $($.fn.dataTable.tables(true)).DataTable().row(tr);
            if (tr.hasClass(""shown"")) {
                row.child.hide();
                tr.removeClass('shown');
                tr.removeClass('parent');
            }
        });

        var allRows3 = $('#datatable-4 tbody tr');
        allRows3.each(function () {
            var tr = $(this).closest('tr');
            var row = $($.fn.dataTable.tables(true)).DataTable().row(tr);
            if (tr.hasClass(""shown"")) {
                row.child.hide();
                tr.removeClass('shown');
                tr.removeClass('parent');
            }
        });
    });
</script>
<script>
    $(""#searchByValueCmp"").on('change', function () {
        var selectedValu");
            WriteLiteral(@"e = $(""#searchByValueCmp"").val();
        if (selectedValue == ""Created Date"") {
            $(""#searchedValueCmp"").val("""");
            $(""#searchedValueCmp"").datepicker({
                format: 'dd-mm-yyyy',
                changeMonth: true,
                changeYear: true,
                autoclose: true,
                todayHighlight: true,
            })

            $(""#searchedValueCmp"").attr(""readonly"", ""readonly"");
        }
        else {
            $(""#searchedValueCmp"").datepicker(""destroy"");
            $(""#searchedValueCmp"").removeAttr(""readonly"");
            $(""#searchedValueCmp"").val("""");
        }
    });

    $(""#searchByValueEmp"").on('change', function () {
        var selectedValue = $(""#searchByValueEmp"").val();

        if (selectedValue == ""Created Date"") {
            $(""#searchedValueEmp"").val("""");
            $(""#searchedValueEmp"").datepicker({
                format: 'dd-mm-yyyy',
                changeMonth: true,
                changeYear: true,");
            WriteLiteral(@"
                autoclose: true,
                todayHighlight: true,
            })

            $(""#searchedValueEmp"").attr(""readonly"", ""readonly"");
        }
        else {
            $(""#searchedValueEmp"").datepicker(""destroy"");
            $(""#searchedValueEmp"").removeAttr(""readonly"");
            $(""#searchedValueEmp"").val("""");
        }
    });

    function ClearFilterToDatatable() {
        window.location.reload();
    }
</script>");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<DIBN.Models.GetAllRequests> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
