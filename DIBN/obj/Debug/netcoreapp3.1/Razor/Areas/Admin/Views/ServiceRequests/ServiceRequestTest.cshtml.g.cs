#pragma checksum "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\ServiceRequests\ServiceRequestTest.cshtml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "dd4587069a71199e7ee70dfb6704349d6e86a2328f2f8312b14d14bbec5ab4d6"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_Admin_Views_ServiceRequests_ServiceRequestTest), @"mvc.1.0.view", @"/Areas/Admin/Views/ServiceRequests/ServiceRequestTest.cshtml")]
namespace AspNetCore
{
    #line hidden
    using global::System;
    using global::System.Collections.Generic;
    using global::System.Linq;
    using global::System.Threading.Tasks;
    using global::Microsoft.AspNetCore.Mvc;
    using global::Microsoft.AspNetCore.Mvc.Rendering;
    using global::Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\_ViewImports.cshtml"
using DIBN;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\_ViewImports.cshtml"
using DIBN.Areas.Admin.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\_ViewImports.cshtml"
using DIBN.Areas.Admin.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\_ViewImports.cshtml"
using DIBN.Areas.Admin.IRepository;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\_ViewImports.cshtml"
using DIBN.Areas.Admin.Repository;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA256", @"dd4587069a71199e7ee70dfb6704349d6e86a2328f2f8312b14d14bbec5ab4d6", @"/Areas/Admin/Views/ServiceRequests/ServiceRequestTest.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA256", @"605a41b4408e5d1ff247f7264e35f4305eb9eeecf14a77cb4f30041778bbf31f", @"/Areas/Admin/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Areas_Admin_Views_ServiceRequests_ServiceRequestTest : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<DIBN.Areas.Admin.Models.GetBothRequestModel>
    #nullable disable
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "0", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "3", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "4", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("float-end col-md-6"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("ServiceStatus"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("onchange", new global::Microsoft.AspNetCore.Html.HtmlString("showRequest();"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "Serial Number", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("selected", new global::Microsoft.AspNetCore.Html.HtmlString("selected"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "Created By", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "Created On", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "Assigned Date", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_12 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "Assigned User(s)", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_13 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "Company", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_14 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "Service Request Type", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_15 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "asc", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_16 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "desc", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_17 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "Sales Person", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_18 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "Status", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_19 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "Applicant Name", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_20 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/jquery/dist/jquery.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_21 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/libs/datatables.net/js/jquery.dataTables.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_22 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/libs/datatables.net-bs4/js/dataTables.bootstrap4.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_23 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/libs/datatables.net-responsive/js/dataTables.responsive.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_24 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/libs/datatables.net-responsive-bs4/js/responsive.bootstrap4.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_25 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/libs/sweetalert2/sweetalert2.all.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_26 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/libs/sweetalert2/sweetalert2.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_27 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/select2/select2.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_28 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_29 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/select2/select2.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 2 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\ServiceRequests\ServiceRequestTest.cshtml"
  
    ViewData["Title"] = "Service Request";

#line default
#line hidden
#nullable disable
            WriteLiteral("<div id=\"loader\">\r\n    <div class=\"spinner-1\">\r\n        <div class=\"center-div-1\">\r\n");
            WriteLiteral(@"            <div class=""loader-circle-75"">
            </div>
        </div>
    </div>
</div>
<div id=""View"">
    <div class=""row"">
        <div class=""col-md-12"">
            <div class=""col-md-3 col-lg-2 col-sm-6 float-end"">
                <div class=""card p-0"">
                    <div class=""card-body p-2"">
                        <div class=""d-flex justify-content-evenly"">
                            <h6 class=""float-end col-md-6 mt-2 ms-2""><b>Filter :</b></h6>
                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("select", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "dd4587069a71199e7ee70dfb6704349d6e86a2328f2f8312b14d14bbec5ab4d615175", async() => {
                WriteLiteral("\r\n                                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "dd4587069a71199e7ee70dfb6704349d6e86a2328f2f8312b14d14bbec5ab4d615492", async() => {
                    WriteLiteral("All");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "dd4587069a71199e7ee70dfb6704349d6e86a2328f2f8312b14d14bbec5ab4d616769", async() => {
                    WriteLiteral("Open");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "dd4587069a71199e7ee70dfb6704349d6e86a2328f2f8312b14d14bbec5ab4d618047", async() => {
                    WriteLiteral("Closed");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "dd4587069a71199e7ee70dfb6704349d6e86a2328f2f8312b14d14bbec5ab4d619327", async() => {
                    WriteLiteral("Rejected");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_3.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                            ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
#nullable restore
#line 24 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\ServiceRequests\ServiceRequestTest.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => Model.SelectedStatus);

#line default
#line hidden
#nullable disable
            __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <input type=\"hidden\" name=\"Module\" id=\"Module\"");
            BeginWriteAttribute("value", " value=\"", 1485, "\"", 1506, 1);
#nullable restore
#line 37 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\ServiceRequests\ServiceRequestTest.cshtml"
WriteAttributeValue("", 1493, Model.Module, 1493, 13, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(@" />
    <div class=""row"">
        <div class=""col-md-12 p-0"">
            <div class=""col-md-3 col-sm-12 col ps-1 float-start"">
                <div class=""card bg-blue p-3 mb-0 Suitable text-white text-center text-break font-weight-4 font-size-16"" style=""border-radius:15px 15px 0px 0px;"">
                    Company Service Request(s)
                </div>
            </div>
            <div class=""col-md-3 col-sm-12 col ps-1 float-start"">
                <div class=""card p-3 Benefits mb-0 text-break border-blue-top border-blue-left border-blue-right text-blue text-center font-weight-4 font-size-16"" style=""border-radius:15px 15px 0px 0px;"">
                    Employee Service Request(s)
                </div>
            </div>

            <div class=""col-md-12 col-sm-12 col-12 ps-1 float-start cssanimation fadeInBottom"" style=""background:#F8F8F8;"" id=""Suitable"">
                    <div class=""card"">
                        <div class=""card-header"">
                            <div class");
            WriteLiteral(@"=""col-md-12 float-md-end"">
                                <button class=""btn btn-blue float-md-end"" onclick=""ClearFilterToDatatable();"">Clear All</button>
                            </div>
                            <div class=""row"">
                                <div class=""col-md-6 col-sm-12 float-md-start d-md-flex align-items-md-center"">
                                    <div class=""col-lg-4 col-sm-4 col-6 float-md-start"">
                                        <div class=""form-group ms-2 mt-2"">
                                            <label class=""control-label"">Sort By : </label>
                                            <select class=""form-select"" id=""sortingByCmp"">
                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "dd4587069a71199e7ee70dfb6704349d6e86a2328f2f8312b14d14bbec5ab4d624528", async() => {
                WriteLiteral("Serial Number");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_7.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_7);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "dd4587069a71199e7ee70dfb6704349d6e86a2328f2f8312b14d14bbec5ab4d625850", async() => {
                WriteLiteral("Created By");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_9.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_9);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "dd4587069a71199e7ee70dfb6704349d6e86a2328f2f8312b14d14bbec5ab4d627086", async() => {
                WriteLiteral("Created On");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_10.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_10);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "dd4587069a71199e7ee70dfb6704349d6e86a2328f2f8312b14d14bbec5ab4d628324", async() => {
                WriteLiteral("Assigned Date");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_11.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_11);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "dd4587069a71199e7ee70dfb6704349d6e86a2328f2f8312b14d14bbec5ab4d629565", async() => {
                WriteLiteral("Assigned User(s)");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_12.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_12);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "dd4587069a71199e7ee70dfb6704349d6e86a2328f2f8312b14d14bbec5ab4d630809", async() => {
                WriteLiteral("Company");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_13.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_13);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "dd4587069a71199e7ee70dfb6704349d6e86a2328f2f8312b14d14bbec5ab4d632044", async() => {
                WriteLiteral("Service Request Type");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_14.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_14);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                            </select>
                                        </div>
                                    </div>
                                    <div class=""col-lg-4 col-sm-4 col-6 float-md-start"">
                                        <div class=""form-group ms-2 mt-2"">
                                            <label class=""control-label"">Sorting Order : </label>
                                            <select class=""form-select"" id=""sortingDirectionCmp"" name=""sortingDirectionCmp"">
                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "dd4587069a71199e7ee70dfb6704349d6e86a2328f2f8312b14d14bbec5ab4d633841", async() => {
                WriteLiteral("Low to High");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_15.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_15);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "dd4587069a71199e7ee70dfb6704349d6e86a2328f2f8312b14d14bbec5ab4d635163", async() => {
                WriteLiteral("High to Low");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_16.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_16);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                            </select>
                                        </div>
                                    </div>
                                    <div class=""col-lg-4 col-sm-4 col-6 float-md-start"" style=""margin-top:30px !important;"" id=""companyApplyFilter"">
                                        <button class=""btn btn-blue float-start ms-2 me-2"" onclick=""ApplyFilterToCompanyServiceDatatable();"">Apply Filter</button>
                                    </div>
                                </div>
                                <div class=""col-md-6 col-sm-12 float-md-start d-md-flex align-items-md-center"">
                                    <div class=""col-lg-4 col-sm-4 col-6 float-md-start"">
                                        <div class=""form-group ms-2 mt-2"">
                                            <label class=""control-label"">Search By : </label>
                                            <select class=""form-select"" id=""searchByValueCmp"">
       ");
            WriteLiteral("                                         ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "dd4587069a71199e7ee70dfb6704349d6e86a2328f2f8312b14d14bbec5ab4d637469", async() => {
                WriteLiteral("Serial Number");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_7.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_7);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "dd4587069a71199e7ee70dfb6704349d6e86a2328f2f8312b14d14bbec5ab4d638708", async() => {
                WriteLiteral("Created By");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_9.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_9);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "dd4587069a71199e7ee70dfb6704349d6e86a2328f2f8312b14d14bbec5ab4d639944", async() => {
                WriteLiteral("Created On");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_10.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_10);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "dd4587069a71199e7ee70dfb6704349d6e86a2328f2f8312b14d14bbec5ab4d641182", async() => {
                WriteLiteral("Assigned User(s)");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_12.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_12);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "dd4587069a71199e7ee70dfb6704349d6e86a2328f2f8312b14d14bbec5ab4d642426", async() => {
                WriteLiteral("Assigned Date");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_11.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_11);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "dd4587069a71199e7ee70dfb6704349d6e86a2328f2f8312b14d14bbec5ab4d643667", async() => {
                WriteLiteral("Company");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_13.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_13);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "dd4587069a71199e7ee70dfb6704349d6e86a2328f2f8312b14d14bbec5ab4d644902", async() => {
                WriteLiteral("Sales Person");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_17.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_17);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "dd4587069a71199e7ee70dfb6704349d6e86a2328f2f8312b14d14bbec5ab4d646142", async() => {
                WriteLiteral("Service Request Type");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_14.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_14);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "dd4587069a71199e7ee70dfb6704349d6e86a2328f2f8312b14d14bbec5ab4d647390", async() => {
                WriteLiteral("Status");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_18.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_18);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                            </select>
                                        </div>
                                    </div>
                                    <div class=""col-lg-4 col-sm-4 col-6 float-md-start"">
                                        <div class=""form-group ms-2 mt-2"">
                                            <label class=""control-label"">Search By : </label>
                                            <input id=""searchedValueCmp"" name=""searchedValueCmp"" class=""form-control"" />
                                        </div>
                                    </div>
                                    <div class=""col-lg-4 col-sm-4 col-6 float-md-start"" style=""margin-top:30px !important;"" id=""companysearchFilter"">
                                        <button class=""btn btn-blue float-start ms-2 me-2"" onclick=""ApplyFilterToCompanyServiceDatatable();"">Search</button>
                                    </div>
                                </div>
       ");
            WriteLiteral(@"                     </div>
                        </div>
                        <div class=""card-body"">
                            <div class=""table-rep-plugin"">
                                <div class=""table-responsive mb-0"" data-pattern=""priority-columns"">
                                    <table id=""datatable"" class=""table table-bordered table-striped dt-responsive nowrap datatable"" style=""border-collapse: collapse; border-spacing: 0; width: 100%;"">
                                        <thead>
                                            <tr>
                                                <th class=""align-middle text-center"">
                                                    SR No.
                                                </th>
                                                <th class=""align-middle text-center"">
                                                    Created By
                                                </th>
                                             ");
            WriteLiteral(@"   <th class=""align-middle text-center"">
                                                    Created Date
                                                </th>
                                                <th class=""align-middle text-center"">
                                                    Assigned Date
                                                </th>
                                                <th class=""align-middle text-center"">
                                                    Company Name
                                                </th>
                                                <th class=""align-middle text-center"">
                                                    Sales Person
                                                </th>
                                                <th class=""align-middle text-center"">
                                                    Service Request Type
                                                </th>
                    ");
            WriteLiteral(@"                            <th class=""align-middle text-center"">
                                                    Status
                                                </th>
                                                <th class=""align-middle text-center"">
                                                    Assigned User(s)
                                                </th>
                                                <th>
                                                    Action
                                                </th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                        </tbody>
                                    </table>
                                </div>

                            </div>
                        </div>
                    </div>
            </div>
            <div class=""col-md-12 col-sm-12 col-12 ps-1 f");
            WriteLiteral(@"loat-start d-none cssanimation fadeInBottom"" style=""background:#F8F8F8;"" id=""Benefits"">
                    <div class=""card"">
                        <div class=""card-header"">
                            <div class=""col-md-12 float-md-end"">
                                <button class=""btn btn-blue float-md-end"" onclick=""ClearFilterToDatatable();"">Clear All</button>
                            </div>
                            <div class=""row"">
                                <div class=""col-md-6 col-sm-12 float-md-start d-md-flex align-items-md-center"">
                                    <div class=""col-lg-4 col-sm-4 col-6 float-md-start"">
                                        <div class=""form-group ms-2 mt-2"">
                                            <label class=""control-label"">Sort By : </label>
                                            <select class=""form-select"" id=""sortingByEmp"">
                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "dd4587069a71199e7ee70dfb6704349d6e86a2328f2f8312b14d14bbec5ab4d653852", async() => {
                WriteLiteral("Serial Number");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_7.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_7);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "dd4587069a71199e7ee70dfb6704349d6e86a2328f2f8312b14d14bbec5ab4d655091", async() => {
                WriteLiteral("Created By");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_9.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_9);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "dd4587069a71199e7ee70dfb6704349d6e86a2328f2f8312b14d14bbec5ab4d656327", async() => {
                WriteLiteral("Created On");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_10.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_10);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "dd4587069a71199e7ee70dfb6704349d6e86a2328f2f8312b14d14bbec5ab4d657565", async() => {
                WriteLiteral("Assigned Date");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_11.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_11);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "dd4587069a71199e7ee70dfb6704349d6e86a2328f2f8312b14d14bbec5ab4d658806", async() => {
                WriteLiteral("Assigned User(s)");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_12.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_12);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "dd4587069a71199e7ee70dfb6704349d6e86a2328f2f8312b14d14bbec5ab4d660050", async() => {
                WriteLiteral("Company");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_13.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_13);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "dd4587069a71199e7ee70dfb6704349d6e86a2328f2f8312b14d14bbec5ab4d661285", async() => {
                WriteLiteral("Applicant Name");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_19.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_19);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "dd4587069a71199e7ee70dfb6704349d6e86a2328f2f8312b14d14bbec5ab4d662527", async() => {
                WriteLiteral("Service Request Type");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_14.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_14);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                            </select>
                                        </div>
                                    </div>
                                    <div class=""col-lg-4 col-sm-4 col-6 float-md-start"">
                                        <div class=""form-group ms-2 mt-2"">
                                            <label class=""control-label"">Sorting Order : </label>
                                            <select class=""form-select"" id=""sortingDirectionEmp"">
                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "dd4587069a71199e7ee70dfb6704349d6e86a2328f2f8312b14d14bbec5ab4d664295", async() => {
                WriteLiteral("Low to High");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_15.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_15);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "dd4587069a71199e7ee70dfb6704349d6e86a2328f2f8312b14d14bbec5ab4d665534", async() => {
                WriteLiteral("High to Low");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_16.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_16);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                            </select>
                                        </div>
                                    </div>
                                    <div class=""col-lg-4 col-sm-4 col-6 float-md-start"" style=""margin-top:30px !important;"" id=""employeeApplyFilter"">
                                        <button class=""btn btn-blue float-start ms-2 me-2"" onclick=""ApplyFilterToEmployeeServiceDatatable();"">Apply Filter</button>
                                    </div>
                                </div>
                                <div class=""col-md-6 col-sm-12 float-md-start d-md-flex align-items-md-center"">
                                    <div class=""col-lg-4 col-sm-4 col-6 float-md-start"">
                                        <div class=""form-group ms-2 mt-2"">
                                            <label class=""control-label"">Search By : </label>
                                            <select class=""form-select"" id=""searchByValueEmp"">
     ");
            WriteLiteral("                                           ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "dd4587069a71199e7ee70dfb6704349d6e86a2328f2f8312b14d14bbec5ab4d667842", async() => {
                WriteLiteral("Serial Number");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_7.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_7);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "dd4587069a71199e7ee70dfb6704349d6e86a2328f2f8312b14d14bbec5ab4d669081", async() => {
                WriteLiteral("Created By");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_9.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_9);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "dd4587069a71199e7ee70dfb6704349d6e86a2328f2f8312b14d14bbec5ab4d670317", async() => {
                WriteLiteral("Created On");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_10.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_10);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "dd4587069a71199e7ee70dfb6704349d6e86a2328f2f8312b14d14bbec5ab4d671555", async() => {
                WriteLiteral("Assigned User(s)");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_12.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_12);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "dd4587069a71199e7ee70dfb6704349d6e86a2328f2f8312b14d14bbec5ab4d672799", async() => {
                WriteLiteral("Assigned Date");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_11.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_11);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "dd4587069a71199e7ee70dfb6704349d6e86a2328f2f8312b14d14bbec5ab4d674040", async() => {
                WriteLiteral("Company");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_13.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_13);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "dd4587069a71199e7ee70dfb6704349d6e86a2328f2f8312b14d14bbec5ab4d675275", async() => {
                WriteLiteral("Sales Person");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_17.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_17);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "dd4587069a71199e7ee70dfb6704349d6e86a2328f2f8312b14d14bbec5ab4d676515", async() => {
                WriteLiteral("Applicant Name");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_19.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_19);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "dd4587069a71199e7ee70dfb6704349d6e86a2328f2f8312b14d14bbec5ab4d677757", async() => {
                WriteLiteral("Service Request Type");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_14.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_14);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "dd4587069a71199e7ee70dfb6704349d6e86a2328f2f8312b14d14bbec5ab4d679005", async() => {
                WriteLiteral("Status");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_18.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_18);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                            </select>
                                        </div>
                                    </div>
                                    <div class=""col-lg-4 col-sm-4 col-6 float-md-start"">
                                        <div class=""form-group ms-2 mt-2"">
                                            <label class=""control-label"">Search By : </label>
                                            <input id=""searchedValueEmp"" name=""searchedValueEmp"" class=""form-control"" />
                                        </div>
                                    </div>
                                    <div class=""col-lg-4 col-sm-4 col-6 float-md-start"" style=""margin-top:30px !important;"" id=""employeesearchFilter"">
                                        <button class=""btn btn-blue float-start ms-2 me-2"" onclick=""ApplyFilterToEmployeeServiceDatatable();"">Search</button>
                                    </div>
                                </div>
     ");
            WriteLiteral(@"                       </div>
                        </div>
                        <div class=""card-body"">
                            <div class=""table-rep-plugin"">
                                <div class=""table-responsive mb-0"" data-pattern=""priority-columns"">
                                    <table id=""datatable-1"" class=""table table-bordered table-striped dt-responsive nowrap datatable"" style=""border-collapse: collapse; border-spacing: 0; width: 100%;"">
                                        <thead>
                                            <tr>
                                                <th class=""align-middle text-center"">
                                                    SR No.
                                                </th>
                                                <th class=""align-middle text-center"">
                                                    Created By
                                                </th>
                                         ");
            WriteLiteral(@"       <th class=""align-middle text-center"">
                                                    Created Date
                                                </th>
                                                <th class=""align-middle text-center"">
                                                    Assigned Date
                                                </th>
                                                <th class=""align-middle text-center"">
                                                    Company Name
                                                </th>
                                                <th class=""align-middle text-center"">
                                                    Sales Person
                                                </th>
                                                <th class=""align-middle text-center"">
                                                    Applicant Name
                                                </th>
                      ");
            WriteLiteral(@"                          <th class=""align-middle text-center"">
                                                    Service Request Type
                                                </th>
                                                <th class=""align-middle text-center"">
                                                    Status
                                                </th>
                                                <th class=""align-middle text-center"">
                                                    Assigned User(s)
                                                </th>
                                                <th>
                                                    Action
                                                </th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                        </tbody>
                                    </table>
 ");
            WriteLiteral(@"                               </div>
                            </div>
                        </div>
                    </div>
            </div>
        </div>
    </div>

</div>


<div id=""ServiceRequest"" class=""modal"" tabindex=""-1"" data-bs-keyboard=""false"" data-bs-backdrop=""static"" role=""dialog"">
    <div class=""modal-dialog"" role=""document"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h5 class=""modal-title"">Assign Request</h5>
                <button type=""button"" class=""close btn btn-blue"" id=""ServiceRequestModalClose"" aria-label=""Close"">
                    <span aria-hidden=""true"">&times;</span>
                </button>
            </div>
            <div class=""modal-body"">
            </div>
        </div>
    </div>
</div>
");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "dd4587069a71199e7ee70dfb6704349d6e86a2328f2f8312b14d14bbec5ab4d685323", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_20);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n<!-- Required datatable js -->\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "dd4587069a71199e7ee70dfb6704349d6e86a2328f2f8312b14d14bbec5ab4d686422", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_21);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "dd4587069a71199e7ee70dfb6704349d6e86a2328f2f8312b14d14bbec5ab4d687487", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_22);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n<!-- Responsive examples -->\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "dd4587069a71199e7ee70dfb6704349d6e86a2328f2f8312b14d14bbec5ab4d688588", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_23);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "dd4587069a71199e7ee70dfb6704349d6e86a2328f2f8312b14d14bbec5ab4d689653", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_24);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n<!-- Sweet Alerts-->\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "dd4587069a71199e7ee70dfb6704349d6e86a2328f2f8312b14d14bbec5ab4d690746", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_25);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "dd4587069a71199e7ee70dfb6704349d6e86a2328f2f8312b14d14bbec5ab4d691811", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_26);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "dd4587069a71199e7ee70dfb6704349d6e86a2328f2f8312b14d14bbec5ab4d692872", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_27);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_28);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "dd4587069a71199e7ee70dfb6704349d6e86a2328f2f8312b14d14bbec5ab4d694013", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_29);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"

<script>
    ////// Open Selection dropdown on focus                                     -- Yashasvi TBC (09-02-2023)
    $(document).on('focus', '.select2.select2-container', function (e) {
        if (e.originalEvent && $(this).find("".select2-selection--single"").length > 0) {
            $(this).siblings('select').select2('open');
        }
    });
    $(""#RejectServiceModalClose"").on(""click"", function () {
        window.location.reload();
    });
    $(""#ServiceRequestModalClose"").on(""click"", function () {
        window.location.reload();
    });
    $(function () {
        $('#ServiceStatus').select2();
    });
    $(document).ready(function () {
        $(""#loader"").hide();
    });
    $(window).resize(function(){
        if ($(window).width() < 640){
            $(""#companyApplyFilter"").css('margin-top', '15px');
            $(""#employeeApplyFilter"").css('margin-top', '15px');
            $(""#companysearchFilter"").css('margin-top', '15px');
            $(""#employeesearchFil");
            WriteLiteral(@"ter"").css('margin-top', '15px');
        }
    })
</script>

<script>
    jQuery.extend(jQuery.fn.dataTableExt.oSort, {
        ""date-dmy-pre"": function (a) {
            if (a == null || a == """") {
                return 0;
            }
            var date = a.split('-');
            return (date[2] + date[1] + date[0]) * 1;
        },

        ""date-dmy-asc"": function (a, b) {
            return ((a < b) ? -1 : ((a > b) ? 1 : 0));
        },

        ""date-dmy-desc"": function (a, b) {
            return ((a < b) ? 1 : ((a > b) ? -1 : 0));
        }
    });
</script>

<script>
    $(document).ready(function () {

        var status = $(""#ServiceStatus"").val();
        var table = $('#datatable').DataTable({
            ""processing"": true,
            ""serverSide"": true,
            ""filter"": true,
            ""ajax"": {
                ""type"": ""post"",
                ""datatype"": ""json"",
                ""data"": function (oSettings, json) {
                    var info = M");
            WriteLiteral(@"ath.ceil(oSettings.start / oSettings.length) + 1;

                    var sortingBy = $(""#sortingByCmp"").val();
                    var sortingOrder = $(""#sortingDirectionCmp"").val();
                    var searchBy = $(""#searchByValueCmp"").val();
                    var searchedValue = $(""#searchedValueCmp"").val();

                    var url = """);
#nullable restore
#line 381 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\ServiceRequests\ServiceRequestTest.cshtml"
                          Write(Url.Action("GetAllCompanyServicesTempDate", "ServiceRequests"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""";
                    if (status != null && status != """") {
                        url = url + ""?status="" + status + ""&sortColumn="" + sortingBy + ""&sortColumnDirection="" + sortingOrder;
                    }
                    else {
                        url = url + ""?sortColumn="" + sortingBy + ""&sortColumnDirection="" + sortingOrder;
                    }
                    if (searchBy != """" && searchedValue != """") {
                        url = url + ""&searchBy="" + searchBy + ""&searchedValue="" + searchedValue;
                    }
                    url = url + ""&page="";

                    $('#datatable').DataTable().ajax.url(
                        url + info
                    );
                }
            },
            ""responsive"": true,
            ""deferRender"": true,
            ""language"": {
                'processing': '<div class=""spinner-2""><div class=""center-div-2""><div class=""loader-circle-1""></div></div></div>'
            },
            ""columns"": [
 ");
            WriteLiteral(@"               { ""data"": ""serialNumber"", ""name"": ""SR No."" },
                { ""data"": ""requestedBy"", ""name"": ""Created By"" },
                { ""data"": ""createdOn"", ""name"": ""Created Date"" },
                { ""data"": ""assignedOn"", ""name"": ""Assigned Date"" },
                { ""data"": ""companyName"", ""name"": ""Company Name"" },
                { ""data"": ""salesPerson"", ""name"": ""Sales Person"" },
                { ""data"": ""requestedService"", ""name"": ""Service Request Type"" },
                { ""data"": ""status"", ""name"": ""Status"" },
                { ""data"": ""assignedUser"", ""name"": ""Assigned User(s)"" },
                {
                    ""data"": function (data, full, meta) {
                        var url = """);
#nullable restore
#line 415 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\ServiceRequests\ServiceRequestTest.cshtml"
                              Write(Url.Action("TrackServiceRequest", "ServiceRequests"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""";
                        url = url + ""?SerialNumber="" + data.serialNumber + ""&Status="" + status + ""&name=MyRequests"" + ""&serviceRequestType=Company"";

                        var assignfun = ""AssignRequestToUser('"" + data.serialNumber + ""',"" + data.serviceId + "",'Company')"";

                        var removeService = ""RemoveService('"" + data.serialNumber + ""',"" + data.serviceId + "",'Company')"";

                        return '<a href=""' + url + '"" class=""btn btn-blue Details"">Track</a><a onclick=' + assignfun + ' role=""button"" class=""btn btn-blue ms-2 Update"">Assign Request</a><a onclick=' + removeService + ' role=""button"" class=""btn btn-blue ms-2 Delete"">Remove</a>';
                    },
                    ""name"": ""Action""
                },
            ],
            ""initComplete"": function (settings, json) {
                var jsonData = json[""currentPage""];
                var displayData = json[""displayData""];
                var sortColumnData = json[""sortColumnData""];
        ");
            WriteLiteral(@"        var sortColumnDirectionData = json[""sortColumnDirectionData""];
                var searchByData = json[""searchByData""];
                var searchedValueData = json[""searchedValueData""];
                if (parseInt(jsonData) != 0) {

                    var currentPage = parseInt(jsonData) - 1;
                    table.page.len(displayData).draw('page');
                    table.page(currentPage).draw('page');
                    if (sortColumnData != null && sortColumnData != """")
                        $(""#sortingByCmp"").val(sortColumnData).change();
                    if (sortColumnDirectionData != null && sortColumnDirectionData != """")
                        $(""#sortingDirectionCmp"").val(sortColumnDirectionData).change();
                    if (searchByData != null)
                        $(""#searchByValueCmp"").val(searchByData).change();
                    if (searchedValueData != null && searchedValueData != """")
                        $(""#searchedValueCmp"").val(searchedVa");
            WriteLiteral("lueData);\r\n                }\r\n                $(\".Update\").hide();\r\n                $(\".Delete\").hide();\r\n                $(\".Details\").hide();\r\n                var module = $(\"#Module\").val();\r\n                $.ajax({\r\n                    url: \"");
#nullable restore
#line 453 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\ServiceRequests\ServiceRequestTest.cshtml"
                     Write(Url.Action("GetRolePermissionsName", "Permission"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\",\r\n                    method: \"GET\",\r\n                    data: { \"Module\": \"MyRequests\" },\r\n                    success: function (RoleResponse) {\r\n                        $.ajax({\r\n                            url: \"");
#nullable restore
#line 458 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\ServiceRequests\ServiceRequestTest.cshtml"
                             Write(Url.Action("GetUserPermissionsName", "Permission"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                            method: ""GET"",
                            data: { ""Module"": ""MyRequests"" },
                            success: function (UserResponse) {
                                if (UserResponse.length > 0) {
                                    for (let i = 0; i < UserResponse.length; i++) {
                                        $(""#"" + UserResponse[i]).show();
                                        if (UserResponse[i] == ""View"") {
                                            $("".Details"").show();
                                        }
                                        if (UserResponse[i] == ""Update"") {
                                            $(""."" + UserResponse[i]).show();
                                        }
                                        if (UserResponse[i] == ""Delete"") {
                                            $("".Delete"").show();
                                        }
                                    }
                     ");
            WriteLiteral(@"               $($.fn.dataTable.tables(true)).DataTable()
                                        .columns.adjust();
                                    $(""#loader"").hide();
                                }
                                else if (RoleResponse.length > 0) {
                                    for (let i = 0; i < RoleResponse.length; i++) {
                                        $(""#"" + RoleResponse[i]).show();
                                        if (RoleResponse[i] == ""View"") {
                                            $("".Details"").show();
                                        }
                                        if (RoleResponse[i] == ""Update"") {
                                            $(""."" + RoleResponse[i]).show();
                                        }
                                        if (RoleResponse[i] == ""Delete"") {
                                            $("".Delete"").show();
                                        }
                  ");
            WriteLiteral(@"                  }
                                    $($.fn.dataTable.tables(true)).DataTable()
                                        .columns.adjust();
                                    $(""#loader"").hide();
                                }
                            }
                        })
                    }
                });
                $(""#loader"").hide();
            },
            ""drawCallback"": function (settings, json) {
                $("".Update"").hide();
                $("".Delete"").hide();
                $("".Details"").hide();
                var module = $(""#Module"").val();
                $.ajax({
                    url: """);
#nullable restore
#line 508 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\ServiceRequests\ServiceRequestTest.cshtml"
                     Write(Url.Action("GetRolePermissionsName", "Permission"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\",\r\n                    method: \"GET\",\r\n                    data: { \"Module\": \"MyRequests\" },\r\n                    success: function (RoleResponse) {\r\n                        $.ajax({\r\n                            url: \"");
#nullable restore
#line 513 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\ServiceRequests\ServiceRequestTest.cshtml"
                             Write(Url.Action("GetUserPermissionsName", "Permission"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                            method: ""GET"",
                            data: { ""Module"": ""MyRequests"" },
                            success: function (UserResponse) {
                                if (UserResponse.length > 0) {
                                    for (let i = 0; i < UserResponse.length; i++) {
                                        $(""#"" + UserResponse[i]).show();
                                        if (UserResponse[i] == ""View"") {
                                            $("".Details"").show();
                                        }
                                        if (UserResponse[i] == ""Update"") {
                                            $(""."" + UserResponse[i]).show();
                                        }
                                        if (UserResponse[i] == ""Delete"") {
                                            $("".Delete"").show();
                                        }
                                    }
                     ");
            WriteLiteral(@"               $($.fn.dataTable.tables(true)).DataTable()
                                        .columns.adjust();
                                    $(""#loader"").hide();
                                }
                                else if (RoleResponse.length > 0) {
                                    for (let i = 0; i < RoleResponse.length; i++) {
                                        $(""#"" + RoleResponse[i]).show();
                                        if (RoleResponse[i] == ""View"") {
                                            $("".Details"").show();
                                        }
                                        if (RoleResponse[i] == ""Update"") {
                                            $(""."" + RoleResponse[i]).show();
                                        }
                                        if (RoleResponse[i] == ""Delete"") {
                                            $("".Delete"").show();
                                        }
                  ");
            WriteLiteral(@"                  }
                                    $($.fn.dataTable.tables(true)).DataTable()
                                        .columns.adjust();
                                    $(""#loader"").hide();
                                }
                            }
                        })
                    }
                });
                $(""#loader"").hide();
            },
            paging: true,
            pagingType: 'simple_numbers',
            ordering: false,
            searching: false,
            ""aLengthMenu"": [20, 30, 50],
            dom: ""<'row'<'col-sm-3'l><'col-sm-3'f><'col-sm-6'p>>"" +
                ""<'row'<'col-sm-12'tr>>"" +
                ""<'row'<'col-sm-5'i><'col-sm-7'p>>"",
        });

        $('#datatable tbody').on('click', 'td.dtr-control', function () {
            var tr = $(this).closest('tr');
            var row = table.row(tr);
            if (!tr.hasClass(""shown"")) {
                row.child.show();
                tr.addC");
            WriteLiteral("lass(\'shown\');\r\n                $(\".Update\").hide();\r\n                $(\".Delete\").hide();\r\n                $(\".Details\").hide();\r\n\r\n                var module = $(\"#Module\").val();\r\n                $.ajax({\r\n                    url: \"");
#nullable restore
#line 579 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\ServiceRequests\ServiceRequestTest.cshtml"
                     Write(Url.Action("GetRolePermissionsName", "Permission"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\",\r\n                    method: \"GET\",\r\n                    data: { \"Module\": \"MyRequests\" },\r\n                    success: function (RoleResponse) {\r\n                        $.ajax({\r\n                            url: \"");
#nullable restore
#line 584 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\ServiceRequests\ServiceRequestTest.cshtml"
                             Write(Url.Action("GetUserPermissionsName", "Permission"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                            method: ""GET"",
                            data: { ""Module"": ""MyRequests"" },
                            success: function (UserResponse) {
                                if (UserResponse.length > 0) {
                                    for (let i = 0; i < UserResponse.length; i++) {
                                        $(""#"" + UserResponse[i]).show();
                                        if (UserResponse[i] == ""View"") {
                                            $("".Details"").show();
                                        }
                                        if (UserResponse[i] == ""Update"") {
                                            $(""."" + UserResponse[i]).show();
                                        }
                                        if (UserResponse[i] == ""Delete"") {
                                            $("".Delete"").show();
                                        }
                                    }
                     ");
            WriteLiteral(@"               $(""#loader"").hide();
                                }
                                else if (RoleResponse.length > 0) {
                                    for (let i = 0; i < RoleResponse.length; i++) {
                                        $(""#"" + RoleResponse[i]).show();
                                        if (RoleResponse[i] == ""View"") {
                                            $("".Details"").show();
                                        }
                                        if (RoleResponse[i] == ""Update"") {
                                            $(""."" + RoleResponse[i]).show();
                                        }
                                        if (RoleResponse[i] == ""Delete"") {
                                            $("".Delete"").show();
                                        }
                                    }
                                    $(""#loader"").hide();
                                }
                          ");
            WriteLiteral(@"  }
                        })
                    }
                });
                $(""#loader"").hide();
            }
            else {
                row.child.hide();
                tr.removeClass('shown');
            }
        });

        var coll = document.getElementsByClassName(""Suitable"");

        for (var i = 0; i < coll.length; i++) {

            coll[i].addEventListener(""click"", function () {
                $(""#Suitable"").removeClass(""d-none"");
                $(""#Benefits"").addClass(""d-none"");
                $("".Suitable"").addClass(""bg-blue"").removeClass(""border-blue"");
                $("".Suitable"").closest(""div"").addClass(""text-white"").removeClass(""text-blue"");
                if ($("".Benefits"").hasClass(""bg-blue"")) {
                    $("".Benefits"").removeClass(""bg-blue"").addClass(""border-blue-top"").addClass(""border-blue-left"").addClass(""border-blue-right"");
                    $("".Benefits"").closest(""div"").addClass(""text-blue"").removeClass(""text-white"");");
            WriteLiteral(@"
                }
            });
        }
    });

</script>

<script>
    $(document).ready(function () {
        var coll = document.getElementsByClassName(""Benefits"");
        var status = $(""#ServiceStatus"").val();

        for (var i = 0; i < coll.length; i++) {
            coll[i].addEventListener(""click"", function () {

                if ($.fn.dataTable.isDataTable('#datatable-1')) {
                    $('#datatable-1').DataTable().destroy();
                    $('#datatable-1').empty();
                }

                var table1 = $('#datatable-1').DataTable({
                    ""processing"": true,
                    ""serverSide"": true,
                    ""filter"": false,
                    ""ajax"": {
                        ""type"": ""post"",
                        ""datatype"": ""json"",
                        ""data"": function (oSettings, json) {
                            var sortingBy = $(""#sortingByEmp"").val();
                            var sortingOrder = $(");
            WriteLiteral("\"#sortingDirectionEmp\").val();\r\n                            var searchBy = $(\"#searchByValueEmp\").val();\r\n                            var searchedValue = $(\"#searchedValueEmp\").val();\r\n\r\n                            var url = \"");
#nullable restore
#line 675 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\ServiceRequests\ServiceRequestTest.cshtml"
                                  Write(Url.Action("GetAllEmployeeServicesTempDate", "ServiceRequests"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""";
                            if (status != null && status != """") {
                                url = url + ""?status="" + status + ""&sortColumn="" + sortingBy + ""&sortColumnDirection="" + sortingOrder;
                            }
                            else {
                                url = url + ""?sortColumn="" + sortingBy + ""&sortColumnDirection="" + sortingOrder;
                            }
                            if (searchBy != """" && searchedValue != """") {
                                url = url + ""&searchBy="" + searchBy + ""&searchedValue="" + searchedValue;
                            }

                            url = url + ""&page="";
                            var info = Math.ceil(oSettings.start / oSettings.length) + 1;
                            $('#datatable-1').DataTable().ajax.url(
                                url + info
                            );
                        }
                    },
                    ""responsive"": true,
             ");
            WriteLiteral(@"       ""deferRender"": true,
                    ""language"": {
                        'processing': '<div class=""spinner-2""><div class=""center-div-2""><div class=""loader-circle-1""></div></div></div>'
                    },
                    ""columns"": [
                        { ""data"": ""serialNumber"", sTitle: ""SR No."" },
                        { ""data"": ""requestedBy"", sTitle: ""Created By"" },
                        { ""data"": ""createdOn"", sTitle: ""Created Date"" },
                        { ""data"": ""assignedOn"", sTitle: ""Assigned Date"" },
                        { ""data"": ""companyName"", sTitle: ""Company Name"" },
                        { ""data"": ""salesPerson"", sTitle: ""Sales Person"" },
                        { ""data"": ""applicantName"", sTitle: ""Applicant Name"" },
                        { ""data"": ""requestedService"", sTitle: ""Service Request Type"" },
                        { ""data"": ""status"", sTitle: ""Status"" },
                        { ""data"": ""assignedUser"", sTitle: ""Assigned User(s)"" },
  ");
            WriteLiteral("                      {\r\n                            \"data\": function (data, full, meta) {\r\n                                var url = \"");
#nullable restore
#line 711 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\ServiceRequests\ServiceRequestTest.cshtml"
                                      Write(Url.Action("TrackServiceRequest", "ServiceRequests"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""";
                                url = url + ""?SerialNumber="" + data.serialNumber + ""&Status="" + status + ""&name=MyRequests"" + ""&serviceRequestType=Employee"";

                                var assignfun = ""AssignRequestToUser('"" + data.serialNumber + ""',"" + data.serviceId + "",'Employee')"";

                                var removeService = ""RemoveService('"" + data.serialNumber + ""',"" + data.serviceId + "",'Employee')"";

                                return '<a href=""' + url + '"" class=""btn btn-blue Details"">Track</a><a onclick=' + assignfun + ' role=""button"" class=""btn btn-blue ms-2 Update"">Assign Request</a><a onclick=' + removeService + ' role=""button"" class=""btn btn-blue ms-2 Delete"">Remove</a>';
                            },
                            sTitle: ""Action""
                        },
                    ],
                    ""initComplete"": function (settings, json) {
                        var jsonData = json[""currentPage""];
                        var displayData = j");
            WriteLiteral(@"son[""displayData""];
                        var sortColumnData = json[""sortColumnData""];
                        var sortColumnDirectionData = json[""sortColumnDirectionData""];
                        var searchByData = json[""searchByData""];
                        var searchedValueData = json[""searchedValueData""];
                        if (parseInt(jsonData) != 0) {

                            var currentPage = parseInt(jsonData) - 1;
                            table1.page.len(displayData).draw('page');
                            table1.page(currentPage).draw('page');
                            if (sortColumnData != null && sortColumnData != """")
                                $(""#sortingByEmp"").val(sortColumnData).change();
                            if (sortColumnDirectionData != null && sortColumnDirectionData != """")
                                $(""#sortingDirectionEmp"").val(sortColumnDirectionData).change();
                            if (searchByData != null)
                   ");
            WriteLiteral(@"             $(""#searchByValueEmp"").val(searchByData).change();
                            if (searchedValueData != null && searchedValueData != """")
                                $(""#searchedValueEmp"").val(searchedValueData);
                        }
                        $("".Update"").hide();
                        $("".Delete"").hide();
                        $("".Details"").hide();
                        var module = $(""#Module"").val();
                        $.ajax({
                            url: """);
#nullable restore
#line 749 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\ServiceRequests\ServiceRequestTest.cshtml"
                             Write(Url.Action("GetRolePermissionsName", "Permission"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                            method: ""GET"",
                            data: { ""Module"": ""MyRequests"" },
                            success: function (RoleResponse) {
                                $.ajax({
                                    url: """);
#nullable restore
#line 754 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\ServiceRequests\ServiceRequestTest.cshtml"
                                     Write(Url.Action("GetUserPermissionsName", "Permission"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                                    method: ""GET"",
                                    data: { ""Module"": ""MyRequests"" },
                                    success: function (UserResponse) {
                                        if (UserResponse.length > 0) {
                                            for (let i = 0; i < UserResponse.length; i++) {
                                                $(""#"" + UserResponse[i]).show();
                                                if (UserResponse[i] == ""View"") {
                                                    $("".Details"").show();
                                                }
                                                if (UserResponse[i] == ""Update"") {
                                                    $(""."" + UserResponse[i]).show();
                                                }
                                                if (UserResponse[i] == ""Delete"") {
                                                    $("".Delete"").");
            WriteLiteral(@"show();
                                                }
                                            }
                                            $($.fn.dataTable.tables(true)).DataTable()
                                                .columns.adjust();
                                            $(""#loader"").hide();
                                        }
                                        else if (RoleResponse.length > 0) {
                                            for (let i = 0; i < RoleResponse.length; i++) {
                                                $(""#"" + RoleResponse[i]).show();
                                                if (RoleResponse[i] == ""View"") {
                                                    $("".Details"").show();
                                                }
                                                if (RoleResponse[i] == ""Update"") {
                                                    $(""."" + RoleResponse[i]).show();
                      ");
            WriteLiteral(@"                          }
                                                if (RoleResponse[i] == ""Delete"") {
                                                    $("".Delete"").show();
                                                }
                                            }
                                            $($.fn.dataTable.tables(true)).DataTable()
                                                .columns.adjust();
                                            $(""#loader"").hide();
                                        }
                                    }
                                })
                            }
                        });
                        $(""#loader"").hide();
                    },
                    ""drawCallback"": function (settings, json) {
                        $("".Update"").hide();
                        $("".Delete"").hide();
                        $("".Details"").hide();
                        var module = $(""#Module"").val();
       ");
            WriteLiteral("                 $.ajax({\r\n                            url: \"");
#nullable restore
#line 804 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\ServiceRequests\ServiceRequestTest.cshtml"
                             Write(Url.Action("GetRolePermissionsName", "Permission"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                            method: ""GET"",
                            data: { ""Module"": ""MyRequests"" },
                            success: function (RoleResponse) {
                                $.ajax({
                                    url: """);
#nullable restore
#line 809 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\ServiceRequests\ServiceRequestTest.cshtml"
                                     Write(Url.Action("GetUserPermissionsName", "Permission"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                                    method: ""GET"",
                                    data: { ""Module"": ""MyRequests"" },
                                    success: function (UserResponse) {
                                        if (UserResponse.length > 0) {
                                            for (let i = 0; i < UserResponse.length; i++) {
                                                $(""#"" + UserResponse[i]).show();
                                                if (UserResponse[i] == ""View"") {
                                                    $("".Details"").show();
                                                }
                                                if (UserResponse[i] == ""Update"") {
                                                    $(""."" + UserResponse[i]).show();
                                                }
                                                if (UserResponse[i] == ""Delete"") {
                                                    $("".Delete"").");
            WriteLiteral(@"show();
                                                }
                                            }
                                            $($.fn.dataTable.tables(true)).DataTable()
                                                .columns.adjust();
                                            $(""#loader"").hide();
                                        }
                                        else if (RoleResponse.length > 0) {
                                            for (let i = 0; i < RoleResponse.length; i++) {
                                                $(""#"" + RoleResponse[i]).show();
                                                if (RoleResponse[i] == ""View"") {
                                                    $("".Details"").show();
                                                }
                                                if (RoleResponse[i] == ""Update"") {
                                                    $(""."" + RoleResponse[i]).show();
                      ");
            WriteLiteral(@"                          }
                                                if (RoleResponse[i] == ""Delete"") {
                                                    $("".Delete"").show();
                                                }
                                            }
                                            $($.fn.dataTable.tables(true)).DataTable()
                                                .columns.adjust();
                                            $(""#loader"").hide();
                                        }
                                    }
                                })
                            }
                        });
                        $(""#loader"").hide();
                    },
                    paging: true,
                    pagingType: 'simple_numbers',
                    ordering: false,
                    searching: false,
                    ""aLengthMenu"": [20, 30, 50],
                    dom: ""<'row'<'col-sm-3'l><'col-sm-3'");
            WriteLiteral(@"f><'col-sm-6'p>>"" +
                        ""<'row'<'col-sm-12'tr>>"" +
                        ""<'row'<'col-sm-5'i><'col-sm-7'p>>"",
                });

                $('#datatable-1 tbody').on('click', 'td.dtr-control', function () {

                    var tr = $(this).closest('tr');
                    var row = table1.row(tr);
                    if (!tr.hasClass(""shown"")) {
                        row.child.show();
                        tr.addClass('shown');
                        $("".Update"").hide();
                        $("".Delete"").hide();
                        $("".Details"").hide();

                        var module = $(""#Module"").val();
                        $.ajax({
                            url: """);
#nullable restore
#line 876 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\ServiceRequests\ServiceRequestTest.cshtml"
                             Write(Url.Action("GetRolePermissionsName", "Permission"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                            method: ""GET"",
                            data: { ""Module"": ""MyRequests"" },
                            success: function (RoleResponse) {
                                $.ajax({
                                    url: """);
#nullable restore
#line 881 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\ServiceRequests\ServiceRequestTest.cshtml"
                                     Write(Url.Action("GetUserPermissionsName", "Permission"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                                    method: ""GET"",
                                    data: { ""Module"": ""MyRequests"" },
                                    success: function (UserResponse) {
                                        if (UserResponse.length > 0) {
                                            for (let i = 0; i < UserResponse.length; i++) {
                                                $(""#"" + UserResponse[i]).show();
                                                if (UserResponse[i] == ""View"") {
                                                    $("".Details"").show();
                                                }
                                                if (UserResponse[i] == ""Update"") {
                                                    $(""."" + UserResponse[i]).show();
                                                }
                                                if (UserResponse[i] == ""Delete"") {
                                                    $("".Delete"").");
            WriteLiteral(@"show();
                                                }
                                            }
                                            $(""#loader"").hide();
                                        }
                                        else if (RoleResponse.length > 0) {
                                            for (let i = 0; i < RoleResponse.length; i++) {
                                                $(""#"" + RoleResponse[i]).show();
                                                if (RoleResponse[i] == ""View"") {
                                                    $("".Details"").show();
                                                }
                                                if (RoleResponse[i] == ""Update"") {
                                                    $(""."" + RoleResponse[i]).show();
                                                }
                                                if (RoleResponse[i] == ""Delete"") {
                                           ");
            WriteLiteral(@"         $("".Delete"").show();
                                                }
                                            }
                                            $(""#loader"").hide();
                                        }
                                    }
                                })
                            }
                        });
                        $(""#loader"").hide();
                    }
                    else {
                        row.child.hide();
                        tr.removeClass('shown');
                    }
                });

                $(""#Suitable"").addClass(""d-none"");
                $(""#Benefits"").removeClass(""d-none"");
                $("".Benefits"").addClass(""bg-blue"").removeClass(""border-blue"");
                $("".Benefits"").closest(""div"").addClass(""text-white"").removeClass(""text-blue"");
                if ($("".Suitable"").hasClass(""bg-blue"")) {
                    $("".Suitable"").removeClass(""bg-blue"").addClass(""borde");
            WriteLiteral(@"r-blue-top"").addClass(""border-blue-left"").addClass(""border-blue-right"");
                    $("".Suitable"").closest(""div"").addClass(""text-blue"").removeClass(""text-white"");
                }
            });
        }

    });
</script>
<script>
    function AssignRequestToUser(serialNumber, ServiceId, ServiceRequestType) {
        $(""#loader"").show();
        $.ajax({
            url: """);
#nullable restore
#line 944 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\ServiceRequests\ServiceRequestTest.cshtml"
             Write(Url.Action("GetEmployeesToAssign", "ServiceRequests"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
            method: ""GET"",
            data: { ""serialNumber"": serialNumber, ""ServiceId"": ServiceId, ""ServiceRequestType"": ServiceRequestType },
            success: function (response) {
                $(""#loader"").hide();
                $mymodal = $(""#ServiceRequest"");
                $mymodal.find(""div.modal-body"").html(response);
                $mymodal.modal(""show"");
            }
        });
    };

    function showRequest() {
        var _selectedValue = $(""#ServiceStatus"").val();
        if (_selectedValue != """") {
            var url = """);
#nullable restore
#line 959 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\ServiceRequests\ServiceRequestTest.cshtml"
                  Write(Url.Action("ServiceRequestTest", "ServiceRequests"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\";\r\n            url = url + \"?name=MyRequests&Status=\" + _selectedValue;\r\n            window.location.href = url;\r\n        }\r\n        else {\r\n            var url = \"");
#nullable restore
#line 964 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\ServiceRequests\ServiceRequestTest.cshtml"
                  Write(Url.Action("ServiceRequestTest", "ServiceRequests"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""";
            url = url + ""?name=MyRequests"";
            window.location.href = url;
        }
    }
</script>
<script>
    function RemoveService(serialNumber, ServiceId, ServiceRequestType) {
        event.preventDefault();
        const swalWithBootstrapButtons = Swal.mixin({
            customClass: {
                confirmButton: 'ms-3 btn btn-success',
                cancelButton: 'btn btn-danger'
            },
            buttonsStyling: false
        })

        $.ajax({
            url: """);
#nullable restore
#line 982 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\ServiceRequests\ServiceRequestTest.cshtml"
             Write(Url.Action("GetCurrentlyLoggedInUser", "ServiceRequests"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
            method: ""GET"",
            success: function (response) {
                $(""#loader"").hide();
                if (response == ""PRINCY05"" || response == ""princy05"" || response == ""TBC01"" || response == ""tbc01"") {
                    swalWithBootstrapButtons.fire({
                        title: 'Are you sure?',
                        text: ""You won't be able to revert this!"",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonText: 'Yes, delete it!',
                        cancelButtonText: 'No, cancel!',
                        reverseButtons: true,
                        showConfirmButton: true,
                    }).then((result) => {
                        if (result.isConfirmed) {
                            $(""#loader"").show();
                            $.ajax({
                                url: """);
#nullable restore
#line 1000 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\ServiceRequests\ServiceRequestTest.cshtml"
                                 Write(Url.Action("Delete", "ServiceRequests"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                                method: ""GET"",
                                data: { ""serialNumber"": serialNumber, ""ServiceId"": ServiceId, ""ServiceRequestType"": ServiceRequestType },
                                success: function (response) {
                                    $(""#loader"").hide();
                                    if (response < 0) {
                                        swalWithBootstrapButtons.fire({
                                            title: 'Error.',
                                            text: ""Something Went Wrong Please Try Again."",
                                            icon: 'error'
                                        }).then((result) => {
                                            window.location.reload();
                                        });
                                    }
                                    else {
                                        swalWithBootstrapButtons.fire({
                                ");
            WriteLiteral(@"            title: 'Deleted.',
                                            text: ""Service Request Deleted Successfully..!!"",
                                            icon: 'success'
                                        }).then((result) => {
                                            window.location.reload();
                                        });
                                    }
                                }
                            });
                        }
                        else if (
                            result.dismiss === Swal.DismissReason.cancel
                        ) {
                            $(""#loader"").hide();
                            swalWithBootstrapButtons.fire(
                                'Cancelled',
                                'Cancled by User..!! :)',
                                'error'
                            )
                        }
                    });
                }
                else {
   ");
            WriteLiteral(@"                 swalWithBootstrapButtons.fire({
                        title: 'Error.',
                        text: ""Something Went Wrong Please Try Again."",
                        icon: 'error'
                    }).then((result) => {
                        window.location.reload();
                    });
                }
            }
        });
    };
</script>
<script>
    function ApplyFilterToCompanyServiceDatatable() {
        var status = $(""#ServiceStatus"").val();
        if ($.fn.dataTable.isDataTable('#datatable')) {
            $('#datatable').DataTable().destroy();
            $('#datatable').empty();

            var table = $('#datatable').DataTable({
                ""processing"": true,
                ""serverSide"": true,
                ""filter"": false,
                ""ajax"": {
                    ""type"": ""post"",
                    ""datatype"": ""json"",
                    ""data"": function (oSettings, json) {
                        var info = Math.ceil(oSe");
            WriteLiteral(@"ttings.start / oSettings.length) + 1;
                        var sortingBy = $(""#sortingByCmp"").val();
                        var sortingOrder = $(""#sortingDirectionCmp"").val();
                        var searchBy = $(""#searchByValueCmp"").val();
                        var searchedValue = $(""#searchedValueCmp"").val();

                        var url = """);
#nullable restore
#line 1072 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\ServiceRequests\ServiceRequestTest.cshtml"
                              Write(Url.Action("GetAllCompanyServicesTempDate", "ServiceRequests"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""";
                        if (status != null && status != """") {
                            url = url + ""?status="" + status + ""&sortColumn="" + sortingBy + ""&sortColumnDirection="" + sortingOrder;
                        }
                        else {
                            url = url + ""?sortColumn="" + sortingBy + ""&sortColumnDirection="" + sortingOrder;
                        }
                        if (searchBy != """" && searchedValue != """") {
                            url = url + ""&searchBy="" + searchBy + ""&searchedValue="" + searchedValue;
                        }
                        url = url + ""&page="";
                        $('#datatable').DataTable().ajax.url(
                            url + info
                        );
                    }
                },
                ""responsive"": true,
                ""deferRender"": true,
                ""language"": {
                    'processing': '<div class=""spinner-2""><div class=""center-div-2""><div class=""loader-");
            WriteLiteral(@"circle-1""></div></div></div>'
                },
                ""columns"": [
                    { ""data"": ""serialNumber"", sTitle: ""SR No."" },
                    { ""data"": ""requestedBy"", sTitle: ""Created By"" },
                    { ""data"": ""createdOn"", sTitle: ""Created Date"" },
                    { ""data"": ""assignedOn"", sTitle: ""Assigned Date"" },
                    { ""data"": ""companyName"", sTitle: ""Company Name"" },
                    { ""data"": ""salesPerson"", sTitle: ""Sales Person"" },
                    { ""data"": ""requestedService"", sTitle: ""Service Request Type"" },
                    { ""data"": ""status"", sTitle: ""Status"" },
                    { ""data"": ""assignedUser"", sTitle: ""Assigned User(s)"" },
                    {
                        ""data"": function (data, full, meta) {
                            var url = """);
#nullable restore
#line 1105 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\ServiceRequests\ServiceRequestTest.cshtml"
                                  Write(Url.Action("TrackServiceRequest", "ServiceRequests"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""";
                            url = url + ""?SerialNumber="" + data.serialNumber + ""&Status="" + status + ""&name=MyRequests"" + ""&serviceRequestType=Company"";

                            var assignfun = ""AssignRequestToUser('"" + data.serialNumber + ""',"" + data.serviceId + "",'Company')"";

                            var removeService = ""RemoveService('"" + data.serialNumber + ""',"" + data.serviceId + "",'Company')"";

                            return '<a href=""' + url + '"" class=""btn btn-blue Details"">Track</a><a onclick=' + assignfun + ' role=""button"" class=""btn btn-blue ms-2 Update"">Assign Request</a><a onclick=' + removeService + ' role=""button"" class=""btn btn-blue ms-2 Delete"">Remove</a>';
                        },
                        sTitle: ""Action""
                    },
                ],
                ""initComplete"": function (settings, json) {
                    var jsonData = json[""currentPage""];
                    var displayData = json[""displayData""];
                    var so");
            WriteLiteral(@"rtColumnData = json[""sortColumnData""];
                    var sortColumnDirectionData = json[""sortColumnDirectionData""];
                    var searchByData = json[""searchByData""];
                    var searchedValueData = json[""searchedValueData""];
                    if (parseInt(jsonData) != 0) {

                        var currentPage = parseInt(jsonData) - 1;
                        table.page.len(displayData).draw('page');
                        table.page(currentPage).draw('page');
                        if (sortColumnData != null && sortColumnData != """")
                            $(""#sortingByCmp"").val(sortColumnData).change();
                        if (sortColumnDirectionData != null && sortColumnDirectionData != """")
                            $(""#sortingDirectionCmp"").val(sortColumnDirectionData).change();
                        if (searchByData != null)
                            $(""#searchByValueCmp"").val(searchByData).change();
                        if (searchedValu");
            WriteLiteral(@"eData != null && searchedValueData != """")
                            $(""#searchedValueCmp"").val(searchedValueData);
                    }
                    $("".Update"").hide();
                    $("".Delete"").hide();
                    $("".Details"").hide();
                    var module = $(""#Module"").val();
                    $.ajax({
                        url: """);
#nullable restore
#line 1143 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\ServiceRequests\ServiceRequestTest.cshtml"
                         Write(Url.Action("GetRolePermissionsName", "Permission"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\",\r\n                        method: \"GET\",\r\n                        data: { \"Module\": \"MyRequests\" },\r\n                        success: function (RoleResponse) {\r\n                            $.ajax({\r\n                                url: \"");
#nullable restore
#line 1148 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\ServiceRequests\ServiceRequestTest.cshtml"
                                 Write(Url.Action("GetUserPermissionsName", "Permission"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                                method: ""GET"",
                                data: { ""Module"": ""MyRequests"" },
                                success: function (UserResponse) {
                                    if (UserResponse.length > 0) {
                                        for (let i = 0; i < UserResponse.length; i++) {
                                            $(""#"" + UserResponse[i]).show();
                                            if (UserResponse[i] == ""View"") {
                                                $("".Details"").show();
                                            }
                                            if (UserResponse[i] == ""Update"") {
                                                $(""."" + UserResponse[i]).show();
                                            }
                                            if (UserResponse[i] == ""Delete"") {
                                                $("".Delete"").show();
                                            }
");
            WriteLiteral(@"                                        }
                                        $($.fn.dataTable.tables(true)).DataTable()
                                            .columns.adjust();
                                        $(""#loader"").hide();
                                    }
                                    else if (RoleResponse.length > 0) {
                                        for (let i = 0; i < RoleResponse.length; i++) {
                                            $(""#"" + RoleResponse[i]).show();
                                            if (RoleResponse[i] == ""View"") {
                                                $("".Details"").show();
                                            }
                                            if (RoleResponse[i] == ""Update"") {
                                                $(""."" + RoleResponse[i]).show();
                                            }
                                            if (RoleResponse[i] == ""Delete"") {
       ");
            WriteLiteral(@"                                         $("".Delete"").show();
                                            }
                                        }
                                        $($.fn.dataTable.tables(true)).DataTable()
                                            .columns.adjust();
                                        $(""#loader"").hide();
                                    }
                                }
                            })
                        }
                    });
                    $(""#loader"").hide();
                },
                ""drawCallback"": function (settings, json) {
                    $("".Update"").hide();
                    $("".Delete"").hide();
                    $("".Details"").hide();
                    var module = $(""#Module"").val();
                    $.ajax({
                        url: """);
#nullable restore
#line 1198 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\ServiceRequests\ServiceRequestTest.cshtml"
                         Write(Url.Action("GetRolePermissionsName", "Permission"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\",\r\n                        method: \"GET\",\r\n                        data: { \"Module\": \"MyRequests\" },\r\n                        success: function (RoleResponse) {\r\n                            $.ajax({\r\n                                url: \"");
#nullable restore
#line 1203 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\ServiceRequests\ServiceRequestTest.cshtml"
                                 Write(Url.Action("GetUserPermissionsName", "Permission"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                                method: ""GET"",
                                data: { ""Module"": ""MyRequests"" },
                                success: function (UserResponse) {
                                    if (UserResponse.length > 0) {
                                        for (let i = 0; i < UserResponse.length; i++) {
                                            $(""#"" + UserResponse[i]).show();
                                            if (UserResponse[i] == ""View"") {
                                                $("".Details"").show();
                                            }
                                            if (UserResponse[i] == ""Update"") {
                                                $(""."" + UserResponse[i]).show();
                                            }
                                            if (UserResponse[i] == ""Delete"") {
                                                $("".Delete"").show();
                                            }
");
            WriteLiteral(@"                                        }
                                        $($.fn.dataTable.tables(true)).DataTable()
                                            .columns.adjust();
                                        $(""#loader"").hide();
                                    }
                                    else if (RoleResponse.length > 0) {
                                        for (let i = 0; i < RoleResponse.length; i++) {
                                            $(""#"" + RoleResponse[i]).show();
                                            if (RoleResponse[i] == ""View"") {
                                                $("".Details"").show();
                                            }
                                            if (RoleResponse[i] == ""Update"") {
                                                $(""."" + RoleResponse[i]).show();
                                            }
                                            if (RoleResponse[i] == ""Delete"") {
       ");
            WriteLiteral(@"                                         $("".Delete"").show();
                                            }
                                        }
                                        $($.fn.dataTable.tables(true)).DataTable()
                                            .columns.adjust();
                                        $(""#loader"").hide();
                                    }
                                }
                            })
                        }
                    });
                    $(""#loader"").hide();
                },
                paging: true,
                pagingType: 'simple_numbers',
                ordering: false,
                searching: false,
                ""aLengthMenu"": [20, 30, 50],
                dom: ""<'row'<'col-sm-3'l><'col-sm-3'f><'col-sm-6'p>>"" +
                    ""<'row'<'col-sm-12'tr>>"" +
                    ""<'row'<'col-sm-5'i><'col-sm-7'p>>"",
            });

            $('#datatable tbody').on('click', 'td.");
            WriteLiteral(@"dtr-control', function () {

                var tr = $(this).closest('tr');
                var row = table.row(tr);
                if (!tr.hasClass(""shown"")) {
                    row.child.show();
                    tr.addClass('shown');
                    $("".Update"").hide();
                    $("".Delete"").hide();
                    $("".Details"").hide();

                    var module = $(""#Module"").val();
                    $.ajax({
                        url: """);
#nullable restore
#line 1270 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\ServiceRequests\ServiceRequestTest.cshtml"
                         Write(Url.Action("GetRolePermissionsName", "Permission"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\",\r\n                        method: \"GET\",\r\n                        data: { \"Module\": \"MyRequests\" },\r\n                        success: function (RoleResponse) {\r\n                            $.ajax({\r\n                                url: \"");
#nullable restore
#line 1275 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\ServiceRequests\ServiceRequestTest.cshtml"
                                 Write(Url.Action("GetUserPermissionsName", "Permission"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                                method: ""GET"",
                                data: { ""Module"": ""MyRequests"" },
                                success: function (UserResponse) {
                                    if (UserResponse.length > 0) {
                                        for (let i = 0; i < UserResponse.length; i++) {
                                            $(""#"" + UserResponse[i]).show();
                                            if (UserResponse[i] == ""View"") {
                                                $("".Details"").show();
                                            }
                                            if (UserResponse[i] == ""Update"") {
                                                $(""."" + UserResponse[i]).show();
                                            }
                                            if (UserResponse[i] == ""Delete"") {
                                                $("".Delete"").show();
                                            }
");
            WriteLiteral(@"                                        }
                                        $(""#loader"").hide();
                                    }
                                    else if (RoleResponse.length > 0) {
                                        for (let i = 0; i < RoleResponse.length; i++) {
                                            $(""#"" + RoleResponse[i]).show();
                                            if (RoleResponse[i] == ""View"") {
                                                $("".Details"").show();
                                            }
                                            if (RoleResponse[i] == ""Update"") {
                                                $(""."" + RoleResponse[i]).show();
                                            }
                                            if (RoleResponse[i] == ""Delete"") {
                                                $("".Delete"").show();
                                            }
                                      ");
            WriteLiteral(@"  }
                                        $(""#loader"").hide();
                                    }
                                }
                            })
                        }
                    });
                    $(""#loader"").hide();
                }
                else {
                    row.child.hide();
                    tr.removeClass('shown');
                }
            });

            //setInterval(function () {

            //    if (flag == false) {
            //        rezieFunction1();
            //    }

            //}, 800)

            //function rezieFunction1() {

            //    table.columns.adjust().draw();
            //    flag = true;
            //}
        }
    }
    function reziesFunction() {
        table.columns.adjust().draw();
    }
</script>

<script>
    function ApplyFilterToEmployeeServiceDatatable() {
        var status = $(""#ServiceStatus"").val();
        if ($.fn.dataTable.isDataTable('#datatabl");
            WriteLiteral(@"e-1')) {
            $('#datatable-1').DataTable().destroy();
            $('#datatable-1').empty();

            var table1 = $('#datatable-1').DataTable({
                ""processing"": true,
                ""serverSide"": true,
                ""filter"": false,
                ""ajax"": {
                    ""type"": ""post"",
                    ""datatype"": ""json"",
                    ""data"": function (oSettings, json) {
                        var info = Math.ceil(oSettings.start / oSettings.length) + 1;
                        var sortingBy = $(""#sortingByEmp"").val();
                        var sortingOrder = $(""#sortingDirectionEmp"").val();
                        var searchBy = $(""#searchByValueEmp"").val();
                        var searchedValue = $(""#searchedValueEmp"").val();

                        var url = """);
#nullable restore
#line 1362 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\ServiceRequests\ServiceRequestTest.cshtml"
                              Write(Url.Action("GetAllEmployeeServicesTempDate", "ServiceRequests"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""";
                        if (status != null && status != """") {
                            url = url + ""?status="" + status + ""&sortColumn="" + sortingBy + ""&sortColumnDirection="" + sortingOrder;
                        }
                        else {
                            url = url + ""?sortColumn="" + sortingBy + ""&sortColumnDirection="" + sortingOrder;
                        }
                        if (searchBy != """" && searchedValue != """") {
                            url = url + ""&searchBy="" + searchBy + ""&searchedValue="" + searchedValue;
                        }

                        url = url + ""&page="";
                        $('#datatable-1').DataTable().ajax.url(
                            url + info
                        );
                    }
                },
                ""responsive"": true,
                ""deferRender"": true,
                ""language"": {
                    'processing': '<div class=""spinner-2""><div class=""center-div-2""><div class=""loa");
            WriteLiteral(@"der-circle-1""></div></div></div>'
                },
                ""columns"": [
                    { ""data"": ""serialNumber"", sTitle: ""SR No."" },
                    { ""data"": ""requestedBy"", sTitle: ""Created By"" },
                    { ""data"": ""createdOn"", sTitle: ""Created Date"" },
                    { ""data"": ""assignedOn"", sTitle: ""Assigned Date"" },
                    { ""data"": ""companyName"", sTitle: ""Company Name"" },
                    { ""data"": ""salesPerson"", sTitle: ""Sales Person"" },
                    { ""data"": ""applicantName"", sTitle: ""Applicant Name"" },
                    { ""data"": ""requestedService"", sTitle: ""Service Request Type"" },
                    { ""data"": ""status"", sTitle: ""Status"" },
                    { ""data"": ""assignedUser"", sTitle: ""Assigned User(s)"" },
                    {
                        ""data"": function (data, full, meta) {
                            var url = """);
#nullable restore
#line 1397 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\ServiceRequests\ServiceRequestTest.cshtml"
                                  Write(Url.Action("TrackServiceRequest", "ServiceRequests"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""";
                            url = url + ""?SerialNumber="" + data.serialNumber + ""&Status="" + status + ""&name=MyRequests"" + ""&serviceRequestType=Employee"";

                            var assignfun = ""AssignRequestToUser('"" + data.serialNumber + ""',"" + data.serviceId + "",'Employee')"";

                            var removeService = ""RemoveService('"" + data.serialNumber + ""',"" + data.serviceId + "",'Employee')"";

                            return '<a href=""' + url + '"" class=""btn btn-blue Details"">Track</a><a onclick=' + assignfun + ' role=""button"" class=""btn btn-blue ms-2 Update"">Assign Request</a><a onclick=' + removeService + ' role=""button"" class=""Delete btn btn-blue ms-2"">Remove</a>';
                        },
                        sTitle: ""Action""
                    },
                ],
                ""initComplete"": function (settings, json) {
                    var jsonData = json[""currentPage""];
                    var displayData = json[""displayData""];
                    var");
            WriteLiteral(@" sortColumnData = json[""sortColumnData""];
                    var sortColumnDirectionData = json[""sortColumnDirectionData""];
                    var searchByData = json[""searchByData""];
                    var searchedValueData = json[""searchedValueData""];
                    if (parseInt(jsonData) != 0) {

                        var currentPage = parseInt(jsonData) - 1;
                        table1.page.len(displayData).draw('page');
                        table1.page(currentPage).draw('page');
                        if (sortColumnData != null && sortColumnData != """")
                            $(""#sortingByEmp"").val(sortColumnData).change();
                        if (sortColumnDirectionData != null && sortColumnDirectionData != """")
                            $(""#sortingDirectionEmp"").val(sortColumnDirectionData).change();
                        if (searchByData != null)
                            $(""#searchByValueEmp"").val(searchByData).change();
                        if (searche");
            WriteLiteral(@"dValueData != null && searchedValueData != """")
                            $(""#searchedValueEmp"").val(searchedValueData);
                    }
                    $("".Update"").hide();
                    $("".Delete"").hide();
                    $("".Details"").hide();
                    var module = $(""#Module"").val();
                    $.ajax({
                        url: """);
#nullable restore
#line 1435 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\ServiceRequests\ServiceRequestTest.cshtml"
                         Write(Url.Action("GetRolePermissionsName", "Permission"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\",\r\n                        method: \"GET\",\r\n                        data: { \"Module\": \"MyRequests\" },\r\n                        success: function (RoleResponse) {\r\n                            $.ajax({\r\n                                url: \"");
#nullable restore
#line 1440 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\ServiceRequests\ServiceRequestTest.cshtml"
                                 Write(Url.Action("GetUserPermissionsName", "Permission"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                                method: ""GET"",
                                data: { ""Module"": ""MyRequests"" },
                                success: function (UserResponse) {
                                    if (UserResponse.length > 0) {
                                        for (let i = 0; i < UserResponse.length; i++) {
                                            $(""#"" + UserResponse[i]).show();
                                            if (UserResponse[i] == ""View"") {
                                                $("".Details"").show();
                                            }
                                            if (UserResponse[i] == ""Update"") {
                                                $(""."" + UserResponse[i]).show();
                                            }
                                            if (UserResponse[i] == ""Delete"") {
                                                $("".Delete"").show();
                                            }
");
            WriteLiteral(@"                                        }
                                        $($.fn.dataTable.tables(true)).DataTable()
                                            .columns.adjust();
                                        $(""#loader"").hide();
                                    }
                                    else if (RoleResponse.length > 0) {
                                        for (let i = 0; i < RoleResponse.length; i++) {
                                            $(""#"" + RoleResponse[i]).show();
                                            if (RoleResponse[i] == ""View"") {
                                                $("".Details"").show();
                                            }
                                            if (RoleResponse[i] == ""Update"") {
                                                $(""."" + RoleResponse[i]).show();
                                            }
                                            if (RoleResponse[i] == ""Delete"") {
       ");
            WriteLiteral(@"                                         $("".Delete"").show();
                                            }
                                        }
                                        $($.fn.dataTable.tables(true)).DataTable()
                                            .columns.adjust();
                                        $(""#loader"").hide();
                                    }
                                }
                            })
                        }
                    });
                    $(""#loader"").hide();
                },
                ""drawCallback"": function (settings, json) {
                    $("".Update"").hide();
                    $("".Delete"").hide();
                    $("".Details"").hide();
                    var module = $(""#Module"").val();
                    $.ajax({
                        url: """);
#nullable restore
#line 1490 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\ServiceRequests\ServiceRequestTest.cshtml"
                         Write(Url.Action("GetRolePermissionsName", "Permission"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\",\r\n                        method: \"GET\",\r\n                        data: { \"Module\": \"MyRequests\" },\r\n                        success: function (RoleResponse) {\r\n                            $.ajax({\r\n                                url: \"");
#nullable restore
#line 1495 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\ServiceRequests\ServiceRequestTest.cshtml"
                                 Write(Url.Action("GetUserPermissionsName", "Permission"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                                method: ""GET"",
                                data: { ""Module"": ""MyRequests"" },
                                success: function (UserResponse) {
                                    if (UserResponse.length > 0) {
                                        for (let i = 0; i < UserResponse.length; i++) {
                                            $(""#"" + UserResponse[i]).show();
                                            if (UserResponse[i] == ""View"") {
                                                $("".Details"").show();
                                            }
                                            if (UserResponse[i] == ""Update"") {
                                                $(""."" + UserResponse[i]).show();
                                            }
                                            if (UserResponse[i] == ""Delete"") {
                                                $("".Delete"").show();
                                            }
");
            WriteLiteral(@"                                        }
                                        $($.fn.dataTable.tables(true)).DataTable()
                                            .columns.adjust();
                                        $(""#loader"").hide();
                                    }
                                    else if (RoleResponse.length > 0) {
                                        for (let i = 0; i < RoleResponse.length; i++) {
                                            $(""#"" + RoleResponse[i]).show();
                                            if (RoleResponse[i] == ""View"") {
                                                $("".Details"").show();
                                            }
                                            if (RoleResponse[i] == ""Update"") {
                                                $(""."" + RoleResponse[i]).show();
                                            }
                                            if (RoleResponse[i] == ""Delete"") {
       ");
            WriteLiteral(@"                                         $("".Delete"").show();
                                            }
                                        }
                                        $($.fn.dataTable.tables(true)).DataTable()
                                            .columns.adjust();
                                        $(""#loader"").hide();
                                    }
                                }
                            })
                        }
                    });
                    $(""#loader"").hide();
                },
                paging: true,
                pagingType: 'simple_numbers',
                ordering: false,
                searching: false,
                ""aLengthMenu"": [20, 30, 50],
                dom: ""<'row'<'col-sm-3'l><'col-sm-3'f><'col-sm-6'p>>"" +
                    ""<'row'<'col-sm-12'tr>>"" +
                    ""<'row'<'col-sm-5'i><'col-sm-7'p>>"",
            });
            $('#datatable-1 tbody').on('click', 'td.");
            WriteLiteral(@"dtr-control', function () {

                var tr = $(this).closest('tr');
                var row = table1.row(tr);
                if (!tr.hasClass(""shown"")) {
                    row.child.show();
                    tr.addClass('shown');
                    $("".Update"").hide();
                    $("".Delete"").hide();
                    $("".Details"").hide();

                    var module = $(""#Module"").val();
                    $.ajax({
                        url: """);
#nullable restore
#line 1561 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\ServiceRequests\ServiceRequestTest.cshtml"
                         Write(Url.Action("GetRolePermissionsName", "Permission"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\",\r\n                        method: \"GET\",\r\n                        data: { \"Module\": \"MyRequests\" },\r\n                        success: function (RoleResponse) {\r\n                            $.ajax({\r\n                                url: \"");
#nullable restore
#line 1566 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\ServiceRequests\ServiceRequestTest.cshtml"
                                 Write(Url.Action("GetUserPermissionsName", "Permission"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                                method: ""GET"",
                                data: { ""Module"": ""MyRequests"" },
                                success: function (UserResponse) {
                                    if (UserResponse.length > 0) {
                                        for (let i = 0; i < UserResponse.length; i++) {
                                            $(""#"" + UserResponse[i]).show();
                                            if (UserResponse[i] == ""View"") {
                                                $("".Details"").show();
                                            }
                                            if (UserResponse[i] == ""Update"") {
                                                $(""."" + UserResponse[i]).show();
                                            }
                                            if (UserResponse[i] == ""Delete"") {
                                                $("".Delete"").show();
                                            }
");
            WriteLiteral(@"                                        }
                                        $(""#loader"").hide();
                                    }
                                    else if (RoleResponse.length > 0) {
                                        for (let i = 0; i < RoleResponse.length; i++) {
                                            $(""#"" + RoleResponse[i]).show();
                                            if (RoleResponse[i] == ""View"") {
                                                $("".Details"").show();
                                            }
                                            if (RoleResponse[i] == ""Update"") {
                                                $(""."" + RoleResponse[i]).show();
                                            }
                                            if (RoleResponse[i] == ""Delete"") {
                                                $("".Delete"").show();
                                            }
                                      ");
            WriteLiteral(@"  }
                                        $(""#loader"").hide();
                                    }
                                }
                            })
                        }
                    });
                    $(""#loader"").hide();
                }
                else {
                    row.child.hide();
                    tr.removeClass('shown');
                }
            });

            //setInterval(function () {

            //    if (flag == false) {
            //        rezieFunction1();
            //    }

            //}, 800)

            //function rezieFunction1() {

            //    table1.columns.adjust().draw();
            //    flag = true;
            //}
        }
    }
</script>

<script>
    $(""#searchByValueCmp"").on('change', function () {
        var selectedValue = $(""#searchByValueCmp"").val();

        if (selectedValue == ""Created On"") {
            $(""#searchedValueCmp"").val("""");
            $(""#searchedVa");
            WriteLiteral(@"lueCmp"").datepicker({
                format: 'dd-mm-yyyy',
                changeMonth: true,
                changeYear: true,
                autoclose: true,
                todayHighlight: true,
            })

            $(""#searchedValueCmp"").attr(""readonly"", ""readonly"");
        }
        else if (selectedValue == ""Assigned Date"") {
            $(""#searchedValueCmp"").val("""");
            $(""#searchedValueCmp"").datepicker({
                format: 'dd-mm-yyyy',
                changeMonth: true,
                changeYear: true,
                autoclose: true,
                todayHighlight: true,
            })

            $(""#searchedValueCmp"").attr(""readonly"", ""readonly"");
        }
        else {
            $(""#searchedValueCmp"").datepicker(""destroy"");
            $(""#searchedValueCmp"").removeAttr(""readonly"");
            $(""#searchedValueCmp"").val("""");
        }
    });

    $(""#searchByValueEmp"").on('change', function () {
        var selectedValue = $(""#searchBy");
            WriteLiteral(@"ValueEmp"").val();

        if (selectedValue == ""Created On"") {
            $(""#searchedValueEmp"").val("""");
            $(""#searchedValueEmp"").datepicker({
                format: 'dd-mm-yyyy',
                changeMonth: true,
                changeYear: true,
                autoclose: true,
                todayHighlight: true,
            })

            $(""#searchedValueEmp"").attr(""readonly"", ""readonly"");
        }
        else if (selectedValue == ""Assigned Date"") {
            $(""#searchedValueEmp"").val("""");
            $(""#searchedValueEmp"").datepicker({
                format: 'dd-mm-yyyy',
                changeMonth: true,
                changeYear: true,
                autoclose: true,
                todayHighlight: true,
            })

            $(""#searchedValueEmp"").attr(""readonly"", ""readonly"");
        }
        else {
            $(""#searchedValueEmp"").datepicker(""destroy"");
            $(""#searchedValueEmp"").removeAttr(""readonly"");
            $(""#searched");
            WriteLiteral(@"ValueEmp"").val("""");
        }
    });

    function ClearFilterToDatatable() {
        window.location.reload();
    }
</script>
<script>
    $(function () {
        $(""#Insert"").hide();
        $(""#View"").hide();
        $("".Update"").hide();
        $("".Delete"").hide();
        $("".Details"").hide();
    });
</script>
<script>
    $(function () {
        var module = $(""#Module"").val();
        $(""#loader"").show();
        $.ajax({
            url: """);
#nullable restore
#line 1716 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\ServiceRequests\ServiceRequestTest.cshtml"
             Write(Url.Action("GetRolePermissionsName", "Permission"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\",\r\n            method: \"GET\",\r\n            data: { \"Module\": \"MyRequests\" },\r\n            success: function (RoleResponse) {\r\n                $(\"#loader\").show();\r\n                $.ajax({\r\n                    url: \"");
#nullable restore
#line 1722 "D:\Devotion Business\DIBN\DIBN\Areas\Admin\Views\ServiceRequests\ServiceRequestTest.cshtml"
                     Write(Url.Action("GetUserPermissionsName", "Permission"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                    method: ""GET"",
                    data: { ""Module"": ""MyRequests"" },
                    success: function (UserResponse) {
                        $(""#loader"").show();
                        if (UserResponse.length > 0) {
                            for (let i = 0; i < UserResponse.length; i++) {
                                $(""#"" + UserResponse[i]).show();
                                if (UserResponse[i] == ""View"") {
                                    $("".Details"").show();
                                }
                                if (UserResponse[i] == ""Update"") {
                                    $(""."" + UserResponse[i]).show();
                                }
                                if (UserResponse[i] == ""Delete"") {
                                    $(""."" + UserResponse[i]).show();
                                }
                            }
                            $(""#loader"").hide();
                        }
              ");
            WriteLiteral(@"          else if (RoleResponse.length > 0) {
                            for (let i = 0; i < RoleResponse.length; i++) {
                                $(""#"" + RoleResponse[i]).show();
                                if (RoleResponse[i] == ""View"") {
                                    $("".Details"").show();
                                }
                                if (RoleResponse[i] == ""Update"") {
                                    $(""."" + RoleResponse[i]).show();
                                }
                                if (RoleResponse[i] == ""Delete"") {
                                    $(""."" + RoleResponse[i]).show();
                                }
                            }
                            $(""#loader"").hide();

                        } else {
                            alert(""You don't have any permission for this module."");
                            $(""#loader"").hide();
                        }
                    }
                })
     ");
            WriteLiteral(@"       }
        });
        $(""#loader"").hide();
    });
</script>
<script>
    $(window).resize(function () {
        var allRows = $('#datatable tbody tr');
        allRows.each(function () {
            var tr = $(this).closest('tr');
            var row = $($.fn.dataTable.tables(true)).DataTable().row(tr);
            if (tr.hasClass(""shown"")) {
                row.child.hide();
                tr.removeClass('shown');
                tr.removeClass('parent');
            }
        });

        var allRows1 = $('#datatable-1 tbody tr');
        allRows1.each(function () {
            var tr = $(this).closest('tr');
            var row = $($.fn.dataTable.tables(true)).DataTable().row(tr);
            if (tr.hasClass(""shown"")) {
                row.child.hide();
                tr.removeClass('shown');
                tr.removeClass('parent');
            }
        });
    });
</script>");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<DIBN.Areas.Admin.Models.GetBothRequestModel> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
